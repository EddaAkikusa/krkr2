Author: 渡邊剛(go@denpa.org)
Date: 2009/4/29

●Object/Thread機能

疑似スレッド処理のフレームワークのコードが追加されています。
詳細は sqobject/readme.txt を参照してください。
関連して sq コマンドも Object 機能が組み込まれています。
※ Thread は対応させていません

●squirrelAPI追加

in 演算子相当の APIを追加

/**
 * スタックから値を取り出して、その値が idx で示される要素中に存在するか判定する
 * @param v VM
 * @param idx 確認対象のインデックス
 * @return 存在していたら SQTrue
 */
SQUIRREL_API SQBool sq_exists(HSQUIRRELVM v,SQInteger idx);

●squirrel機能追加

以下のような機能が標準delegate/標準ライブラリに拡張されています。

◇数学関数追加

min(...) 引数で最小のものを返す (スクリプト上での < での比較と等価)
max(...) 引数で最大のものを返す (スクリプト上での > での比較と等価)
iabs(v)  整数専用のabs

◇数学関数仕様変更

abs(v)  整数なら iabs, 実数なら fabs 扱い

◇文字列関数仕様変更

format(fmt, ...)  %s の場合は、パラメータに対して規定の文字列
　　　　　　　　　変換処理を行ってから処理するように仕様変更。
　　　　　　　　　文字列以外を渡してもエラーにならず確実に実行できます。

◇文字列関数追加

printf(fmt, ...) 書式付きprint。print(format(fmt, ...)) と等価

◇数値変換仕様変更

 tointeger(), tofloat(), tonumber() での文字列からの置換の際、
 先頭が 0x で始まっていると、16進数、0b で始まっていると
 2進数として変換されます。

◇共通 delegate 追加

 tonumber()   　　数値に変換する。tostring() 同様、すべての型に定義されてます。

 整数→整数
 実数→実数
 文字列→整数または実数。変換失敗の場合は例外ではなく 0 を返す
 その他→0

 tointeger() や tofloat() とは異なり、例外や null は返しません。

◇文字列 delegate 追加

substr(index[,length])　　部分文字列の取得(サイズ指定)
charAt(index)		  index位置の文字を取得  ※substr(index,1)と等価
replace(from, to)	  from を to に置換             ※正規表現不可
split(delim)		  delimを区切り文字列として分割 ※正規表現不可

mbnext(index=0)           index位置のマルチバイト文字のバイト数を返す
                          UNICODE 版は常に1を返します。
                          それ以外では、コンパイル時に USESJISが定義されて
                          あればSJIS文字列、それ以外では UTF-8 文字列
                          として処理されます。
	                  ※SJIS版では頭から順次処理しないと値は保証されません
mblen() 		  マルチバイト文字列の長さを返す
mbsubstr(index[,length])  マルチバイト文字列の部分文字列を取得する

◇配列 delegate 追加

erase(index)		  remove(index) の別名
removeValue(v[,all=true]) 配列中でvと値が一致するものを削除
find(value)               要素 value を持つインデックスを返す
findall(value)            要素 value を持つインデックスの配列を返す
includes(value)           要素 value を含むなら true を返す
includeCount(value)       要素 value を含む数を返す

◇テーブル delegate 追加

keys()			  キー一覧を配列で返す
find(value)               要素 value を持つキーを返す
findall(value)            要素 value を持つキーの配列を返す
includes(value)           要素 value を含むなら true を返す
includeCount(value)       要素 value を含む数を返す

◇auxライブラリグローバル関数追加

※sqstd_seterrorhandlers() 呼び出し時に併せて登録

printCallStack()	   スタックの内容をコンソールに表示
notifyAllExceptions(value) 全例外のエラー表示通知を行うかどうかを指定
