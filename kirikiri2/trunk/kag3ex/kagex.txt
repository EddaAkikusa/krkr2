Title: 吉里吉里/KAGEXについて
Author: 合資会社ワムソフト 渡邊剛

●吉里吉里/KAGEX 概要

吉里吉里/KAG に対して主にレイヤ機能面で大きく拡張を行ったシステムです。

KAG の基本機能はそのまま維持されています。KAG の詳細については

 http://devdoc.kikyou.info/tvp/docs/kag3doc/contents/

を参照してください。

●フォルダ構成

原則として KAG に準じます。

krkr.exe		吉里吉里実行ファイル本体
plugin/			プラグイン
tools/			関連ツール
savedata/		セーブデータ
data/			データ領域
	system/		システムファイル
	bgimage/	背景ファイル用
	bgm/		BGMファイル用
	fgimage/	前景ファイル用
	image/		その他画像
	others/		その他データ
	rule/		画面更新用ルール画像
	scenario/	シナリオファイル
	sound/		サウンドデータ
	video/		動画データ
    voice/      ボイスデータ
	startup.tjs	吉里吉里起動ファイル
	envinit.tjs	システム定義ファイル（KAG拡張用）

基本的に素材のファイルを指定するときはパス名はつけず、
ファイル名のみの自動探索によって探しています。自動探索の
指定を追加する場合は Initialize.tjs の記述に準じた記述を
Storages.tjs に追加してください。

●拡張内容解説

◇レイヤ拡張

◆特殊レイヤの追加

次の２枚の全画面レイヤが拡張されています。

stage	背景レイヤの上、前景レイヤの下にさしこまれるレイヤ
event	前景レイヤの上、メッセージレイヤの下にさしこまれるレイヤ
		
※正確には前景レイヤはレベルによって位置が変化します

本来の KAG での「背景」は base レイヤを使うのですが、この base レイヤ
に対しては、吉里吉里の実装上の制限から、移動が伴う指定を行うことが
できません。このため、背景の回転用途のために別途専用レイヤを
導入しました。

また「イベント画面」の表示の便宜のため、前景レイヤの上に表示できる
専用レイヤを準備しました。

次のようなレイヤ構造になります

-- -- -- --  messages (KAGメッセージレイヤ）
-- -- -- --  layers   (KAG前景レイヤ:level5〜8)
-----------  event
-- -- -- --  layers   (KAG前景レイヤ:level0〜4)
-----------  stage  
-----------  base    （KAG背景レイヤ）

◆前景レイヤへのレベルの導入

KAG 本来の前景レイヤは番号順の表示順をもっています。
KAGEX では、レベル」という概念を持ち、レベル単位で表示順が決定されます。

・レベルが小さいレイヤ群ほど下に表示されます
・同じレベルの中で「最前列」「最後列」の表示制御が可能です

◆layopt (拡張)

stage / event および 前景レイヤに対して、従来の layopt に加えて
以下の属性を追加で利用できるようになります。

属性
	rotate  角度
	zoomx   横方向拡大率
	zoomy   縦方向拡大率
	zoom    拡大率
	afx     回転・拡大原点X座標 center/left/right 
			または数値でレイヤの左上隅からの座標
	afy     回転・拡大原点Y座標 center/top/bottom
			または数値でレイヤの左上隅からの座標
	type    合成モード
			※http://devdoc.kikyou.info/tvp/docs/kr2doc/contents/index.html
	reset   アクションと属性指定をすべて初期化する
			※opacity と type は画像ロード時のものに初期化されます

◆laylevel (新規)

前景レイヤの表示レベルを指定します。

属性
	layer (前景レイヤのみ)
	page (省略時は fore)  
	level  表示レベル
	    表示レベル：layfront/layback でのグルーピング対象です。
	    表示レベルが大きいほど上に表示されます。

◆layfront (新規)

前景レイヤを同じ表示レベルの最前列に移動させます

属性
	layer (前景レイヤのみ)
	page (省略時は fore)  

◆layback (新規)

前景レイヤを同じ表示レベルのレイヤの最後列に移動させます

属性
	layer (前景レイヤのみ)
	page (省略時は fore)  

◆clearlayers (新規)

全レイヤの内容を消去して表示停止します。

属性
	page 表か裏

◆action (新規)

stage / event および 前景レイヤに対して、
レイヤに対する自動アクション駆動を指定します

属性
	layer レイヤの指定（前景/stage/event のみ)
	page 表裏の指定
	module アクションの種類を指定
	
※その他アクション毎に属性パラメータがあります。
　アクションの種別については action.txt を参照してください。

◆stopaction (新規)

指定されたレイヤのアクションを停止します。
指定を省略した場合は全レイヤのアクションを停止します。

属性
	layer レイヤの指定（前景/stage/event のみ)
	page 表裏の指定

◆wact (新規)

指定されたレイヤのアクションの終了を待ちます。
指定を省略した場合は全レイヤのアクションの終了を待ちます。

属性
	layer レイヤの指定（前景/stage/event のみ)
	page 表裏の指定
	canskip 値 true(デフォルト) または false
			true を指定するとクリックで待ちをスキップできます

◆button (拡張)

画像ボタンのファイルを個別指定できるよう拡張してあります。

属性
	normal	通常時画像
	over    マウスオーバー時画像	省略時は normalと同じ
	on		押し下げ時画像			省略時は over と同じ
	focus	フォーカス時画像		省略時は focus と同じ

◆slider (新規)

メッセージレイヤにスライドバーを配置します。

属性
	exp			commit 時の代入先
	bgcolor		背景の色
	opacity		背景の透明度
	value		連動変数名。指定されると、
				(1)指定された変数を初期値として参照
				(2)変更時に指定された変数に値を代入
                を行う。これを指定すると onchange, onchangefunc は無効
	position	初期値
	onchange	変更値を代入する変数名
    onchangefunc 変更したとき呼び出される関数を指定
                 func(position, dragging); の形で呼び出される
　　　　　　　　 指定すると onchange は無効

	base		背景画像名。
				指定した場合は width と height は背景画像のサイズになる
	width		背景幅
	height		背景高さ
	tab			タブ画像（一括) normal / on / over の順で横に並んだ画像を指定
	normal		タブ画像通常（分離）
	over		タブ画像マウスオーバー（分離）
	on			タブ画像プッシュダウン時（分離）

	nohighlicht ハイライトしない
    jumpmode    ジャンプモード（スライダーのベースをクリックするとそこに移動）

◆sysbutton (新規)

メッセージレイヤにシステムボタンを配置します。
システムボタンは ct でも消去されません。

属性
	 button に準じます

◆csysbutton (新規)

システムボタンを消去します

◆timeout (新規)

カレントのメッセージレイヤにタイムアウト処理を追加します。
[s] によって入力待ちになったとき、current のメッセージレイヤに
対してこの値が指定されていると有効になります。指定された時間が
たつとスクリプト実行、あるいは指定されたシナリオに遷移します。

属性
	time		タイムアウトまでの時間
	storage		タイムアウト時の遷移先
	target		タイムアウト時の遷移先
	exp			タイムアウト時に実行するスクリプト
	cickse		実行時のSE
	clicksebuf	実行時のSEのバッファ指定

◆click (新規)

カレントのメッセージレイヤにクリック処理を追加します。
リンクが配置されてない部分をクリックしたときの処理を登録します。

属性
	storage		クリック時の遷移先
	target		クリック時の遷移先
	exp			クリック時に実行するスクリプト
	cickse		実行時のSE
	clicksebuf	実行時のSEのバッファ指定

◆beginskip (新規)

クリックされた場合に endskip まで強制スキップ処理します。
beginskip から endskip までのあいだにスキップ関連の
処理を基本的にいれないでください。誤動作する可能性があります。
※ジャンプなどで別シナリオに遷移した場合は解除されます

beginskip は入れ子にすることができません。
入れ子にするとエラーになります。

◆endskip (新規)

特殊スキップモードの終了を示すタグです

◇サウンドトラック拡張

◆サウンド制御全般

音量制御の方法

　直接指定
    KAG の [bgmopt] [seopt] タグを使うことでボリュームを直接制御できます
  
  フェード指定
    KAG の [fadebgm] [fadese] タグを使うことで演奏中にボリュームをフェード
　　制御できます。
 
  ループの制御
    吉里吉里ループチューナを使ってください
　　http://devdoc.kikyou.info/tvp/docs/kr2doc/contents/LoopTuner.html

    これを使うと、たとえば
      bgm01.ogg に対して bgm01.ogg.sli というループ情報が格納された
　　　ファイルが生成されます。吉里吉里はこれを参照してループの制御を
　　　行っています。

  任意位置からの開始（拡張機能）
　　(1) ループチューナで開始したい位置にラベルをうつ
    (2) playbgm / playse / fadeinbgm / fadeinse の start ラベルで指定

◆playbgm/playse/fadeinbgm/fadeinse (拡張)

任意位置から生成できるように拡張しました

属性
	start  開始位置の指定。ループチューナで指定したラベル名を指定する

◆fadepausebgm (新命令)

BGMのフェードアウトしながらの一時停止

属性
	time	時間(ms単位)
			フェードアウトを行っている時間を ms 単位で指定します。
			3000 と指定すれば 3 秒間の間、フェードアウトを行っています。


◆setbgmstop (新命令)

BGM が停止した際に行う処理を登録する。
BGM が変更された場合はこの指定は自動的に消去されます。

属性
	storage		BGM終了時の遷移先
	target		BGM終了時の遷移先
	exp			BGM終了時に実行するスクリプト	

◆clearbgmstop (新命令)

setbgmstop の設定を消去する


◆setbgmlabel (新命令)

BGM がラベル通過した際に行う処理を登録する。複数登録可能です。
BGM が変更された場合はこの指定は自動的に消去されます。

属性
	name		ラベル名称
	storage		ラベル通過時の遷移先
	target		ラベル通過時の遷移先
	exp			ラベル通過時に実行するスクリプト	

◆clearbgmlabel (新命令)

setbgmlabel の設定を消去する

◇表示系拡張

◆linemode (新規)

KAG の改行に対するルールを切り替えます。
これを用いることで、メッセージ窓スタイルの作品の場合に
[l]や[cm]などを明示的に記述しなくてもよくなります。

※注意点 linemode が有効な場合は ignoreCR 指定が強制でONの状態になります

属性
	mode	line または page
			未指定の場合は通常の KAG の動作に戻ります。

改行: テキストに直接入力されている改行コードによる改行のことです
空行: 改行のみの行が１行以上続いていることをさします
[r] タグによる改行は純粋にメッセージ窓への改行として機能します。

line の場合
	改行：[l] を実行する
	空行：無視
	[p] ：通常機能

page の場合
	改行：[p] ＋ページの自動消去
	空行：無視

vn の場合
	改行：[l] を実行する
	空行:[p] ＋ページの自動消去

tex の場合:
	改行:無視
	空行:[p] ＋ページの自動消去

free の場合:
	改行:改行
	空行:[p] ＋ページの自動消去

自動消去は「次の行のテキスト表示開始時」に [er] によって行われます。
[p] 直後に行いたい場合には、erafterpage を有効にしてください。

さらに、ラインモードが有効な場合、行頭にある

【名前/表示名】

という記述に対して、
名前表示コマンド namedisp(名前,表示名) が自動的に呼び出されます。
デフォルトでは namedisp は表示テキストをそのまま表示するだけです。
「ワールド拡張」を行った場合の処理については world.txt を参照してください。

◆craftername（新規）

line モードの名前表記【名前/表示名】の直後の改行の挙動を変更します

属性
	mode	true なら名前直後の改行を無視する。false なら通常の改行扱い

--------------------------------------
【瑠璃子】くすくす

【瑠璃子】
くすくす
--------------------------------------

true の場合はいずれの表記も等価になります

◆erafterpage（新規）

[p] 直後に自動的に [er] 動作を行うかどうかを指定します。

属性
	mode	true なら [p] の処理の直後に [er] 動作を行うようになる。

注意点
　これが有効な場合、line モードの自動消去
　（次のテキスト表示直前に消去）は行われません。

◆autoindent (新規)

有効にすると、名前直後に “「”　または　“『”があった場合
に自動的にインデント処理します。

属性
	mode	true または false

◆autolabelmode (新規)

有効にすると [p] 毎に栞への保存が可能になります。
※ラインモードが有効な場合は 仮想的な [p] 毎にも有効です。

あわせて既読管理も通常の単純なラベル単位ではなく、
ラベル＋ラベルからの行カウント単位になります。

属性
	mode	true または false

注意点：
　モードの混在はお勧めできません。first.ks で有効にしたあとは
  変更しないようにしてください。

　このモードで記録されたデータは復帰処理が行番号に依存するため、
　シナリオデータが書き換わった場合の保存データの復帰がラベル
　よりも保障されづらくなります。ご注意ください。

◇選択肢機能拡張（新規）

Link とは異なる専用の選択肢機能です。

◆selopt

選択肢用条件初期化

属性
	normal	ボタンノーマル画像
	over    ボタンオーバー画像
	left	ボタン配置領域左上
	top		ボタン配置領域右上
	width	ボタン配置領域サイズ
	height	ボタン配置領域サイズ

◆seladd

選択肢を登録します

属性
  text    表示するテキスト
　storage 選択した場合にジャンプする先のファイル指定
  target  選択した場合にジャンプする先のラベル指定
  exp     選択した時に実行するコード

  変数指定の場合は exp を、直接分岐する場合は
  storage/target を使ってください

◆select

  選択処理実行

  storage/target が指定してあった場合は、選択処理のあと、
  その先にジャンプします。exp の場合はそのまま [select] の
  次の行から継続実行になります。

◆mselinit

マップ選択肢を初期化します。登録された情報は消去されます。

◆mselbutton

マップ選択用のボタンを登録します

属性
	image		画像指定。
	width		画像横幅指定(省略可能)
	height		画像縦幅指定(省略可能)
	count		画像中のアニメパターン指定(heightと排他で省略可能)

	マップ選択用の画像は　
     縦方向：アニメパターン　
　　 横方向：normal over の順に並べる
　　といった形の画像にします。アニメパターン数を count で指定します。

◆mselpos

マップ選択用のボタンの配置位置を登録します

属性
	name		位置の名前
	left		X方向座標
	top			Y報告座標

複数の選択が同じ場所に指定された場合は、
座標位置を中心にして左右方向に配置されます。

◆mseladd

選択肢を登録します。

属性
  text    表示するターゲット (mselopt で登録したもの)
  pos     表示する位置 (mse で登録したもの)
　storage 選択した場合にジャンプする先のファイル指定
  target  選択した場合にジャンプする先のラベル指定
  exp     選択した時に実行するコード

◆mselopt

マップ選択肢用のオプションを指定します

属性
	interval		配置選択肢のアニメーションのインターバル
	buttonWidth		ボタンを複数配置するときのボタン間の幅
	enterse			enter 時 SE 指定
	leavese			leave 時 SE 指定
	clickse			click 時 SE 指定
	frame			背景画像指定
	frameKey
	frameColor
	frameOpacity

◆mselect

  選択処理実行

◇シーン回想機能（新規）

「シーン回想」を実現するための補助機能です。

A: シナリオ中指定の場合

1. シーン回想したい部分を 
-------------------
*kaisouBegin番号
......
*kaisouEnd番号
-------------------
のラベルで囲んでおきます。

2. recollection 命令で no 指定でシーン回想を呼び出すことができます。

この方式の場合は、セーブデータを利用して回想処理を行います。
このため、セーブデータの不整合の影響をうけるので注意が必要です

B: 回想用シナリオを別途準備する場合

1. 回想用のシナリオを本来の本文とは別に準備します
   そのシナリオの末尾には endrecollection  命令をいれておきます
2. recoillection 命令で storage/target 指定でシーン回想シナリオを呼び出します

◆recollection

回想処理を呼び出す。 (kag.startRecollection(elm) と等価)
呼び出しに成功した場合に処理は戻ってこないので注意が必要です。

no での呼び出しが成功するためには *kaisouBegin番号　のラベルを
通過しておく必要ががあります。システムフラグの 
trail_シナリオ_*kaisouBegin番号を参照することで通過を確認できます。
この場合は、*kaisouEnd番号 のラベルで処理が終了します

no 指定でなく storage/target での指定も可能です。この場合は、
endrecollection 命令で回想を終了させることができます。

属性
	no 回想番号
	storage 回想用シナリオ
	target  回想用ターゲット
	doneStorage 回想終了後に呼び出されるシナリオ
	doneTarget  回想終了後に呼び出されるラベル


回想処理中は…
・kag.isRecollection が true になります
・栞の保存関連の処理が禁止されます
・常に既読扱いになります

◆endrecollection

回想処理を終了させます。
recollection で登録済みの終了処理に遷移します。

◆stoprecollection

回想処理を強制終了します。
回想状態が解除されます。

◇ askYesNo 関数の仕様変更

askYesNo 関係の挙動が大幅な仕様変更となっています。
KAG で独自に使用していた場合はコードを全面的に改定する
必要があるため注意してください。

従来のもの： 

  askYesNo(メッセージ, タイトル)

　ダイアログが処理が終わるまで TJS の実行がブロックされ、YES/NO の結果が
　返される

新規のもの：

  askYesNo(メッセージ, タイトル, yesFunc, noFunc, param, doneFunc);

  yesFunc  : YES のときに実行する処理
  noFunc   : NO の場合に実行する処理
  param    : それぞれのファンクションに渡すパラメータ
  doneFunc : yes の場合、no の場合いずれの場合にも実行される処理

  帰り値：なし
　　
　注意点：
　　ただちに実行復帰する「可能性」があるので、それを想定した
　　実装を行う必要があります。

◇レイヤダイアログ拡張

仕様未確定につき詳細は未公開

◇MessageWindow 拡張

「名前レイヤ」

「表情レイヤ」

  に対する拡張が行われています。

◇システムプロパティ拡張

以下のような特殊なシステムパラメータが拡張されています

◆動作制御用変数

allskip		false: 既読のみスキップ true: 全てスキップ
afterauto	false: 選択肢でAUTO解除 true: 選択後もAUTO継続
afterskip	false: 選択肢でSKIP解除 true: 選択後もSKIP継続

◆コンビニエントプロパティ

textspeed		テキスト速度指定 0〜10　(10だと瞬間表示)
autospeed		自動再生待ち時間 0〜10
drawspeed       エフェクト系の描画速度調整 1.0:通常 0:瞬間
noeffect        drawspeed に対するコンビニエント指定 true/false で指定
bgmenable		BGM が有効
bgmvolume		BGM のボリューム 0〜100
seenable		SE が有効
sevolume		SE のボリューム  0〜100

◆ボイス関連プロパティ・メソッド

※これらは KAGEX 単体では意味をもちません。変数に値を格納しているだけです。
  WORLD 拡張のボイス機能が値として参照しています

voiceenable					ボイスが有効
voicevolume     			ボイスのボリューム 0〜100
getVoiceOn(name)	        指定された名前のキャラのボイスが有効かどうか
getVoiceVolume(name)        指定された名前のキャラのボイスのボリュームの取得
setVoiceVolkume(name,vol)   指定された名前のキャラのボイスのボリュームの指定


