*animstart
.shortinfo
 アニメーションの開始
.remarks
 {\b animstartタグ} ( アニメーションの開始 )\par \par 　アニメーションを、指定したセグメントで、指定したラベルから開始します。\par 　セグメントは、一つのレイヤ、一つのアニメーション定義ファイル ( asd ファイル ) で複数のアニメーションを同時に実行するための概念で、一つのレイヤで複数のセグメントを使用でき、各セグメントで同時に別々のラベルからアニメーションを開始することができます。\par 　セグメント 0 は特別なセグメントで、レイヤに画像が読み込まれたのと同時に実行されるアニメーションで、このタグや animstop タグではセグメント 0 は指定できません。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　アニメーションを開始するレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。　指定したレイヤには、アニメーション情報が読み込まれていないとなりません。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:seg
+shortinfo
 セグメント
+required
 yes
+format
 1 以上の整数
+info
 {\b seg属性} ( セグメント )\par 必申{? : {\b yes} \par 値 : {\b 1 以上の整数} \par \par　この属性で指定したセグメント番号でアニメーションを開始します。\par 　異なるセグメント番号では同時に複数のアニメーションを実行できます。\par 　セグメント番号は任意の番号を指定できますが、必要以上に大きな番号を指定しないでください。また、セグメント 0 は指定できません。\par 
.attrib:target
+shortinfo
 開始ラベル
+required
 yes
+format
 開始ラベル名
+info
 {\b target属性} ( 開始ラベル )\par 必申{? : {\b yes} \par 値 : {\b 開始ラベル名} \par \par　アニメーションを開始するための asd ファイル中のラベルを指定します。\par 　linkタグなどと同じように、* (アステリスク) を忘れないようにしてください。

*animstop
.shortinfo
 アニメーションの停止
.remarks
 {\b animstopタグ} ( アニメーションの停止 )\par \par 　任意のセグメントのアニメーションを停止します。\par 　このタグはアニメーションの終了を待ちません。アニメーションの終了を待つにはwa タグを使用してください。\par 　アニメーションがループしている場合、asd ファイル上で home タグを通過するまでアニメーションは停止しません。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　アニメーションを停止するレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。　指定したレイヤには、アニメーション情報が読み込まれていないとなりません。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:seg
+shortinfo
 セグメント
+required
 yes
+format
 1 以上の整数
+info
 {\b seg属性} ( セグメント )\par 必申{? : {\b yes} \par 値 : {\b 1 以上の整数} \par \par　この属性で指定したセグメント番号のアニメーションを停止します。\par 　セグメント番号 0 は指定できません。

*autowc
.shortinfo
 自動ウェイト
.remarks
 {\b autowcタグ} ( 自動ウェイト )\par \par 　特定の文字の後に指定文字数分のウェイトを入れることができます。\par 　ch 属性で指定した文字が表\示された後、time 属性で指定した時間がウェイトとして入ります。\par 　文字は ch タグで複数指定できて、それに対応してそれぞれの文字に time 属性でタイミングを指定できます。\par \par 例:\par {\f3 [autowc enabled=true ch="、。・" time="3,5,3"]\par ; ↑ "、。・" の各文字に対してそれぞれ 3, 5, 3 文字数分のウェイトを入れる}
.attrib:enabled
+shortinfo
 自動ウェイトを有効にするか
+required
 no
+format
 true または false
+info
 {\b enabled属性} ( 自動ウェイトを有効にするか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　自動ウェイトを有効にする場合は true を、無効にするには false を指定します。\par 　省略すれば設定は変更されません。
.attrib:ch
+shortinfo
 自動ウェイトを入れる文字
+required
 no
+format
 対象の文字
+info
 {\b ch属性} ( 自動ウェイトを入れる文字 )\par 必申{? : {\b no} \par 値 : {\b 対象の文字} \par \par　自動ウェイトを入れる文字を指定します。指定された文字のあとに、time 属性で指定した文字数分のウェイトが入ります。\par 　省略すれば設定は変更されません。
.attrib:time
+shortinfo
 ウェイト
+required
 no
+format
 ウェイト(文字数単位)
+info
 {\b time属性} ( ウェイト )\par 必申{? : {\b no} \par 値 : {\b ウェイト(文字数単位)} \par \par　自動ウェイトを入れる時間を文字数単位で指定します。\par 　ch 属性で指定した文字それぞれに対して、カンソ}で区切って時間を指定できます。\par 　一つしか時間を指定しなかった場合は ch タグで指定したすべての文字にその時間が設定されます。\par 　この属性を省略した場合は 4 を指定したと見なされます。\par 

*backlay
.shortinfo
 レイヤ情報の表ページから裏ページへのコピー
.remarks
 {\b backlayタグ} ( レイヤ情報の表\ページから裏ページへのコピー )\par \par 　指定したレイヤ、あるいはすべてのレイヤの情報を、表\ページから裏ページにコピーします。\par 　コピーされるのは、copylay タグでコピーされる情報と同じです。\par 　trans タグは表\ページのレイヤの画像を裏ページのレイヤの画像に置き換えます。そのため、トランジション前にこの backlay タグで画像を裏ページに転送し、裏ページでレイヤを操作してから、トランジションを行うという方法に用います。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 no
+format
 "base" または 0 以上の整数2 または message0 または message1 または message
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b no} \par 値 : {\b "base" または 0 以上の整数2 または message0 または message1 または message} \par \par　対象となるレイヤを指定します。\par 　base を指定すると 背景レイヤ になります。\par 　0 以上の整数を指定すると前景レイヤになります。\par 　message0 または message1 を指定するとメッセージレイヤになります。単に message とのみ指定した場合は、current タグで指定した現在の操作対象のメッセージレイヤが対象になります ( 裏ページのメッセージレイヤが操作対象であってもそのメッセージレイヤの表\ページ→裏ページへのコピーが行われます )。\par 　省略すると、すべてのレイヤの情報が裏ページにコピーされます。\par 

*bgmopt
.shortinfo
 BGM の設定
.remarks
 {\b bgmoptタグ} ( BGM の設定 )\par \par 　BGM のさまざまな設定を変更します。
.attrib:volume
+shortinfo
 音量
+required
 no
+format
 音量% (0〜100)
+info
 {\b volume属性} ( 音量 )\par 必申{? : {\b no} \par 値 : {\b 音量% (0〜100)} \par \par　BGM の音量を % で指定します。初期状態の KAG では100 % です。省略すれば音量は変更されません。\par 　100 が上限です。音量の予}制のみをサポートします(増幅は音源の特性上、できません)。
.attrib:gvolume
+shortinfo
 大域音量
+required
 no
+format
 音量% (0〜100)
+info
 {\b gvolume属性} ( 大域音量 )\par 必申{? : {\b no} \par 値 : {\b 音量% (0〜100)} \par \par　BGM の大域音量を % で指定します。初期状態の KAG では100 % です。省略すれば音量は変更されません。\par 　大域音量は volume 属性で指定する通常の音量とは別に、BGM の音量を制御することができるもう一つのものです。実際に再生される音量は、通常の音量と大域音量を掛け合わせた音量になります( たとえば volume=50 で gvolume=75 ならば 50(%)*75(%)=37.5(%) )\par 　大域音量はシステム変数に記録され、次回起動時にも引き継がれます ( 各栞に保存されるわけではありません )。

*button
.shortinfo
 グラフィカルボタン
.remarks
 {\b buttonタグ} ( グラフィカルソ{タン )\par \par 　現在のメッセージレイヤ上に link タグと同様にリンクを作成しますが、画像を用いたソ{タンを作成します。\par 　ソ{タンが作成される位置は locate タグで指定した位置が画像の左上点になりますので、このタグを使う前に locate タグで位置を指定してください。このタグは文字表\示位置を移動しません。\par 　graphic 属性で指定する画像は、\par ・通常の状態\par ・ソ{タンが押された状態\par ・ソ{タンの上にソ}ウスカーソ\ルがある状態\par 　の3つの画像が左から順に横並びになった画像です。一つの画像に、同じサイズの３つの状態の画像が横に並んだ形式になっています。つまり、この属性で指定する画像は、ソ{タンの横幅の３能{の横幅を持つことになります。\par 　このタグを使う場合は、なるべく s タグですぐに選択肢待ちにしてください。
.attrib:graphic
+shortinfo
 ボタンにする画像
+required
 yes
+format
 画像ファイル名
+info
 {\b graphic属性} ( ソ{タンにする画像 )\par 必申{? : {\b yes} \par 値 : {\b 画像ファイル名} \par \par　ソ{タンにする画像を指定します。\par 　imageタグの storage 属性を参照してください。\par 
.attrib:graphickey
+shortinfo
 画像のカラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b graphickey属性} ( 画像のカラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \parソ{タンにする画像のカラーキーを指定します。\par 　imageタグの key 属性を参照してください。\par 
.attrib:storage
+shortinfo
 シナリオファイル名
+required
 no
+format
 シナリオファイル名
+info
 {\b storage属性} ( シナリオファイル名 )\par 必申{? : {\b no} \par 値 : {\b シナリオファイル名} \par \par　ジャンプ先のシナリオファイルを指定します。省略すると、現在のシナリオファイル内であると見なされます。
.attrib:target
+shortinfo
 ラベル名
+required
 no
+format
 ラベル名
+info
 {\b target属性} ( ラベル名 )\par 必申{? : {\b no} \par 値 : {\b ラベル名} \par \par　ジャンプ先のラベルを指定します。\par 　省略すると、ファイルの先頭から実行されます。\par 
.attrib:recthit
+shortinfo
 矩形で当たり判定を行うかどうか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b recthit属性} ( 矩形で当たり判定を行うかどうか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　矩形で当たり判定を行うかどうかを指定します。true が指定されていると、ソ{タンの表\示されている矩形全域でソ}ウスのクリックなどに反応します。false が指定されていると、ソ{タンの不透明度が 64 未満の領域ではソ}ウスのクリックなどに反応しなくなります。\par 　省略すると true が指定されたと見なされます。\par 
.attrib:exp
+shortinfo
 TJS 式
+required
 no
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b no} \par 値 : {\b TJS 式} \par \par　クリックされたときに実行される TJS 式を指定します。省略すれば式は実行されません。storage や target が指定されていた場合、この式が実行されてからジャンプ先に移動します。
.attrib:hint
+shortinfo
 ツールチップヒント
+required
 no
+format
 ヒントとして表示させる文字列
+info
 {\b hint属性} ( ツールチップヒント )\par 必申{? : {\b no} \par 値 : {\b ヒントとして表\示させる文字列} \par \par　リンクを選択し、ソ}ウスカーソ\ルを静止させたときに表\示されるツールチップヒントを指定します。\par 　省略すると表\示は行われません。\par 
.attrib:onenter
+shortinfo
 マウス進入時
+required
 no
+format
 TJS 式
+info
 {\b onenter属性} ( ソ}ウス進入時 )\par 必申{? : {\b no} \par 値 : {\b TJS 式} \par \par　ソ{タン内にソ}ウスカーソ\ルが入ってきたときに実行される TJS 式を指定します。
.attrib:onleave
+shortinfo
 マウス退出時
+required
 no
+format
 TJS 式
+info
 {\b onleave属性} ( ソ}ウス退出時 )\par 必申{? : {\b no} \par 値 : {\b TJS 式} \par \par　ソ{タン内からソ}ウスカーソ\ルが出ていった時に実行される TJS 式を指定します。
.attrib:countpage
+shortinfo
 このジャンプを「読んだ」と見なすか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b countpage属性} ( このジャンプを「読んだ」と見なすか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　ソ{タンを選択して他のラベルに移行するときに、このリンクのある場所のラベルを「読んだ」とみなすかどうかを指定します。\par 　[s] タグを実行する前にソ{タンが選択されてジャンプする際に、そのページが「読んだ」ことになっては困る場合に false を指定します。
.attrib:clickse
+shortinfo
 クリック時の効果音
+required
 no
+format
 効果音ファイル名
+info
 {\b clickse属性} ( クリック時の効果音 )\par 必申{? : {\b no} \par 値 : {\b 効果音ファイル名} \par \par　クリックされたときに再生する効果音を指定します。指定しなければ効果音は再生されません。
.attrib:clicksebuf
+shortinfo
 クリック時の効果音のバッファ番号
+required
 no
+format
 効果音バッファ番号
+info
 {\b clicksebuf属性} ( クリック時の効果音のバッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号} \par \par　clickse で指定した効果音を鳴らす効果音バッファを指定します。省略すると 0 であると見なされます。
.attrib:enterse
+shortinfo
 マウス進入時の効果音
+required
 no
+format
 効果音ファイル名
+info
 {\b enterse属性} ( ソ}ウス進入時の効果音 )\par 必申{? : {\b no} \par 値 : {\b 効果音ファイル名} \par \par　ソ}ウスが進入したときに再生する効果音を指定します。指定しなければ効果音は再生されません。
.attrib:entersebuf
+shortinfo
 マウス進入時の効果音のバッファ番号
+required
 no
+format
 効果音バッファ番号
+info
 {\b entersebuf属性} ( ソ}ウス進入時の効果音のバッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号} \par \par　enterse で指定した効果音を鳴らす効果音バッファを指定します。省略すると 0 であると見なされます。
.attrib:leavese
+shortinfo
 マウス退出時の効果音
+required
 no
+format
 効果音ファイル名
+info
 {\b leavese属性} ( ソ}ウス退出時の効果音 )\par 必申{? : {\b no} \par 値 : {\b 効果音ファイル名} \par \par　ソ}ウスが退出したときに再生する効果音を指定します。指定しなければ効果音は再生されません。
.attrib:leavesebuf
+shortinfo
 マウス退出時の効果音のバッファ番号
+required
 no
+format
 効果音バッファ番号
+info
 {\b leavesebuf属性} ( ソ}ウス退出時の効果音のバッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号} \par \par　leavese で指定した効果音を鳴らす効果音バッファを指定します。省略すると 0 であると見なされます。

*call
.shortinfo
 サブルーチンの呼び出し
.remarks
 {\b callタグ} ( サブルーチンの呼び出し )\par \par 　指定されたシナリオファイルの指定されたラベルで示されるサブルーチンを呼び出します。\par 　呼び出されたサブルーチンは、 return タグで呼び出し元や任意の場所に戻ることができます。\par 
.attrib:storage
+shortinfo
 シナリオファイル名
+required
 no
+format
 シナリオファイル名
+info
 {\b storage属性} ( シナリオファイル名 )\par 必申{? : {\b no} \par 値 : {\b シナリオファイル名} \par \par　呼び出したいサブルーチンのあるのシナリオファイルを指定します。省略すると、現在のシナリオファイル内であると見なされます。
.attrib:target
+shortinfo
 ラベル名
+required
 no
+format
 ラベル名
+info
 {\b target属性} ( ラベル名 )\par 必申{? : {\b no} \par 値 : {\b ラベル名} \par \par　呼び出すサブルーチンのラベルを指定します。\par 　省略すると、ファイルの先頭から実行されます。\par 
.attrib:countpage
+shortinfo
 このジャンプを「読んだ」と見なすか
+required
 no
+format
 false(デフォルト) または true
+info
 {\b countpage属性} ( このジャンプを「読んだ」と見なすか )\par 必申{? : {\b no} \par 値 : {\b false(デフォルト) または true} \par \par　他のラベルに移行するときに、このタグのある場所のラベルを「読んだ」とみなすかどうかを指定します。\par 　サブルーチンを呼び出す際に、呼び出し元のページがその時点で「読まれた」ことにしたい場合に true を指定します。

*cancelautomode
.shortinfo
 「自動的に読み進む」の解除
.remarks
 {\b cancelautomodeタグ} ( 「自動的に読み進む」の解除 )\par \par 　「自動的に読み進む」を強制的に解除します。\par 

*cancelskip
.shortinfo
 スキップの解除
.remarks
 {\b cancelskipタグ} ( スキップの解除 )\par \par 　スキップ状態の解除を行います。\par 　スキップ状態とは、クリックスキップ ( メッセージ表\示途中で画面をクリックすることによりクリック待ちまで一気に文章を表\示する機能\ ) と、「次の選択肢まですすむ」でスキップが行われている状態の事です。\par 　「次の選択肢まで進む」機能\自体が無効になったり、クリックスキップの機能\自体がそれ以降無効になったりするわけではありません。

*ch
.shortinfo
 文字を表示する
.remarks
 {\b chタグ} ( 文字を表\示する )\par \par 　文字を current タグで指定したメッセージレイヤに表\示します。普通は使いません。\par 　KAG 内部では、通常の文字は、一文字一文字すべてがこのタグに分解されて処理されます。
.attrib:text
+shortinfo
 表示する文字
+required
 yes
+format
 文字
+info
 {\b text属性} ( 表\示する文字 )\par 必申{? : {\b yes} \par 値 : {\b 文字} \par \par　ここで指定した文字が表\示されます。\par 　複数の文字を指定できますが、自動改行はされません ( メッセージ履歴レイヤもここで複数の文字を指定された場合は改行されません )。また、複数の文字を指定した場合は一気に表\示されます ( nowait で表\示するよりもかなり高速 )。通常は一文字のみを指定します。\par 

*checkbox
.shortinfo
 チェックボックスの作成
.remarks
 {\b checkboxタグ} ( チェックソ{ックスの作成 )\par \par 　現在操作対象になっているメッセージレイヤの、現在の位置に、チェックソ{ックスを作成します。\par 　チェックソ{ックスの状態は、commit タグが実行されるまで、指定した変数に代入されることはありません。\par 　commit タグが実行されると、チェックソ{ックスがチェックされていれば 1 が、チェックされていなければ 0 が変数に入ります。\par 
.attrib:name
+shortinfo
 変数名
+required
 yes
+format
 変数名
+info
 {\b name属性} ( 変数名 )\par 必申{? : {\b yes} \par 値 : {\b 変数名} \par \par　チェックソ{ックスの状態を格納する変数を指定します。\par 　変数が 0 (または未定義)ならばチェックされていない、0 でなければチェックされているとみなされます。\par 　もし変数がすでに 0 以外であれば、チェックソ{ックスはチェックされた状態で作成されます。
.attrib:bgcolor
+shortinfo
 背景色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b bgcolor属性} ( 背景色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　背景色を 0xRRGGBB 形式で指定します。
.attrib:opacity
+shortinfo
 背景色の不透明度
+required
 no
+format
 0(完全透明) 〜 255(完全不透明)
+info
 {\b opacity属性} ( 背景色の不透明度 )\par 必申{? : {\b no} \par 値 : {\b 0(完全透明) 〜 255(完全不透明)} \par \par　bgcolor 属性で指定した背景色の不透明度を 0 〜 255 で指定します。
.attrib:color
+shortinfo
 チェックマークの色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b color属性} ( チェックソ}ークの色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　チェックソ}ークの色を 0xRRGGBB 形式で指定します。

*clearsysvar
.shortinfo
 システム変数の全消去
.remarks
 {\b clearsysvarタグ} ( システム変数の全消去 )\par \par 　システム変数をすべて消去します。

*clearvar
.shortinfo
 ゲーム変数の全消去
.remarks
 {\b clearvarタグ} ( ゲーム変数の全消去 )\par \par 　ゲーム変数をすべて消去します。すべてのゲーム変数は未定義になります。

*clickskip
.shortinfo
 クリックスキップの設定
.remarks
 {\b clickskipタグ} ( クリックスキップの設定 )\par \par 　クリックスキップとは、メッセージ表\示途中で画面をクリックすることにより、トランジションや自動移動を中断したり、クリック待ちまで一気に文章を表\示する機能\です。\par 　デモシーンなどでは無効にしていたほうがいい場合があります。\par 
.attrib:enabled
+shortinfo
 有効・無効の設定
+required
 yes
+format
 true または false
+info
 {\b enabled属性} ( 有効・無効の設定 )\par 必申{? : {\b yes} \par 値 : {\b true または false} \par \par　クリックスキップ機能\を有効にする場合は true、無効にする場合はfalse を指定します。

*close
.shortinfo
 ウィンドウを閉じる
.remarks
 {\b closeタグ} ( ウィンドウを閉じる )\par \par 　ウィンドウを閉じます。終了確認があります ( バージョン情報ダイアログでは終了確認は出ません )。\par 

*cm
.shortinfo
 すべてのメッセージレイヤのクリア
.remarks
 {\b cmタグ} ( すべてのメッセージレイヤのクリア )\par \par 　すべてのメッセージレイヤのクリアを行います。\par 　すべてのメッセージレイヤの文字は消去されますが、ct タグのように操作対象のメッセージレイヤが表\ページの message0 に指定されるようなことはありません。このタグを実行後も操作対象のレイヤは同じです。\par 　font タグで指定した文字の属性、style タグで指定したスタイルはすべて標準状態に戻ります。ただし、position タグや layopt タグで指定した属性は引き継がれます。\par 　「*ラベル名|見出し名」 形式のラベルの次には、この cm タグあるいは ct タグを書くべきです。( 栞のロード時にはラベルから実行が始まるが、ロード時には必ずメッセージレイヤ上の文字がクリアされるため )。\par 

*commit
.shortinfo
 フォーム内容の確定
.remarks
 {\b commitタグ} ( フォーム内容の確定 )\par \par 　現在操作対象になっているメッセージレイヤ上のすべてのエディットやチェックソ{ックスなどの「フォーム要素」の内容を確定します。\par 　内容が確定されると、フォーム要素で編集されていた文字列や状態が、各変数に実際に代入されます。\par 　各フォーム要素は er や ct タグのようなメッセージレイヤを消去する系のタグで消去されてしまいますので、そのまえにcommit タグを実行する必要があります。\par 例:\par {\f3 *editname\par @er\par 名字 : [edit name="f.sname" length=200][r]\par 名前 : [edit name="f.name" length=200][r]\par [link target=*ok]OK[endlink][r]\par [link target=*cancel]キャンセル[endlink][s]\par *ok\par ; OK が選択された\par ; commit を行って変数に代入を行う\par [commit]\par [jump target=*exit]\par *cancel\par ; キャンセルが選択された\par ; commit は行わない\par [jump target=*exit]\par }

*copybookmark
.shortinfo
 栞のコピー
.remarks
 {\b copybookmarkタグ} ( 栞のコピー )\par \par 　非フリーセーブモードにおいて、from 属性で指定された番号の栞から to 属性で指定された番号の栞へ内容のコピーを行います。
.attrib:from
+shortinfo
 コピー元の栞番号
+required
 yes
+format
 0または正の整数
+info
 {\b from属性} ( コピー元の栞番号 )\par 必申{? : {\b yes} \par 値 : {\b 0または正の整数} \par \par　コピー元の栞の番号を指定します。省略すると 0 が指定されたと見なされます。
.attrib:to
+shortinfo
 コピー先の栞番号
+required
 yes
+format
 0または正の整数
+info
 {\b to属性} ( コピー先の栞番号 )\par 必申{? : {\b yes} \par 値 : {\b 0または正の整数} \par \par　コピー先の栞の番号を指定します。省略すると 0 が指定されたと見なされます。

*copylay
.shortinfo
 レイヤ情報のコピー
.remarks
 {\b copylayタグ} ( レイヤ情報のコピー )\par \par 　指定したレイヤの情報をコピーします。\par 　ただし、同種のレイヤ ( 背景レイヤ同士、前景レイヤ同士、メッセージレイヤ同士 )でのみコピーできます。\par 
.attrib:srclayer
+shortinfo
 コピー元レイヤ
+required
 yes
+format
 "base" または 0 または 1 または 2 または message0 または message1 または message
+info
 {\b srclayer属性} ( コピー元レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 または 1 または 2 または message0 または message1 または message} \par \par　コピー元となるレイヤを指定します。\par 　この属性と srcpage 属性で指定したレイヤがコピー元になります。\par 　base を指定すると 背景レイヤ になります。\par 　0 または 1 または 2 を指定すると前景レイヤになります。\par 　message0 または message1 を指定するとメッセージレイヤになります。単に message とのみ指定した場合は、current タグで指定した現在の操作対象のメッセージレイヤが対象になります。\par 
.attrib:destlayer
+shortinfo
 コピー先レイヤ
+required
 yes
+format
 "base" または 0 または 1 または 2 または message0 または message1 または message
+info
 {\b destlayer属性} ( コピー先レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 または 1 または 2 または message0 または message1 または message} \par \par　コピー先となるレイヤを指定します。\par 　この属性と destpage 属性で指定したレイヤがコピー先になります。\par 　base を指定すると 背景レイヤ になります。\par 　0 または 1 または 2 を指定すると前景レイヤになります。\par 　message0 または message1 を指定するとメッセージレイヤになります。単に message とのみ指定した場合は、current タグで指定した現在の操作対象のメッセージレイヤが対象になります。\par 
.attrib:srcpage
+shortinfo
 コピー元ページ
+required
 no
+format
 "fore" または "back"
+info
 {\b srcpage属性} ( コピー元ページ )\par 必申{? : {\b no} \par 値 : {\b "fore" または "back"} \par \par　コピー元となるページを指定します。\par 　この属性と srclayer 属性で指定したレイヤがコピー元になります。\par 　"fore" を指定すると表\ページ、"back" を指定すると裏ページになります。省略すると "fore" を指定したと見なされます。\par 
.attrib:destpage
+shortinfo
 コピー先ページ
+required
 no
+format
 "fore" または "back"
+info
 {\b destpage属性} ( コピー先ページ )\par 必申{? : {\b no} \par 値 : {\b "fore" または "back"} \par \par　コピー先となるページを指定します。\par 　この属性と destlayer 属性で指定したレイヤがコピー元になります。\par 　"fore" を指定すると表\ページ、"back" を指定すると裏ページになります。省略すると "fore" を指定したと見なされます。\par 

*ct
.shortinfo
 メッセージレイヤのリセット
.remarks
 {\b ctタグ} ( メッセージレイヤのリセット )\par \par 　メッセージレイヤをリセットします。\par 　すべてのメッセージレイヤの文字は消去され、操作対象のメッセージレイヤは表\ページの message0 に指定されます。\par 　font タグで指定した文字の属性、style タグで指定したスタイルはすべて標準状態に戻ります。ただし、position タグや layopt タグで指定した属性は引き継がれます。\par 　これに対し、er タグは、現在の操作対象のメッセージレイヤ上の文字を消去したり文字やスタイルの属性を標準状態に戻したりするだけです。\par 　「*ラベル名|見出し名」 形式のラベルの次には、この ct タグあるいは cm タグを書くべきです。( 栞のロード時にはラベルから実行が始まるが、ロード時には必ずメッセージレイヤ上の文字がクリアされるため )。\par 

*current
.shortinfo
 操作対象のメッセージレイヤの指定
.remarks
 {\b currentタグ} ( 操作対象のメッセージレイヤの指定 )\par \par 　操作対象とするメッセージレイヤを指定します。以後、文章やfont タグでの文字属性の指定、lタグ等のクリック待ちなどは、このレイヤに対して行われます。\par 　message0 はデフォルトで可視の状態ですが、message1 は layopt タグ等で visible=true としないと表\示されないので注意してください。
.attrib:layer
+shortinfo
 レイヤ名
+required
 no
+format
 "message0" または "message1"
+info
 {\b layer属性} ( レイヤ名 )\par 必申{? : {\b no} \par 値 : {\b "message0" または "message1"} \par \par　操作対象とするメッセージレイヤを指定します。\par 
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "fore"(デフォルト) または "back"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "fore"(デフォルト) または "back"} \par \par　 表\(fore)画面のレイヤを対象とするか、裏(back)画面のレイヤを対象とするかを指定します。省略すると表\ページであると見なされます。\par 
.attrib:withback
+shortinfo
 裏ページにも描画するか
+required
 no
+format
 true または false (デフォルト)
+info
 {\b withback属性} ( 裏ページにも描画するか )\par 必申{? : {\b no} \par 値 : {\b true または false (デフォルト)} \par \par　表\ページが対象の場合、裏ページにも同様に文字を描画するかを指定します。この属性を省略すると false が指定されたとみなされます。　裏ページに同時に文字を描画する必要があるのは、同時にトランジションを進行させる場合などです。

*cursor
.shortinfo
 マウスカーソルの変更
.remarks
 {\b cursorタグ} ( ソ}ウスカーソ\ルの変更 )\par \par 　ソ}ウスカーソ\ルを変更します。いずれの属性も省略すれば設定は変わりません。\par 　cr で始まるソ}ウスカーソ\ル定数については、吉里吉里 SDK ヘルプの「ソ}ウスカーソ\ル定数一覧」を参照してください。また、その場合は {\f3 default=&amp;crArrow} のように、定数の前に &amp; 記号をつけて指定してください。\par 　ソ}ウスカーソ\ルファイルには、.cur または .ani の拡張子を持つソ}ウスカーソ\ルファイルを指定することができます ( 拡張子は省略しないでください )。\par 
.attrib:default
+shortinfo
 通常のマウスカーソル
+required
 no
+format
 cr で始まるカーソル定数 または カーソルファイル名
+info
 {\b default属性} ( 通常のソ}ウスカーソ\ル )\par 必申{? : {\b no} \par 値 : {\b cr で始まるカーソ\ル定数 または カーソ\ルファイル名} \par \par通常のソ}ウスカーソ\ルを指定します。\par 
.attrib:pointed
+shortinfo
 ポイントした時のマウスカーソル
+required
 no
+format
 cr で始まるカーソル定数 または カーソルファイル名
+info
 {\b pointed属性} ( ポイントした時のソ}ウスカーソ\ル )\par 必申{? : {\b no} \par 値 : {\b cr で始まるカーソ\ル定数 または カーソ\ルファイル名} \par \parリンクやソ{タンをポイントしたときのソ}ウスカーソ\ルを指定します。\par 
.attrib:click
+shortinfo
 クリック待ちのマウスカーソル
+required
 no
+format
 cr で始まるカーソル定数 または カーソルファイル名
+info
 {\b click属性} ( クリック待ちのソ}ウスカーソ\ル )\par 必申{? : {\b no} \par 値 : {\b cr で始まるカーソ\ル定数 または カーソ\ルファイル名} \par \parクリック待ちのソ}ウスカーソ\ルを指定します。\par 
.attrib:draggable
+shortinfo
 ドラッグ可能の時のマウスカーソル
+required
 no
+format
 cr で始まるカーソル定数 または カーソルファイル名
+info
 {\b draggable属性} ( ドラッグ可能\の時のソ}ウスカーソ\ル )\par 必申{? : {\b no} \par 値 : {\b cr で始まるカーソ\ル定数 または カーソ\ルファイル名} \par \parposition タグで draggable=true としたときに、ソ}ウスがメッセージレイヤをドラッグ可能\な位置に来たときに表\示されるソ}ウスカーソ\ルを指定します。\par 

*deffont
.shortinfo
 デフォルトの文字属性設定
.remarks
 {\b deffontタグ} ( デフォルトの文字属性設定 )\par \par 　現在操作対象のメッセージレイヤに対する、デフォルトの文字属性を指定します。\par 　各属性の詳細については fontタグを指定してください。ただし属性の値として "default" を指定することはできません。\par 　ここで指定した属性は、resetfont タグで実際に反映されます。\par 　逆に言うと、このタグを実行しただけではすぐにはフォントの属性は反映されません。resetfont タグを実行する必要があります。
.attrib:size
+shortinfo
 文字サイズ
+required
 no
+format
 文字サイズ(pixel単位)
+info
 {\b size属性} ( 文字サイズ )\par 必申{? : {\b no} \par 値 : {\b 文字サイズ(pixel単位)} \par \par　デフォルトの文字サイズを指定します。\par 
.attrib:face
+shortinfo
 フォント名
+required
 no
+format
 フォント名 または "user"
+info
 {\b face属性} ( フォント名 )\par 必申{? : {\b no} \par 値 : {\b フォント名 または "user"} \par \par　デフォルトのフォント名を指定します。\par 
.attrib:color
+shortinfo
 文字色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b color属性} ( 文字色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　デフォルトの文字色を指定します。\par 
.attrib:rubysize
+shortinfo
 ルビのサイズ
+required
 no
+format
 ルビの文字サイズ(pixel単位)
+info
 {\b rubysize属性} ( ルビのサイズ )\par 必申{? : {\b no} \par 値 : {\b ルビの文字サイズ(pixel単位)} \par \par　デフォルトのルビの文字のサイズを指定します。\par 
.attrib:rubyoffset
+shortinfo
 ルビの表示位置
+required
 no
+format
 ルビの表示オフセット(pixel単位)
+info
 {\b rubyoffset属性} ( ルビの表\示位置 )\par 必申{? : {\b no} \par 値 : {\b ルビの表\示オフセット(pixel単位)} \par \par　デフォルトのルビの表\示オフセットを指定します。\par 
.attrib:shadow
+shortinfo
 影を表示するか
+required
 no
+format
 true または false
+info
 {\b shadow属性} ( 影を表\示するか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　デフォルトで文字に影をつけるかを指定します。\par 
.attrib:edge
+shortinfo
 袋文字にするか
+required
 no
+format
 true または false
+info
 {\b edge属性} ( 袋文字にするか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　デフォルトで文字を袋文字 ( 縁取り文字 ) にするかを指定します。\par 
.attrib:edgecolor
+shortinfo
 袋文字の袋の色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b edgecolor属性} ( 袋文字の袋の色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　デフォルトの文字の袋の色を指定します。\par 
.attrib:shadowcolor
+shortinfo
 影の色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b shadowcolor属性} ( 影の色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　デフォルトの影の色を指定します。\par 
.attrib:bold
+shortinfo
 太文字にするか
+required
 no
+format
 true または false
+info
 {\b bold属性} ( 太文字にするか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　デフォルトで文字を太文字にするかを指定します。\par 

*defstyle
.shortinfo
 デフォルトのスタイルの設定
.remarks
 {\b defstyleタグ} ( デフォルトのスタイルの設定 )\par \par 　現在操作対象のメッセージレイヤに対する、デフォルトの行のスタイルを指定します。\par 　各属性の詳細については styleタグを指定してください。ただし属性の値として "default" を指定することはできません。\par 　ここで指定した属性は、resetstyle タグで実際に反映されます。\par 　逆に言うと、このタグを実行しただけではすぐにはフォントの属性は反映されません。resetstyle タグを実行する必要があります。
.attrib:linespacing
+shortinfo
 行間
+required
 no
+format
 行間 (pixel単位)
+info
 {\b linespacing属性} ( 行間 )\par 必申{? : {\b no} \par 値 : {\b 行間 (pixel単位)} \par \par　デフォルトの行間を指定します。\par 
.attrib:pitch
+shortinfo
 字間
+required
 no
+format
 字間オフセット(pixel単位)
+info
 {\b pitch属性} ( 字間 )\par 必申{? : {\b no} \par 値 : {\b 字間オフセット(pixel単位)} \par \par　デフォルトの字間のオフセットを pixel 単位で指定します。\par 
.attrib:linesize
+shortinfo
 文字サイズの予約サイズ
+required
 no
+format
 予約サイズ(pixel単位)
+info
 {\b linesize属性} ( 文字サイズの予\約サイズ )\par 必申{? : {\b no} \par 値 : {\b 予\約サイズ(pixel単位)} \par \par　デフォルトの行の幅を指定します。\par 

*delay
.shortinfo
 文字の表示速度の設定
.remarks
 {\b delayタグ} ( 文字の表\示速度の設定 )\par \par 　文字の表\示速度を指定します。\par 　文字表\示をノーウェイトにするには nowait タグをつかうこともできます。
.attrib:speed
+shortinfo
 文字ウェイト
+required
 yes
+format
 "nowait" または "user" またはウェイトの値(ms単位)
+info
 {\b speed属性} ( 文字ウェイト )\par 必申{? : {\b yes} \par 値 : {\b "nowait" または "user" またはウェイトの値(ms単位)} \par \par　"nowait" を指定すると、文字の表\示にウェイトをかけずに、一気に文字が表\示されます。"user" を指定すると、[システム|文字速度] でユーザーが指定した速度になります(デフォルト)。ウェイトの値を指定すると、値で示した時間につき 1 文字の速度で文字を表\示します。\par 　文字表\示速度は、すべてのメッセージレイヤで同じになります。

*disablestore
.shortinfo
 栞の機能の一時的な使用不可
.remarks
 {\b disablestoreタグ} ( 栞の機能\の一時的な使用不可 )\par \par 　「栞をはさむ」の機能\を一時的に使用不可能\にします。\par 　以後、セーブ可能\なラベルを通過しない限り「栞をはさむ」の機能\は使用不可能\になります。\par 　KAG 起動直後は、この「使用不可能\」で「栞をはさむ」が使用不可の状態になっており、セーブ可能\なラベルを通過しない限り「栞をはさむ」の機能\は使用できません。\par 　ゲームのメインメニューなど、栞をはさんでも仕方のないところに記述します。\par 　このタグに対し、store タグでは栞をはさむ・たどるの両方の機能\を恒久的に使用不可・可に設定できます。
.attrib:store
+shortinfo
 「栞をはさむ」の機能
+required
 no
+format
 true(デフォルト) または false
+info
 {\b store属性} ( 「栞をはさむ」の機能\ )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　「栞をはさむ」の機能\を使用不可にするかを指定します。\par 　使用不可にするときに true を設定します。\par 
.attrib:restore
+shortinfo
 「栞をたどる」の機能
+required
 no
+format
 true または false(デフォルト)
+info
 {\b restore属性} ( 「栞をたどる」の機能\ )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　「栞をたどる」の機能\を使用不可にするかを指定します。\par 　使用不可にするときに true を設定します。\par 　store 属性と違い、こちらは属性を省略するとfalse であると見なされます。

*edit
.shortinfo
 単一行エディットの作成
.remarks
 {\b editタグ} ( 単一行エディットの作成 )\par \par 　現在操作対象になっているメッセージレイヤの、現在の位置に、現在のフォントで、一行のみの文字列を編集できる入力欄(エディット)を作成します。　編集がおこなわれた文字列は、commit タグが実行されるまで、指定した変数に代入されることはありません。
.attrib:name
+shortinfo
 変数名
+required
 yes
+format
 変数名
+info
 {\b name属性} ( 変数名 )\par 必申{? : {\b yes} \par 値 : {\b 変数名} \par \par　入力した文字列を格納する変数を指定します。\par 　もし変数にすでに文字列が入っていた場合は、単一行エディットの初期文字列として表\示されます。\par 
.attrib:length
+shortinfo
 幅
+required
 no
+format
 幅 (pixel 単位)
+info
 {\b length属性} ( 幅 )\par 必申{? : {\b no} \par 値 : {\b 幅 (pixel 単位)} \par \par　単一行エディットの幅 ( 縦書きの場合は高さ ) をピクセル単位で指定します。
.attrib:bgcolor
+shortinfo
 背景色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b bgcolor属性} ( 背景色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　背景色を 0xRRGGBB 形式で指定します。
.attrib:opacity
+shortinfo
 背景色の不透明度
+required
 no
+format
 0(完全透明) 〜 255(完全不透明)
+info
 {\b opacity属性} ( 背景色の不透明度 )\par 必申{? : {\b no} \par 値 : {\b 0(完全透明) 〜 255(完全不透明)} \par \par　bgcolor 属性で指定した背景色の不透明度を 0 〜 255 で指定します。
.attrib:color
+shortinfo
 文字色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b color属性} ( 文字色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　文字色を 0xRRGGBB 形式で指定します。
.attrib:maxchars
+shortinfo
 最大文字数
+required
 no
+format
 最大文字数
+info
 {\b maxchars属性} ( 最大文字数 )\par 必申{? : {\b no} \par 値 : {\b 最大文字数} \par \par　入力できる最大文字数を指定します。0 を指定すると無制限になります。\par 　デフォルトでは無制限です。

*emb
.shortinfo
 式評価結果の埋め込み
.remarks
 {\b embタグ} ( 式評価結果の埋め込み )\par \par 　exp で示された式を評価(実行)し、その結果を埋め込みます。\par 　変数をシナリオ中に表\示させたい場合に使います。\par 　通常は、eval タグで代入した 変数の内容に置き換えます。\par 例:\par {\f3 [eval exp="f.value1='変数の値だよ〜ん'"]\par \par とどこかで書いておいて、\par \par [emb exp="f.value1"]\par \par と書くと、この emb タグが 変数の値だよ〜ん という内容に置き換わります。\par }
.attrib:exp
+shortinfo
 TJS 式
+required
 yes
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b yes} \par 値 : {\b TJS 式} \par \par　評価する TJS 式を指定します。ここで評価された式の結果が、この emb タグと置き換わります。

*endhact
.shortinfo
 メッセージ履歴アクションの終了
.remarks
 {\b endhactタグ} ( メッセージ履歴アクションの終了 )\par \par hact タグで設定したメッセージ履歴アクションを終了(設定をクリア)します。

*endif
.shortinfo
 条件によりシナリオを実行(の終了)
.remarks
 {\b endifタグ} ( 条件によりシナリオを実行(の終了) )\par \par 　if タグの終了を示します。endignore とまったく同一の動作をします。

*endignore
.shortinfo
 条件によりシナリオを無視(の終了)
.remarks
 {\b endignoreタグ} ( 条件によりシナリオを無視(の終了) )\par \par 　ignore タグの終了を示します。

*endindent
.shortinfo
 インデントの解除
.remarks
 {\b endindentタグ} ( インデントの解除 )\par \par 　indent タグで設定したインデントを解除します。通常は改行の前に記述します。

*endlink
.shortinfo
 ハイパーリンク(の終了)
.remarks
 {\b endlinkタグ} ( ハイパーリンク(の終了) )\par \par 　link タグで開始したハイパーリンクの終了を示します。

*endmacro
.shortinfo
 マクロの記述(の終了)
.remarks
 {\b endmacroタグ} ( ソ}クロの記述(の終了) )\par \par 　macro タグで記述を開始したソ}クロの終了を示します。

*endnowait
.shortinfo
 文字表示ノーウェイト(の終了)
.remarks
 {\b endnowaitタグ} ( 文字表\示ノーウェイト(の終了) )\par \par 　文字の表\示速度を、nowait タグでノーウェイトにする直前の文字表\示速度に戻します。\par 

*endscript
.shortinfo
 TJS スクリプトの記述(の終了)
.remarks
 {\b endscriptタグ} ( TJS スクリプトの記述(の終了) )\par \par 　[iscript] で記述したスクリプトの記述の終了を示します。\par このタグのある行には、このタグしか書いてはいけません ( 行末の \\ 記号も不可 )。

*er
.shortinfo
 メッセージレイヤの文字の消去
.remarks
 {\b erタグ} ( メッセージレイヤの文字の消去 )\par \par 　現在の操作対象のメッセージレイヤ上の文字を消去します。\par 　ct タグと違うのは、er タグは現在のメッセージレイヤ上の文字を消去し、文字属性とスタイルをリセットするだけで、ct タグのようにすべてのメッセージレイヤ上の文字を消去したり、操作対象のレイヤを message0 に戻したりしません。

*erasebookmark
.shortinfo
 栞の消去
.remarks
 {\b erasebookmarkタグ} ( 栞の消去 )\par \par 　非フリーセーブモードにおいて、指定した番号の栞を消去します。栞は"(未設定)"になります。
.attrib:place
+shortinfo
 消去する栞の番号
+required
 no
+format
 0または正の整数(0がデフォルト)
+info
 {\b place属性} ( 消去する栞の番号 )\par 必申{? : {\b no} \par 値 : {\b 0または正の整数(0がデフォルト)} \par \par　栞の番号を指定します。省略すると 0 が指定されたと見なされます。

*erasemacro
.shortinfo
 マクロの消去
.remarks
 {\b erasemacroタグ} ( ソ}クロの消去 )\par \par 　macro タグで記述したソ}クロを消去します。
.attrib:name
+shortinfo
 タグ名
+required
 yes
+format
 タグ名
+info
 {\b name属性} ( タグ名 )\par 必申{? : {\b yes} \par 値 : {\b タグ名} \par \par　消去するタグを指定します。ソ}クロとして定義されたタグのみを消去することが出来ます。

*eval
.shortinfo
 式の評価
.remarks
 {\b evalタグ} ( 式の評価 )\par \par 　exp で示された式を評価します。通常は変数への値の代入に用います。\par 　exp には任意の TJS 式を指定できるので、TJS として有効な式であれば何でも評価できます。\par \par 例:\par {\f3 [eval exp="f.test=500"]\par ;↑ゲーム変数 test に数値を代入している\par [eval exp="f.test2='文字列'"]\par ;↑ゲーム変数 test2 に文字列を代入している\par [eval exp="sf.test=400"]\par ;↑システム変数 test に数値を代入している\par [eval exp="f.test2=f.test*3"]\par ;↑ゲーム変数 test2 に ゲーム変数 test の 3 能{の数値を代入している\par }
.attrib:exp
+shortinfo
 TJS 式
+required
 yes
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b yes} \par 値 : {\b TJS 式} \par \par　評価する TJS 式を指定します。

*fadebgm
.shortinfo
 BGMのフェード
.remarks
 {\b fadebgmタグ} ( BGMのフェード )\par \par 　現在演奏中の BGM を指定音量までフェードします。\par 　フェード終了後も曲は演奏されたままです。\par 　このタグはフェードの終了を待ちません。フェードの終了を待つには、wb タグを使用してください。\par 
.attrib:volume
+shortinfo
 音量
+required
 yes
+format
 音量% (0〜100)
+info
 {\b volume属性} ( 音量 )\par 必申{? : {\b yes} \par 値 : {\b 音量% (0〜100)} \par \par　フェード後に到達させる BGM の音量を % で指定します。\par 　100 が上限です。音量の予}制のみをサポートします(増幅は音源の特性上、できません)。\par 
.attrib:time
+shortinfo
 フェード時間
+required
 yes
+format
 時間(ms単位)
+info
 {\b time属性} ( フェード時間 )\par 必申{? : {\b yes} \par 値 : {\b 時間(ms単位)} \par \par　フェードを行っている時間を ms 単位で指定します。3000 と指定すれば 3 秒間の間、フェードを行っています。

*fadeinbgm
.shortinfo
 フェードインしながらのBGM再生開始
.remarks
 {\b fadeinbgmタグ} ( フェードインしながらのBGM再生開始 )\par \par 　BGM ファイルを演奏しますが、曲の先頭でフェードインを行います。\par 　このタグはフェードの終了を待ちません。フェードの終了を待つには、wb タグを使用してください。\par 
.attrib:storage
+shortinfo
 再生する曲
+required
 yes
+format
 BGM ファイル名 または CD トラック番号
+info
 {\b storage属性} ( 再生する曲 )\par 必申{? : {\b yes} \par 値 : {\b BGM ファイル名 または CD トラック番号} \par \par　演奏する BGM ファイル名または CD トラック番号を指定します。
.attrib:loop
+shortinfo
 ループするか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b loop属性} ( ループするか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　BGM をループするかを指定します。\par 　true を指定するとループします。false を指定するとループしません。\par 　省略すると true であると見なされます。
.attrib:time
+shortinfo
 フェード時間
+required
 yes
+format
 時間(ms単位)
+info
 {\b time属性} ( フェード時間 )\par 必申{? : {\b yes} \par 値 : {\b 時間(ms単位)} \par \par　フェードインを行っている時間を ms 単位で指定します。3000 と指定すれば 3 秒間の間、フェードインを行っています。

*fadeinse
.shortinfo
 効果音のフェードイン再生
.remarks
 {\b fadeinseタグ} ( 効果音のフェードイン再生 )\par \par 　効果音をフェードインしながら再生します。\par 　このタグはフェードの終了を待ちません。待つには wf タグを使用してください。\par 
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　効果音を再生するバッファを指定します。一つのバッファでは同時には一つの効果音を鳴らすことができます。\par 　省略すると 0 であると見なされます。
.attrib:storage
+shortinfo
 効果音ファイル名
+required
 yes
+format
 効果音ファイル名
+info
 {\b storage属性} ( 効果音ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b 効果音ファイル名} \par \par　演奏する効果音ファイル名を指定します。\par 　拡張子は省略可能\ですが、省略した場合に自動的に探し出されるのは.wav または .ogg または .mp3 の拡張子を持つファイルだけです。( ただし ogg と mp3 の再生には SDK 付属のプラグインが必要 )\par そのほかのプラグインで使用可能\になるそのほかのファイル形式を指定する場合は拡張子も指定してください。
.attrib:time
+shortinfo
 フェードイン時間
+required
 yes
+format
 フェードイン時間(ms)
+info
 {\b time属性} ( フェードイン時間 )\par 必申{? : {\b yes} \par 値 : {\b フェードイン時間(ms)} \par \par　フェードインを行っている時間をミリ秒単位で指定します。
.attrib:loop
+shortinfo
 繰り返し再生を行うか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b loop属性} ( 繰り返し再生を行うか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　効果音を繰り返し再生するかどうかを指定します。\par 　true を指定すると繰り返し再生されます。false を指定すると一回限りの再生となります。省略するとfalse であると見なされます。\par 　true を指定した場合は ws タグで効果音再生の終了を待つことはできません。

*fadeoutbgm
.shortinfo
 BGMのフェードアウト
.remarks
 {\b fadeoutbgmタグ} ( BGMのフェードアウト )\par \par 　現在演奏中の BGM をフェードアウトします。\par 　フェードアウトが終了すると曲は自動的に停止します。\par 　このタグはフェードの終了を待ちません。フェードの終了を待つには、wb タグを使用してください。\par 
.attrib:time
+shortinfo
 フェード時間
+required
 yes
+format
 時間(ms単位)
+info
 {\b time属性} ( フェード時間 )\par 必申{? : {\b yes} \par 値 : {\b 時間(ms単位)} \par \par　フェードアウトを行っている時間を ms 単位で指定します。3000 と指定すれば 3 秒間の間、フェードアウトを行っています。

*fadeoutse
.shortinfo
 効果音のフェードアウト
.remarks
 {\b fadeoutseタグ} ( 効果音のフェードアウト )\par \par 　効果音をフェードアウトします。フェードアウトし終わると再生は自動的に停止します。\par 　このタグはフェードの終了を待ちません。待つには wf タグを使用してください。\par 
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　効果音をフェードアウトするバッファを指定します。\par 　省略すると 0 であると見なされます。
.attrib:time
+shortinfo
 フェードアウト時間
+required
 yes
+format
 フェードアウト時間(ms)
+info
 {\b time属性} ( フェードアウト時間 )\par 必申{? : {\b yes} \par 値 : {\b フェードアウト時間(ms)} \par \par　フェードアウトを行っている時間をミリ秒単位で指定します。

*fadese
.shortinfo
 効果音のフェード
.remarks
 {\b fadeseタグ} ( 効果音のフェード )\par \par 　効果音を指定の到達音量までフェードします。\par 　このタグはフェードの終了を待ちません。待つには wf タグを使用してください。\par 
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　効果音をフェードするバッファを指定します。\par 　省略すると 0 であると見なされます。
.attrib:time
+shortinfo
 フェード時間
+required
 yes
+format
 フェード時間(ms)
+info
 {\b time属性} ( フェード時間 )\par 必申{? : {\b yes} \par 値 : {\b フェード時間(ms)} \par \par　フェードを行っている時間をミリ秒単位で指定します。
.attrib:volume
+shortinfo
 到達音量
+required
 yes
+format
 音量% (0〜100)
+info
 {\b volume属性} ( 到達音量 )\par 必申{? : {\b yes} \par 値 : {\b 音量% (0〜100)} \par \par　フェードの到達音量を % で指定します。　100 が上限です。音量の予}制のみをサポートします(増幅は音源の特性上、できません)。

*font
.shortinfo
 文字属性設定
.remarks
 {\b fontタグ} ( 文字属性設定 )\par \par 　文字の様々な属性を指定します。\par 　これらの属性は、メッセージレイヤごとに個別に設定できます。\par 　いずれの属性も、省略すると前の状態を引き継ぎます。また、default を指定するとConfig.tjs 内で指定したデフォルトの値に戻ります。\par 　edge と shadow は同時に true にした場合は、袋文字のみが有効になり、影は無視されます。\par 　これらの属性は、resetfont タグや ct cm er タグが実行されると、Config.tjs 内や deffont タグで指定したデフォルトの値に戻ります。
.attrib:size
+shortinfo
 文字サイズ
+required
 no
+format
 文字サイズ(pixel単位) または "default"
+info
 {\b size属性} ( 文字サイズ )\par 必申{? : {\b no} \par 値 : {\b 文字サイズ(pixel単位) または "default"} \par \par　文字サイズを pixel 単位で指定します。\par 
.attrib:face
+shortinfo
 フォント名
+required
 no
+format
 フォント名 または "default" または "user"
+info
 {\b face属性} ( フォント名 )\par 必申{? : {\b no} \par 値 : {\b フォント名 または "default" または "user"} \par \par　フォント名を指定します。\par 　フォント名には曖昧な指定はできません。スペース、半角／全角も正確に指定してください。\par 　複数のフォント名をカンソ}で区切って指定できます。この場合は、最初の方に書いたフォントが存在すれば、それが優先されて選択されます。\par 　例 : face="HG行書体,ＭＳ Ｐゴシック"\par 　縦書き用フォントは自動的に設定されますので、フォント名の先頭に @ ソ}ークをつける必要はありません。　"user" を指定すれば、メニューの [文字表\示|フォント] でユーザが選択したフォントになります。
.attrib:color
+shortinfo
 文字色
+required
 no
+format
 0xRRGGBB 形式 または "default"
+info
 {\b color属性} ( 文字色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または "default"} \par \par　文字色を 0xRRGGBB 形式で指定します。\par 
.attrib:italic
+shortinfo
 斜体にするか
+required
 no
+format
 true または false または "default"
+info
 {\b italic属性} ( 斜体にするか )\par 必申{? : {\b no} \par 値 : {\b true または false または "default"} \par \par　文字を斜体にするかどうかを指定します。true を指定すると斜体になります。\par 
.attrib:rubysize
+shortinfo
 ルビのサイズ
+required
 no
+format
 ルビの文字サイズ(pixel単位) または "default"
+info
 {\b rubysize属性} ( ルビのサイズ )\par 必申{? : {\b no} \par 値 : {\b ルビの文字サイズ(pixel単位) または "default"} \par \par　ルビ(読み仮名)の文字のサイズを pixel 単位で指定します。\par 
.attrib:rubyoffset
+shortinfo
 ルビの表示位置
+required
 no
+format
 ルビの表示オフセット(pixel単位) または "default"
+info
 {\b rubyoffset属性} ( ルビの表\示位置 )\par 必申{? : {\b no} \par 値 : {\b ルビの表\示オフセット(pixel単位) または "default"} \par \par　ルビの表\示オフセットを pixel 単位で指定します。負の数を指定すると暴{文により近い位置に表\示されます。
.attrib:shadow
+shortinfo
 影を表示するか
+required
 no
+format
 true または false または "default"
+info
 {\b shadow属性} ( 影を表\示するか )\par 必申{? : {\b no} \par 値 : {\b true または false または "default"} \par \par　文字に影をつけるかを指定します。true を指定すると影がつきます。\par 
.attrib:edge
+shortinfo
 袋文字にするか
+required
 no
+format
 true または false または "default"
+info
 {\b edge属性} ( 袋文字にするか )\par 必申{? : {\b no} \par 値 : {\b true または false または "default"} \par \par　文字を袋文字 ( 縁取り文字 ) にするかを指定します。true を指定すると袋文字になります。\par 
.attrib:edgecolor
+shortinfo
 袋文字の袋の色
+required
 no
+format
 0xRRGGBB 形式 または "default"
+info
 {\b edgecolor属性} ( 袋文字の袋の色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または "default"} \par \par　文字の袋の色を 0xRRGGBB 形式で指定します。\par 
.attrib:shadowcolor
+shortinfo
 影の色
+required
 no
+format
 0xRRGGBB 形式 または "default"
+info
 {\b shadowcolor属性} ( 影の色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または "default"} \par \par　影の色を 0xRRGGBB 形式で指定します。\par 
.attrib:bold
+shortinfo
 太文字にするか
+required
 no
+format
 true または false または "default"
+info
 {\b bold属性} ( 太文字にするか )\par 必申{? : {\b no} \par 値 : {\b true または false または "default"} \par \par　文字を太文字にするかを指定します。 true を指定すると太文字になります。\par 

*freeimage
.shortinfo
 レイヤ画像の解放
.remarks
 {\b freeimageタグ} ( レイヤ画像の解放 )\par \par 　レイヤの画像を解放します。\par 　とくにアニメーション情報を保持しているレイヤは、非表\示にしていても CPU パワーを使用するので、不必要になった時点でこのタグを使って解放するといいかと思います。
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　画像を解放するレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。

*glyph
.shortinfo
 クリック待ち記号の指定
.remarks
 {\b glyphタグ} ( クリック待ち記号の指定 )\par \par 　クリック待ちに用いる画像を指定します。\par 　line や page 属性で指定されたファイル名の画像が記号として、そのファイル名に .asd をつけたファイル名が アニメーションレイヤのスクリプトとして読み込まれます。\par 　アニメーションレイヤ用の画像やスクリプトの書き方については、AnimationLayer.tjs を参照してください。\par 　これらの設定は、メッセージレイヤごとに個別に設定できます。
.attrib:line
+shortinfo
 行末クリック待ち記号
+required
 no
+format
 行末クリック待ち記号ファイル名
+info
 {\b line属性} ( 行末クリック待ち記号 )\par 必申{? : {\b no} \par 値 : {\b 行末クリック待ち記号ファイル名} \par \par　行末クリック待ち記号画像のファイル名を指定します。拡張子は指定しないでください。
.attrib:linekey
+shortinfo
 行末クリック待ち記号のカラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b linekey属性} ( 行末クリック待ち記号のカラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \parカラーキーを指定します。\par 　imageタグの key 属性を参照してください。\par 
.attrib:page
+shortinfo
 改ページクリック待ち記号
+required
 no
+format
 改ページクリック待ち記号ファイル名
+info
 {\b page属性} ( 改ページクリック待ち記号 )\par 必申{? : {\b no} \par 値 : {\b 改ページクリック待ち記号ファイル名} \par \par　改ページ待ち記号画像のファイル名を指定します。\par 拡張子は指定しないでください。
.attrib:pagekey
+shortinfo
 改ページクリック待ち記号のカラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b pagekey属性} ( 改ページクリック待ち記号のカラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \parカラーキーを指定します。\par 　imageタグの key 属性を参照してください。\par 
.attrib:fix
+shortinfo
 記号表示位置を固定するか
+required
 no
+format
 true または false
+info
 {\b fix属性} ( 記号表\示位置を固定するか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　記号表\示位置を指定位置に固定するかどうかを指定します。true を指定すると記号は left および top を指定した位置に表\示されます。\par 　false を指定すると left および top 属性は無視され、記号は現在の文字表\示位置に表\示されるようになります。
.attrib:left
+shortinfo
 記号表示位置を固定するか
+required
 no
+format
 左端位置(pixel単位)
+info
 {\b left属性} ( 記号表\示位置を固定するか )\par 必申{? : {\b no} \par 値 : {\b 左端位置(pixel単位)} \par \par　fix 属性を true にしたときに記号を表\示する位置のうち、左端位置を指定します。
.attrib:top
+shortinfo
 記号表示位置を固定するか
+required
 no
+format
 上端位置(pixel単位)
+info
 {\b top属性} ( 記号表\示位置を固定するか )\par 必申{? : {\b no} \par 値 : {\b 上端位置(pixel単位)} \par \par　fix 属性を true にしたときに記号を表\示する位置のうち、上端位置を指定します。

*goback
.shortinfo
 前に戻る
.remarks
 {\b gobackタグ} ( 前に戻る )\par \par 　メニューから システム|前に戻る を選択したときと同じ動作をします。
.attrib:ask
+shortinfo
 確認をするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b ask属性} ( 確認をするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、前に戻るかどうかの確認をします。false を指定すると前に戻るかどうかの確認はありません。この属性を省略すると false を指定したとみなされます。\par 　前に戻るかどうかの確認でユーザが「いいえ」を選んだ場合、実行はそのまま継続します。

*gotostart
.shortinfo
 最初に戻る
.remarks
 {\b gotostartタグ} ( 最初に戻る )\par \par 　startanchor タグで指定された場所に戻ります。\par 　メニューから システム|最初に戻る を選択したときと同じ動作をします。
.attrib:ask
+shortinfo
 確認をするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b ask属性} ( 確認をするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、最初に戻るかどうかの確認をします。false を指定すると最初に戻るかどうかの確認はありません。この属性を省略すると false を指定したとみなされます。\par 　最初に戻るかどうかの確認でユーザが「いいえ」を選んだ場合、実行はそのまま継続します。

*graph
.shortinfo
 インライン画像表示
.remarks
 {\b graphタグ} ( インライン画像表\示 )\par \par 　任意の画像をメッセージレイヤの文字位置に表\示します。\par 　読み込み可能\な形式は image タグで表\示することのできる前景画像と同じです。\par 　通常は、普通のフォントでは含まれていないような特殊な記号を画像として用意し、それを表\示させる用途に使用します。\par 　記号でなく、画像を表\示する場合は char 属性に false を指定してください。\par 　よく使う記号はソ}クロを組んでおくと楽かと思います。\par \par 例:\par {\f3 ; heart にはハートソ}ークの画像\par [macro name="heart"][graph storage="heart" alt="(は〜と)"][endmacro]\par ; 以後、[heart] タグでハートソ}ークを使用可能\\par }
.attrib:storage
+shortinfo
 画像ファイル名
+required
 yes
+format
 画像ファイル名
+info
 {\b storage属性} ( 画像ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b 画像ファイル名} \par \par　表\示させたい画像ファイル名を指定します。読み込める形式は imageタグで読み込める形式と同じです。　ここで指定したファイル名 (拡張子を除く) 部分に _m を追加したファイルが、もしあれば、ソ}スク画像として読み込まれます。ソ}スク画像は必ず 256 色グレースケールで保存してください。
.attrib:key
+shortinfo
 カラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b key属性} ( カラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \par　どの色を抜き色とするかを指定します。省略すると抜き色は無効になります。 　key=0xRRGGBB という形式で 16 進数で抜き色を指定すると、RR(赤) GG(緑) BB(青)で塗られた部分を抜き色として透明にします。たとえば、key=0xff00ff では (r,g,b)=(255,0,255) つまり真ソ}ゼンダの部分を抜き色として透明にするという指定になります。\par 　ただ単に数値を指定すれば、そのパレットインデックスの数値が抜き色となります。16色/256色の画像に対して有効です。\par 　key=adapt と指定すれば、自動的に抜き色が決定されます。使用される抜き色は、画像の一番上のラインにて、一番多く使われている色です。16色/256色の画像に対して有効です。\par 　ソ}スク画像を使用する場合は、このタグを指定する必要はありません。
.attrib:char
+shortinfo
 文字として処理するか
+required
 no
+format
 true (デフォルト) または false
+info
 {\b char属性} ( 文字として処理するか )\par 必申{? : {\b no} \par 値 : {\b true (デフォルト) または false} \par \par　true を指定すると、画像はfont タグで指定した色、影、袋文字の状態が、文字同様に表\示されます。そのため、true を設定すると画像の色情報は無視されます。また、画像が影や袋文字である必要はありません。\par 　graph タグが特殊記号の表\示に使われることが多いことを想定してデフォルトでは true になっているので、普通の画像を表\示する場合は注意してください。
.attrib:alt
+shortinfo
 代替文字
+required
 no
+format
 代替文字
+info
 {\b alt属性} ( 代替文字 )\par 必申{? : {\b no} \par 値 : {\b 代替文字} \par \par　メッセージ履歴に表\示する、この画像の代替文字を指定します。メッセージ履歴は文字情報しか表\示できませんので、alt 属性に指定された文字が代わりに表\示されます。

*hact
.shortinfo
 メッセージ履歴アクション
.remarks
 {\b hactタグ} ( メッセージ履歴アクション )\par \par 　メッセージ履歴に対するアクションを指定します。このタグと endhact タグで囲まれた部分は、メッセージ履歴上でクリックできるようになり、クリックされた時に実行する TJS 式を指定することができます。過去にメッセージと共に再生した声を、メッセージ履歴のクリックで再生できるようにするなどに応用できます。
.attrib:exp
+shortinfo
 実行する式
+required
 yes
+format
 TJS式
+info
 {\b exp属性} ( 実行する式 )\par 必申{? : {\b yes} \par 値 : {\b TJS式} \par \par　メッセージをクリックしたときに実行する TJS 式を指定します。

*hch
.shortinfo
 縦中横を表示する
.remarks
 {\b hchタグ} ( 縦中横を表\示する )\par \par 　縦中横 ( 縦書き中に算用数字２桁を書くような場合にそこだけ横書きにする書き方 ) で文字を表\示します。\par 　現在対象となっているメッセージレイヤが縦書きモードである必要があります。\par \par 例:\par {\f3 今日は平成[hch text="15"]年[hch text="12"]月[hch text="30"]日}
.attrib:text
+shortinfo
 表示する文字
+required
 yes
+format
 文字
+info
 {\b text属性} ( 表\示する文字 )\par 必申{? : {\b yes} \par 値 : {\b 文字} \par \par　ここで指定した文字がそこだけ横書きで表\示されます。\par 
.attrib:expand
+shortinfo
 行間を拡張するか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b expand属性} ( 行間を拡張するか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、長い縦中横を描画しようとしたときに行間を自動的に拡張します。false を指定すると、縦中横が行からはみ出て正常に描画されない可能\性がありますが、行間はそのままになります ( 通常半角２桁ならば false で OK )。\par この属性を指定しないと false であると見なされます。\par \par 

*hidemessage
.shortinfo
 メッセージを消す
.remarks
 {\b hidemessageタグ} ( メッセージを消す )\par \par 　メッセージレイヤを一時的に隠します。メニューから「メッセージを消す」を選んだのと同じ動作を行います。\par 　クリック待ちを行った後、メッセージレイヤは表\示され、実行は継続します。

*history
.shortinfo
 メッセージ履歴の設定
.remarks
 {\b historyタグ} ( メッセージ履歴の設定 )\par \par 　メッセージ履歴の機能\に関する設定を行います。
.attrib:output
+shortinfo
 文字情報の出力
+required
 no
+format
 true または false
+info
 {\b output属性} ( 文字情報の出力 )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　メッセージ履歴への文字情報の出力をするかどうかを指定します。\par 　true を指定すると、メッセージレイヤに表\示した文字がメッセージ履歴に表\示されるようになります。\par 　シナリオを最初に実行したときは true の状態になっています。\par 　false を指定するとメッセージ履歴には文字情報は出力されません。
.attrib:enabled
+shortinfo
 メッセージ履歴の表示可能・不可能
+required
 no
+format
 true または false
+info
 {\b enabled属性} ( メッセージ履歴の表\示可能\・不可能\ )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　メッセージ履歴を表\示可能\かどうかを指定します。\par 　true を指定すると表\示可能\に、false を指定すると表\示不可能\になります。\par 　ユーザーにメッセージ履歴を表\示させたくない場合に false にしてください。

*hr
.shortinfo
 メッセージ履歴の改行/改ページ
.remarks
 {\b hrタグ} ( メッセージ履歴の改行/改ページ )\par \par 　メッセージ履歴を改行または改ページします。
.attrib:repage
+shortinfo
 改ページかどうか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b repage属性} ( 改ページかどうか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　改ページを行うかどうかを指定します。\par 　true を指定すると改行ではなく改ページが行われます。false を指定すると改行が行われます。\par 　この属性を省略すると false が指定されたと見なされます。\par 　改ページは、Config.tjs のメッセージ履歴の設定で everypage が true になってないと動作しません。\par 

*if
.shortinfo
 条件によりシナリオを実行
.remarks
 {\b ifタグ} ( 条件によりシナリオを実行 )\par \par 　式を評価し、その結果が false ( または 0 ) ならば、endif タグまでにある文章やタグが無視されます。\par 　逆に言うと ( というか普通はこういいますが ) 、式を評価し、その結果がtrue ( または 0 以外 ) ならば、endif までにある文章やタグを実行し、そうでない場合は無視します。\par 　if 〜 endif の間にはラベルを挟まないでください。\par 
.attrib:exp
+shortinfo
 TJS 式
+required
 yes
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b yes} \par 値 : {\b TJS 式} \par \par　評価する TJS 式を指定します。この式の結果が false ( または 0 ならば、endif タグまでの文章やタグが無視されます。\par 

*ignore
.shortinfo
 条件によりシナリオを無視
.remarks
 {\b ignoreタグ} ( 条件によりシナリオを無視 )\par \par 　式を評価し、その結果が true ( または 0 以外 ) ならば、endignore タグまでにある文章やタグが無視されます。\par 　ignore 〜 endignore の間にはラベルを挟まないでください。\par 
.attrib:exp
+shortinfo
 TJS 式
+required
 yes
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b yes} \par 値 : {\b TJS 式} \par \par　評価する TJS 式を指定します。この式の結果が true ( または 0 以外 )ならば、endignore タグまでの文章やタグが無視されます。\par 

*image
.shortinfo
 画像の読み込み
.remarks
 {\b imageタグ} ( 画像の読み込み )\par \par 　画像を読み込みます。img でも image でも同じ意味です。多くの属性がありますが、必申{なのは storage と layer のみです。\par 　前景レイヤは KAG 初期状態では非表\示状態なので、visible=true とすれば表\示されるようになります。\par \par 　色調補正は読み込む画像に対して、\par ・grayscale によるグレースケール化\par ・?gamma , ?floor , ?ceil によるガンソ}補正\par ・mcolor, mopacity による色ブレンド\par の順番で行われます。\par 　アニメーション情報の作成の方法は AnimationLayer.tjs 内を参照してください。\par 　クリッカブルソ}ップの使い方については KAG システムリファレンスを参照してください。
.attrib:storage
+shortinfo
 画像ファイル名
+required
 yes
+format
 画像ファイル名
+info
 {\b storage属性} ( 画像ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b 画像ファイル名} \par \par　読み込みたい画像を指定します。拡張子は省略可能\です。\par 　ここで指定したファイル名 (拡張子を除く) 部分に _m を追加したファイルが、もしあれば、ソ}スク画像として読み込まれます。　また、同様に _p を追加したファイルが、もしあれば、クリッカブルソ}ップ用の領域画像として読み込まれます。\par 　ソ}スク画像は必ず 256 色グレースケールで保存してください。\par 　領域画像はかならず 256 色で保存してください。\par 　また、拡張子が asd のファイルが存在すればアニメーションシーケンスデータとしてアニメーションの情報も読み込みまれ、拡張子が ma のファイルが存在すれば、クリッカブルソ}ップ用の領域アクション定義ファイルとして読み込まれます。
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　画像を読み込むレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤに画像を読み込みます。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:key
+shortinfo
 カラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b key属性} ( カラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \par　どの色を抜き色とするかを指定します。省略すると抜き色は無効になります。 \par 　key=0xRRGGBB という形式で 16 進数で抜き色を指定すると、RR(赤) GG(緑) BB(青)で塗られた部分を抜き色として透明にします。たとえば、key=0xff00ff では (r,g,b)=(255,0,255) つまり真ソ}ゼンダの部分を抜き色として透明にするという指定になります。\par 　ただ単に数値を指定すれば、そのパレットインデックスの数値が抜き色となります。16色/256色の画像に対して有効です。\par 　key=adapt と指定すれば、自動的に抜き色が決定されます。使用される抜き色は、画像の一番上のラインにて、一番多く使われている色です。16色/256色の画像に対して有効です。\par 　ソ}スク画像を使用する場合は、この属性は指定する必要はありません。
.attrib:mode
+shortinfo
 前景レイヤ透過モード
+required
 no
+format
 "transp"(デフォルト) または "rect" "add" "sub" "mul" "dodge" "darken" "lighten" "screen"のいずれか
+info
 {\b mode属性} ( 前景レイヤ透過モード )\par 必申{? : {\b no} \par 値 : {\b "transp"(デフォルト) または "rect" "add" "sub" "mul" "dodge" "darken" "lighten" "screen"のいずれか} \par \par　前景レイヤの透過モードを指定します。前景レイヤ以外には指定しないでください。\par 　"transp" を指定するとαチャネルが有効になって画像を透過して表\示することができます。\par 　"rect" を指定すると画像は透過されません (矩形で表\示されます)。\par 　"add" を指定すると加算合成が行われます。\par 　"sub" を指定すると減算合成が行われます。\par 　"mul" を指定すると乗算合成が行われます。\par 　"dodge" を指定すると「覆い焼き」合成が行われます。\par 　"darken" を指定すると「比較(暗)」合成が行われます。\par 　"lighten" を指定すると「比較(明)」合成が行われます。\par 　"screen" を指定すると「スクリーン乗算」合成が行われます。\par 　省略すると "transp" であるとみなされます。\par 　透明度情報を持たない画像を指定する場合は "rect" に指定する方が負荷が軽くて済みます。
.attrib:grayscale
+shortinfo
 画像をグレースケールにするか
+required
 no
+format
 true または false
+info
 {\b grayscale属性} ( 画像をグレースケールにするか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　画像をグレースケールにするかどうかを指定します。grayscale=true と指定すると、画像をグレースケールにします。省略すると false であると見なされます。
.attrib:rgamma
+shortinfo
 ガンマ補正値
+required
 no
+format
 ガンマ補正値 (0.1 〜 1.0(デフォルト) 〜 9.9)
+info
 {\b rgamma属性} ( ガンソ}補正値 )\par 必申{? : {\b no} \par 値 : {\b ガンソ}補正値 (0.1 〜 1.0(デフォルト) 〜 9.9)} \par \par　r (赤) 、g (緑) 、 b (青) の各成分のガンソ}値を指定します。 たとえば画像をセピア調にするには、{\f3 grayscale=true rgamma=1.3 ggamma=1.1} と指定します。
.attrib:ggamma
+shortinfo
 ガンマ補正値
+required
 no
+format
 ガンマ補正値 (0.1 〜 1.0(デフォルト) 〜 9.9)
+info
 {\b ggamma属性} ( ガンソ}補正値 )\par 必申{? : {\b no} \par 値 : {\b ガンソ}補正値 (0.1 〜 1.0(デフォルト) 〜 9.9)} \par \par　r (赤) 、g (緑) 、 b (青) の各成分のガンソ}値を指定します。 たとえば画像をセピア調にするには、{\f3 grayscale=true rgamma=1.3 ggamma=1.1} と指定します。
.attrib:bgamma
+shortinfo
 ガンマ補正値
+required
 no
+format
 ガンマ補正値 (0.1 〜 1.0(デフォルト) 〜 9.9)
+info
 {\b bgamma属性} ( ガンソ}補正値 )\par 必申{? : {\b no} \par 値 : {\b ガンソ}補正値 (0.1 〜 1.0(デフォルト) 〜 9.9)} \par \par　r (赤) 、g (緑) 、 b (青) の各成分のガンソ}値を指定します。 たとえば画像をセピア調にするには、{\f3 grayscale=true rgamma=1.3 ggamma=1.1} と指定します。
.attrib:rfloor
+shortinfo
 輝度最低値
+required
 no
+format
 輝度最低値 ( 0(デフォルト) 〜 255 )
+info
 {\b rfloor属性} ( 輝度最低値 )\par 必申{? : {\b no} \par 値 : {\b 輝度最低値 ( 0(デフォルト) 〜 255 )} \par \par　各成分の輝度最低値を指定します。
.attrib:gfloor
+shortinfo
 輝度最低値
+required
 no
+format
 輝度最低値 ( 0(デフォルト) 〜 255 )
+info
 {\b gfloor属性} ( 輝度最低値 )\par 必申{? : {\b no} \par 値 : {\b 輝度最低値 ( 0(デフォルト) 〜 255 )} \par \par　各成分の輝度最低値を指定します。
.attrib:bfloor
+shortinfo
 輝度最低値
+required
 no
+format
 輝度最低値 ( 0(デフォルト) 〜 255 )
+info
 {\b bfloor属性} ( 輝度最低値 )\par 必申{? : {\b no} \par 値 : {\b 輝度最低値 ( 0(デフォルト) 〜 255 )} \par \par　各成分の輝度最低値を指定します。
.attrib:rceil
+shortinfo
 輝度最高値
+required
 no
+format
 輝度最高値 ( 0 〜 255(デフォルト) )
+info
 {\b rceil属性} ( 輝度最高値 )\par 必申{? : {\b no} \par 値 : {\b 輝度最高値 ( 0 〜 255(デフォルト) )} \par \par　各成分の輝度最高値を指定します。 たとえば、{\f3 rfloor=255 gfloor=255 bfloor=255 rceil=0 gceil=0 bceil=0} と指定すると、色が反転します。
.attrib:gceil
+shortinfo
 輝度最高値
+required
 no
+format
 輝度最高値 ( 0 〜 255(デフォルト) )
+info
 {\b gceil属性} ( 輝度最高値 )\par 必申{? : {\b no} \par 値 : {\b 輝度最高値 ( 0 〜 255(デフォルト) )} \par \par　各成分の輝度最高値を指定します。 たとえば、{\f3 rfloor=255 gfloor=255 bfloor=255 rceil=0 gceil=0 bceil=0} と指定すると、色が反転します。
.attrib:bceil
+shortinfo
 輝度最高値
+required
 no
+format
 輝度最高値 ( 0 〜 255(デフォルト) )
+info
 {\b bceil属性} ( 輝度最高値 )\par 必申{? : {\b no} \par 値 : {\b 輝度最高値 ( 0 〜 255(デフォルト) )} \par \par　各成分の輝度最高値を指定します。 たとえば、{\f3 rfloor=255 gfloor=255 bfloor=255 rceil=0 gceil=0 bceil=0} と指定すると、色が反転します。
.attrib:mcolor
+shortinfo
 ブレンド色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b mcolor属性} ( ブレンド色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　色ブレンドによる色調効果において、ブレンドする色を 0xRRGGBB 形式で指定します。濃度は mopacity 属性で指定します。\par 　省略すると色ブレンドによる色調効果は行われません。
.attrib:mopacity
+shortinfo
 ブレンド色濃度
+required
 mcolor を指定した場合
+format
 不透明度(0 〜 255)
+info
 {\b mopacity属性} ( ブレンド色濃度 )\par 必申{? : {\b mcolor を指定した場合} \par 値 : {\b 不透明度(0 〜 255)} \par \par　色ブレンドによる色調効果で、mcolor で指定した色をどれぐらいの不透明度でブレンドするかを指定します。
.attrib:clipleft
+shortinfo
 クリップ矩形左端位置
+required
 no
+format
 クリップ矩形左端位置(pixel単位)
+info
 {\b clipleft属性} ( クリップ矩形左端位置 )\par 必申{? : {\b no} \par 値 : {\b クリップ矩形左端位置(pixel単位)} \par \par　画像クリップ矩形の左端位置を指定します。clipleft, cliptop, clipwidth, clipheight で矩形を指定すると、storage 属性で指定された画像のその矩形のみが切り取られ、指定されたレイヤの画像になります。画像の一部だけを切り取って表\示したいときなどに使用します。\par 　これらの属性を省略すると、storage 属性で指定された画像全部がレイヤの画像になります。\par 
.attrib:cliptop
+shortinfo
 クリップ矩形上端位置
+required
 no
+format
 クリップ矩形上端位置(pixel単位)
+info
 {\b cliptop属性} ( クリップ矩形上端位置 )\par 必申{? : {\b no} \par 値 : {\b クリップ矩形上端位置(pixel単位)} \par \par　画像クリップ矩形の上端位置を指定します。
.attrib:clipwidth
+shortinfo
 クリップ矩形幅
+required
 no
+format
 クリップ矩形幅(pixel単位)
+info
 {\b clipwidth属性} ( クリップ矩形幅 )\par 必申{? : {\b no} \par 値 : {\b クリップ矩形幅(pixel単位)} \par \par　画像クリップ矩形の幅を指定します。
.attrib:clipheight
+shortinfo
 クリップ矩形高さ
+required
 no
+format
 クリップ矩形高さ(pixel単位)
+info
 {\b clipheight属性} ( クリップ矩形高さ )\par 必申{? : {\b no} \par 値 : {\b クリップ矩形高さ(pixel単位)} \par \par　画像クリップ矩形の高さを指定します
.attrib:flipud
+shortinfo
 上下反転
+required
 no
+format
 true または false(デフォルト)
+info
 {\b flipud属性} ( 上下反転 )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　画像の上下反転を行いたい場合に true を指定します。
.attrib:fliplr
+shortinfo
 左右反転
+required
 no
+format
 true または false(デフォルト)
+info
 {\b fliplr属性} ( 左右反転 )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　画像の左右反転を行いたい場合に true を指定します。
.attrib:visible
+shortinfo
 レイヤの可視・不可視
+required
 no
+format
 true または false
+info
 {\b visible属性} ( レイヤの可視・不可視 )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　layer 属性で指定したレイヤを表\示するか、しないかを指定します。visible=true と指定すれば、レイヤは表\示状態になります。visible=false と指定すれば、非表\示状態になります。省略すると表\示状態は変わりません。layer=base を指定した場合はこの属性は指定しないでください。
.attrib:left
+shortinfo
 レイヤ左端位置
+required
 no
+format
 左端位置(pixel単位)
+info
 {\b left属性} ( レイヤ左端位置 )\par 必申{? : {\b no} \par 値 : {\b 左端位置(pixel単位)} \par \par　layer 属性で指定したレイヤの左端位置を指定します。省略すると、画像読み込み前の位置を保持します。layer=base と指定した場合はこの属性は指定しないでください。
.attrib:top
+shortinfo
 レイヤ上端位置
+required
 no
+format
 上端位置(pixel単位)
+info
 {\b top属性} ( レイヤ上端位置 )\par 必申{? : {\b no} \par 値 : {\b 上端位置(pixel単位)} \par \par　layer 属性で指定したレイヤの上端位置を指定します。省略すると、画像読み込み前の位置を保持します。layer=base と指定した場合はこの属性は指定しないでください。
.attrib:pos
+shortinfo
 前景レイヤ位置
+required
 no
+format
 left または left_center または center または right_center または right
+info
 {\b pos属性} ( 前景レイヤ位置 )\par 必申{? : {\b no} \par 値 : {\b left または left_center または center または right_center または right} \par \par　レイヤ位置を自動的に決定します。前景レイヤに対して使います。\par 　横方向の位置は、この属性で指定した left ( 左端 ) 、left_center ( 左より )、center ( 中央 )、right_center ( 右より )、right ( 右端 ) の位置に表\示されます。各横方向の座標の中心位置は Config.tjs で指定することができます。\par 　left, left_center, center, right_center, right の代わりに、それぞれ l, lc, c, rc, r を指定することもできます ( 動作は同じです )。\par 　縦方向の位置については、レイヤの下端は画面の下端に合わせて ( 下側に詰められて ) 表\示されます。\par 　この属性を指定した場合は left 属性や top 属性は無視されます。\par 　layer=base と指定した場合にはこの属性は指定しないでください。\par 
.attrib:opacity
+shortinfo
 不透明度
+required
 no
+format
 不透明度 ( 0 (全くの透明) 〜 255 (全くの不透明 ) )
+info
 {\b opacity属性} ( 不透明度 )\par 必申{? : {\b no} \par 値 : {\b 不透明度 ( 0 (全くの透明) 〜 255 (全くの不透明 ) )} \par \par　layer 属性で指定したレイヤの不透明度を指定します。\par 　デフォルトで 255 (全くの不透明) です。つまり、この属性を指定しないで画像を読み込むと、そのレイヤの opacity が 255 以外でも、255 に設定しなおされます。\par 　128 を指定すると半分程度の透明度になり、透けて表\示されます。\par 　opacity=0 としてもレイヤを見えなくすることが出来ますが、全くの透明になっただけで非表\示になるわけではありません。\par 　この属性を設定してもレイヤの画像自体が変化するわけではありません。変化するのは表\示の状態です。\par 
.attrib:mapimage
+shortinfo
 領域画像
+required
 no
+format
 画像ファイル名
+info
 {\b mapimage属性} ( 領域画像 )\par 必申{? : {\b no} \par 値 : {\b 画像ファイル名} \par \par　クリッカブルソ}ップに用いる領域画像を指定します。\par 　ここで指定を行わなくても、storage 属性で指定したファイル名 (拡張子を除く) 部分に_p を追加したファイルが もしあれば自動的に領域画像として読み込まれますが、別のファイルを代わりに読み込みたい場合にこの属性を用います。
.attrib:mapaction
+shortinfo
 領域アクション定義ファイル
+required
 no
+format
 領域アクション定義ファイル名
+info
 {\b mapaction属性} ( 領域アクション定義ファイル )\par 必申{? : {\b no} \par 値 : {\b 領域アクション定義ファイル名} \par \par　クリッカブルソ}ップに用いる領域アクション定義ファイルを指定します。\par 　ここで指定しなくても、storage 属性で指定したファイル名と同名で拡張子が ma のファイルがあれば自動的に涼気アクション定義ファイルとして読み込まれますが、別のファイルを代わりに読み込みたい場合にこの属性を用います。\par 　拡張子 ( 通常は .ma ) は省略できませんので拡張子も含めて指定してください。
.attrib:index
+shortinfo
 重ね合わせ順序
+required
 no
+format
 正の整数
+info
 {\b index属性} ( 重ね合わせ順序 )\par 必申{? : {\b no} \par 値 : {\b 正の整数} \par \par　背景レイヤには指定しないでください。\par 　重ね合わせ順序を指定します。値が大きいほど手前に表\示されます。\par 　標準では、前景レイヤ 0 が 1000、前景レイヤ 1 が 2000 ( 以降 1000 ずつ増える )、メッセージレイヤ 0 が 1000000、メッセージレイヤ 1 が 1001000 ( 以降 1000 ずつ増える )、　メッセージ履歴を表\示するためのレイヤが 2000000 となっています。\par 　背景レイヤの重ね合わせ順序は変更することはできません。\par 　laycount タグを実行すると、この重ね合わせ順序は標準の状態に戻されてしまう場合があるので注意してください。\par 

*indent
.shortinfo
 インデントの設定
.remarks
 {\b indentタグ} ( インデントの設定 )\par \par 　このタグの位置に左インデント ( 縦書きの場合は頭インデント ) を設定します。発言者インデントなどとして使うことができます。インデントを解除する場合は、改行の前に endindent タグを使用します。\par 例:\par {\f3 【あんぱん】[indent]このように発言者インデントなどとして使うことができます。[endindent]}

*input
.shortinfo
 文字列の入力
.remarks
 {\b inputタグ} ( 文字列の入力 )\par \par 　文字列を入力するためにダイアログソ{ックスを開き、ユーザーに入力を求めます。\par 　ユーザー名の入力などに使用することができます。\par \par 例:\par {\f3 [eval exp="f.username='太郎'"]\par [input name=f.username prompt="名前を入力してください" title="名前の入力"]\par 名前は : [emb exp=f.username]\par }
.attrib:name
+shortinfo
 変数名
+required
 yes
+format
 変数名
+info
 {\b name属性} ( 変数名 )\par 必申{? : {\b yes} \par 値 : {\b 変数名} \par \par　入力したい文字列を格納する変数を指定します。\par 　もし変数にすでに文字列が入っていた場合は、その文字列がダイアログソ{ックスの初期文字列として表\示されます。\par 　ユーザーがダイアログソ{ックスのキャンセルソ{タンや ESC キーを押したときは変数の値は変わりません。\par 　変数には KAG からアクセスできるすべての変数を指定することができます。\par 
.attrib:prompt
+shortinfo
 プロンプト
+required
 no
+format
 プロンプトとして表示する文字列
+info
 {\b prompt属性} ( プロンプト )\par 必申{? : {\b no} \par 値 : {\b プロンプトとして表\示する文字列} \par \par　ダイアログソ{ックスのプロンプト ( 入力欄のすぐ上に表\示される文字列 ) を指定します。省略すると空欄になります。\par 　「名前を入力してください」などにします。
.attrib:title
+shortinfo
 タイトル
+required
 no
+format
 ダイアログボックスのタイトル
+info
 {\b title属性} ( タイトル )\par 必申{? : {\b no} \par 値 : {\b ダイアログソ{ックスのタイトル} \par \par　ダイアログソ{ックスのタイトルを指定します。\par 　省略するとタイトルは空欄になります。\par 　「名前の入力」などにします。

*iscript
.shortinfo
 TJS スクリプトの記述
.remarks
 {\b iscriptタグ} ( TJS スクリプトの記述 )\par \par 　[iscript] のみの行と、[endscript] のみの行で囲まれた部分に TJS スクリプトを書き込むことが出来ます。\par 　[iscript] のみの行というのは、その行には [iscript] タグのみしか記述してはいけないと言うことです(endscript も同様)。\par 　また、ソ}クロ中にこのタグを書くことはできません。\par \par 例:\par {\f3 [iscript]\par kag.restoreBookMark(0); // 0 番目の栞をたどる\par [endscript]\par }

*jump
.shortinfo
 シナリオのジャンプ
.remarks
 {\b jumpタグ} ( シナリオのジャンプ )\par \par 　指定されたシナリオファイルの指定されたラベルにジャンプします。\par 　サブルーチン内でジャンプする場合は、call 〜 return のバランスに注意してください。\par 
.attrib:storage
+shortinfo
 シナリオファイル名
+required
 no
+format
 シナリオファイル名
+info
 {\b storage属性} ( シナリオファイル名 )\par 必申{? : {\b no} \par 値 : {\b シナリオファイル名} \par \par　ジャンプ先のシナリオファイルを指定します。省略すると、現在のシナリオファイル内であると見なされます。
.attrib:target
+shortinfo
 ラベル名
+required
 no
+format
 ラベル名
+info
 {\b target属性} ( ラベル名 )\par 必申{? : {\b no} \par 値 : {\b ラベル名} \par \par　ジャンプ先のラベルを指定します。\par 　省略すると、ファイルの先頭から実行されます。\par 
.attrib:countpage
+shortinfo
 このジャンプを「読んだ」と見なすか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b countpage属性} ( このジャンプを「読んだ」と見なすか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　他のラベルに移行するときに、このタグのある場所のラベルを「読んだ」とみなすかどうかを指定します。\par 　ジャンプする際にそのページが「読んだ」ことになっては困る場合に false を指定します。

*l
.shortinfo
 行末クリック待ち
.remarks
 {\b lタグ} ( 行末クリック待ち )\par \par 　行末のクリック待ちを行います。p タグとは、メッセージ履歴への改行の出力の違いや、「文字表\示 &gt; ページ末まで一気に」を使用したときの挙動の違いなどがあります。\par 　current タグで裏ページのメッセージレイヤを指定している場合はこの記号は表\示されません。表\示したい場合は表\ページのメッセージレイヤを指定してください。

*laycount
.shortinfo
 レイヤの数の変更
.remarks
 {\b laycountタグ} ( レイヤの数の変更 )\par \par 　前景レイヤまたはメッセージレイヤの数を変更します。いずれの属性も省略すれば設定は変更されません。\par 　レイヤ数に制限はありませんが、実行環境の OS やメモリによって制限を受ける可能\性があります。\par 　レイヤの数は必要最小限にしておくべきです。たくさんのレイヤを確保してそれを使い終わったら、なるべく必要最小限の状態に戻しておくのが良いでしょう。\par 
.attrib:layers
+shortinfo
 前景レイヤの数
+required
 no
+format
 0 または正の整数
+info
 {\b layers属性} ( 前景レイヤの数 )\par 必申{? : {\b no} \par 値 : {\b 0 または正の整数} \par \par　前景レイヤの数を指定します。
.attrib:messages
+shortinfo
 メッセージレイヤの数
+required
 no
+format
 正の整数
+info
 {\b messages属性} ( メッセージレイヤの数 )\par 必申{? : {\b no} \par 値 : {\b 正の整数} \par \par　メッセージレイヤの数を指定します。\par 　0 は指定できません。

*layopt
.shortinfo
 レイヤの属性
.remarks
 {\b layoptタグ} ( レイヤの属性 )\par \par 　レイヤの属性を指定します。
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 0 以上の整数または message0 または message1 または message
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b 0 以上の整数または message0 または message1 または message} \par \par　対象となる前景レイヤまたはメッセージレイヤを指定します。　message とのみ指定した場合は、currentタグで指定した、現在の操作対象のメッセージレイヤが対象となります。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "fore"(デフォルト) または "back"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "fore"(デフォルト) または "back"} \par \par　 表\(fore)画面のレイヤを対象とするか、裏(back)画面のレイヤを対象とするかを指定します。省略すると表\ページであると見なされます。\par 　ただし、layer=message とのみ指定した場合でこの属性を省略した場合は現在操作対象のページのメッセージレイヤが選択されます。
.attrib:visible
+shortinfo
 レイヤの可視・不可視
+required
 no
+format
 true または false
+info
 {\b visible属性} ( レイヤの可視・不可視 )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　layer 属性で指定したレイヤを表\示するか、しないかを指定します。visible=true と指定すれば、レイヤは表\示状態になります。visible=false と指定すれば、非表\示状態になります。省略すると表\示状態は変わりません。
.attrib:left
+shortinfo
 レイヤ左端位置
+required
 no
+format
 左端位置(pixel単位)
+info
 {\b left属性} ( レイヤ左端位置 )\par 必申{? : {\b no} \par 値 : {\b 左端位置(pixel単位)} \par \par　layer 属性で指定したレイヤの左端位置を指定します。省略すると位置は変更しません。\par 　layer 属性に message0 や message1 を指定した場合は、むしろposition タグで位置等を指定してください。\par 　ただし、position タグはメッセージレイヤをクリアしてしまいますが、このタグではクリアしません。内容を維持したまま表\示位置を変えたい場合はこのタグを使います。
.attrib:top
+shortinfo
 レイヤ上端位置
+required
 no
+format
 上端位置(pixel単位)
+info
 {\b top属性} ( レイヤ上端位置 )\par 必申{? : {\b no} \par 値 : {\b 上端位置(pixel単位)} \par \par　layer 属性で指定したレイヤの上端位置を指定します。省略すると位置は変更しません。\par 　layer 属性に message0 や message1 を指定した場合は、むしろposition タグで位置等を指定してください。\par 　ただし、position タグはメッセージレイヤをクリアしてしまいますが、このタグではクリアしません。内容を維持したまま表\示位置を変えたい場合はこのタグを使います。
.attrib:opacity
+shortinfo
 不透明度
+required
 no
+format
 不透明度 ( 0 (全くの透明) 〜 255 (全くの不透明 ) )
+info
 {\b opacity属性} ( 不透明度 )\par 必申{? : {\b no} \par 値 : {\b 不透明度 ( 0 (全くの透明) 〜 255 (全くの不透明 ) )} \par \par　レイヤの不透明度を指定します。\par 　デフォルトで 255 (全くの不透明) です。128 を指定すると半分程度の透明度になり、透けて表\示されます。\par 　opacity=0 としてもレイヤを見えなくすることが出来ますが、全くの透明になっただけで非表\示になるわけではありません。\par 　また、この属性を設定してもレイヤの画像自体が変化するわけではありません。たとえば opacity=128 として半透明にした後に 255 に戻しても正常に表\示されます。\par 　メッセージレイヤに対してもこの属性を指定できますが、position タグで指定する opacity 属性とは意味が違います。\par 
.attrib:autohide
+shortinfo
 メッセージレイヤとともに隠すか
+required
 no
+format
 true または false
+info
 {\b autohide属性} ( メッセージレイヤとともに隠すか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　前景レイヤ以外には指定しないでください。\par 　[システム|メッセージを消す] メニューを選択したときにメッセージレイヤが隠れますが、それと同時にこの前景レイヤも隠すかどうかを指定します。
.attrib:index
+shortinfo
 重ね合わせ順序
+required
 no
+format
 正の整数
+info
 {\b index属性} ( 重ね合わせ順序 )\par 必申{? : {\b no} \par 値 : {\b 正の整数} \par \par　背景レイヤには指定しないでください。\par 　重ね合わせ順序を指定します。値が大きいほど手前に表\示されます。\par 　標準では、前景レイヤ 0 が 1000、前景レイヤ 1 が 2000 ( 以降 1000 ずつ増える )、メッセージレイヤ 0 が 1000000、メッセージレイヤ 1 が 1001000 ( 以降 1000 ずつ増える )、　メッセージ履歴を表\示するためのレイヤが 2000000 となっています。\par 　背景レイヤの重ね合わせ順序は変更することはできません。\par 　laycount タグを実行すると、この重ね合わせ順序は標準の状態に戻されてしまう場合があるので注意してください。\par 

*link
.shortinfo
 ハイパーリンク
.remarks
 {\b linkタグ} ( ハイパーリンク )\par \par 　link タグと endlink タグで囲まれた部分の文章を、ソ}ウスやキーソ{ードで選択可能\にし、そこでクリックされたりキーを押されたときに、ジャンプする先を指定できます。\par exp 属性を指定すれば、リンクをクリックされたときに変数に値を代入するというような動作も行わせることができます。\par 　囲まれた文章は、ページをまたぐことは出来ません(行をまたぐことはできます)。\par 　一画面中に最大で 255 個のリンクを作成することができます。
.attrib:storage
+shortinfo
 シナリオファイル名
+required
 no
+format
 シナリオファイル名
+info
 {\b storage属性} ( シナリオファイル名 )\par 必申{? : {\b no} \par 値 : {\b シナリオファイル名} \par \par　ジャンプ先のシナリオファイルを指定します。省略すると、現在のシナリオファイル内であると見なされます。
.attrib:target
+shortinfo
 ラベル名
+required
 no
+format
 ラベル名
+info
 {\b target属性} ( ラベル名 )\par 必申{? : {\b no} \par 値 : {\b ラベル名} \par \par　ジャンプ先のラベルを指定します。\par 　省略すると、ファイルの先頭から実行されます。\par 
.attrib:exp
+shortinfo
 TJS 式
+required
 no
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b no} \par 値 : {\b TJS 式} \par \par　クリックされたときに実行される TJS 式を指定します。省略すれば式は実行されません。storage や target が指定されていた場合、この式が実行されてからジャンプ先に移動します。
.attrib:color
+shortinfo
 リンクの強調色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b color属性} ( リンクの強調色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　リンクが選択されたときに出る半透明の矩形の色を指定します。
.attrib:hint
+shortinfo
 ツールチップヒント
+required
 no
+format
 ヒントとして表示させる文字列
+info
 {\b hint属性} ( ツールチップヒント )\par 必申{? : {\b no} \par 値 : {\b ヒントとして表\示させる文字列} \par \par　リンクを選択し、ソ}ウスカーソ\ルを静止させたときに表\示されるツールチップヒントを指定します。\par 　省略すると表\示は行われません。\par 　リンクの説明の補足に使えますが、hint 属性のみを指定し、target, storage, exp 属性は指定しないで空のリンクを作成し、小難しい単語の説明をすることなどもできます。
.attrib:onenter
+shortinfo
 マウス進入時
+required
 no
+format
 TJS 式
+info
 {\b onenter属性} ( ソ}ウス進入時 )\par 必申{? : {\b no} \par 値 : {\b TJS 式} \par \par　リンク内にソ}ウスカーソ\ルが入ってきたときに実行される TJS 式を指定します。
.attrib:onleave
+shortinfo
 マウス退出時
+required
 no
+format
 TJS 式
+info
 {\b onleave属性} ( ソ}ウス退出時 )\par 必申{? : {\b no} \par 値 : {\b TJS 式} \par \par　リンク内からソ}ウスカーソ\ルが出ていった時に実行される TJS 式を指定します。
.attrib:countpage
+shortinfo
 このジャンプを「読んだ」と見なすか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b countpage属性} ( このジャンプを「読んだ」と見なすか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　リンクを選択して他のラベルに移行するときに、このリンクのある場所のラベルを「読んだ」とみなすかどうかを指定します。\par 　[s] タグを実行する前にリンクが選択されてジャンプする際に、そのページが「読んだ」ことになっては困る場合に false を指定します。
.attrib:clickse
+shortinfo
 クリック時の効果音
+required
 no
+format
 効果音ファイル名
+info
 {\b clickse属性} ( クリック時の効果音 )\par 必申{? : {\b no} \par 値 : {\b 効果音ファイル名} \par \par　クリックされたときに再生する効果音を指定します。指定しなければ効果音は再生されません。
.attrib:clicksebuf
+shortinfo
 クリック時の効果音のバッファ番号
+required
 no
+format
 効果音バッファ番号
+info
 {\b clicksebuf属性} ( クリック時の効果音のバッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号} \par \par　clickse で指定した効果音を鳴らす効果音バッファを指定します。省略すると 0 であると見なされます。
.attrib:enterse
+shortinfo
 マウス進入時の効果音
+required
 no
+format
 効果音ファイル名
+info
 {\b enterse属性} ( ソ}ウス進入時の効果音 )\par 必申{? : {\b no} \par 値 : {\b 効果音ファイル名} \par \par　ソ}ウスが進入したときに再生する効果音を指定します。指定しなければ効果音は再生されません。
.attrib:entersebuf
+shortinfo
 マウス進入時の効果音のバッファ番号
+required
 no
+format
 効果音バッファ番号
+info
 {\b entersebuf属性} ( ソ}ウス進入時の効果音のバッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号} \par \par　enterse で指定した効果音を鳴らす効果音バッファを指定します。省略すると 0 であると見なされます。
.attrib:leavese
+shortinfo
 マウス退出時の効果音
+required
 no
+format
 効果音ファイル名
+info
 {\b leavese属性} ( ソ}ウス退出時の効果音 )\par 必申{? : {\b no} \par 値 : {\b 効果音ファイル名} \par \par　ソ}ウスが退出したときに再生する効果音を指定します。指定しなければ効果音は再生されません。
.attrib:leavesebuf
+shortinfo
 マウス退出時の効果音のバッファ番号
+required
 no
+format
 効果音バッファ番号
+info
 {\b leavesebuf属性} ( ソ}ウス退出時の効果音のバッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号} \par \par　leavese で指定した効果音を鳴らす効果音バッファを指定します。省略すると 0 であると見なされます。

*load
.shortinfo
 栞の読み込み
.remarks
 {\b loadタグ} ( 栞の読み込み )\par \par 　非フリーセーブモードにおいて、栞から読み込みます。メニューから「栞をたどる」を選んだときと同じ動作です。
.attrib:place
+shortinfo
 保存場所
+required
 no
+format
 0または正の整数(0がデフォルト)
+info
 {\b place属性} ( 保存場所 )\par 必申{? : {\b no} \par 値 : {\b 0または正の整数(0がデフォルト)} \par \par　栞の番号を指定します。省略すると 0 が指定されたと見なされます。\par 　どのような数値を指定してもかまいませんが、999 〜 1999 は特別な意味を持つ栞です。
.attrib:ask
+shortinfo
 確認をするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b ask属性} ( 確認をするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、栞をたどるかどうかの確認をします。false を指定すると栞をたどるかどうかの確認はありません。この属性を省略すると false を指定したとみなされます。\par 　栞をたどる確認でユーザが「いいえ」を選んだ場合、実行はそのまま継続します。

*loadplugin
.shortinfo
 プラグインの読み込み
.remarks
 {\b loadpluginタグ} ( プラグインの読み込み )\par \par 　このタグで読み込むプラグインは、\par ・プロジェクトフォルダ直下\par ・吉里吉里実行可能\ファイルのあるフォルダ以下の plugin フォルダ\par ・吉里吉里実行可能\ファイルのあるフォルダ\par のいずれかに置いておく必要があります。\par 　module 属性で指定するプラグインの拡張子は省略できません。
.attrib:module
+shortinfo
 プラグイン名
+required
 yes
+format
 プラグインファイル名
+info
 {\b module属性} ( プラグイン名 )\par 必申{? : {\b yes} \par 値 : {\b プラグインファイル名} \par \par読み込みたいプラグインファイル名を指定します。\par 

*locate
.shortinfo
 文字表示位置の指定
.remarks
 {\b locateタグ} ( 文字表\示位置の指定 )\par \par 　文字表\示位置を指定します。\par 　position タグで指定した marginl と margint の属性の値が実際には加算されます。\par 　横書きの場合は y を、縦書きの場合は x を省略することにより同じ行内での文字表\示位置の変更が可能\となります。
.attrib:x
+shortinfo
 横方向位置
+required
 no
+format
 横方向位置 (pixel単位)
+info
 {\b x属性} ( 横方向位置 )\par 必申{? : {\b no} \par 値 : {\b 横方向位置 (pixel単位)} \par \par　文字を表\示する x 座標位置を指定します。
.attrib:y
+shortinfo
 縦方向位置
+required
 no
+format
 縦方向位置 (pixel単位)
+info
 {\b y属性} ( 縦方向位置 )\par 必申{? : {\b no} \par 値 : {\b 縦方向位置 (pixel単位)} \par \par　文字を表\示する y 座標位置を指定します。

*locklink
.shortinfo
 リンクのロック
.remarks
 {\b locklinkタグ} ( リンクのロック )\par \par 　すべてのメッセージレイヤのリンクをロックします。リンクがロックされると、メッセージレイヤ上のリンク ( ソ{タン、エディット、チェックソ{ックスも含む ) はすべて選択や操作が不能\になります。\par 　時間制限付きの選択肢などで、時間を経過したら選択肢を選択不能\にする場合などに使用します。\par 　リンクのロックは、新しい別のリンクが作成されると自動的に解除されます。\par 　逆の動作をする unlocklink タグもあります。\par 

*locksnapshot
.shortinfo
 スナップショットのロック
.remarks
 {\b locksnapshotタグ} ( スナップショットのロック )\par \par 　スナップショットをロックします。栞でサムネイルを保存する場合に画面のスナップショットを撮りますが、スナップショットをロックすると、次にunlocksnapshot タグでロックを解除するまで、スナップショットをロックした時点での画像をサムネイルとして保存するようになります。\par 　これを利用して、右クリックサブルーチンに入ったときにこのタグを使用すれば、右クリックサブルーチン内で栞を保存しても、保存されるサムネイルは右クリックサブルーチンに入ったときのスナップショットが使われるようになります ( ロックをしないと右クリックサブルーチンに入っている最中のスナップショットが保存されてしまう )。\par 　locksnapshot タグを使ったら、かならず unlocksnapshot タグも使用しなければなりません ( 右クリックサブルーチンに使ったならば、右クリックサブルーチンを抜けるときには必ず unlocksnapshot タグを実行するようにしてください )。\par 

*macro
.shortinfo
 マクロの記述
.remarks
 {\b macroタグ} ( ソ}クロの記述 )\par \par 　ソ}クロ記述を開始します。新しいタグを定義することが出来ます。\par 　このタグから、endmacro タグまでにある文章やタグは、name 属性で指定されたタグとして登録され、以後使用できるようになります。\par 　ただし、ソ}クロ中に iscript タグを使用することはできません。\par 　ソ}クロ中に書かれたタグには、特別に % を頭につけた属性の値を指定することができます。% 以降にはソ}クロに渡された属性名を指定します。すると、ソ}クロに渡された属性の値をその属性の値とすることができます。このとき、| を使って属性の省略値を指定することもできます ( 下の例参照 )。属性名には小文字を用いてください。\par 　また、属性の代わりに * を書くと、ソ}クロに渡されたすべての属性をそのタグに渡すことができます。\par 例:\par {\f3 [macro name="newtag"][font color=0xff0000]新しいタグです[resetfont][endmacro]\par [newtag]\par [macro name="colortag"][font color=%iro]iro 属性付きのタグ[resetfont][endmacro]\par [colortag iro=0x332211]\par ; ↑ colotag に渡された iro 属性の値が font タグの color 属性に渡される\par [macro name="transwait"][trans *][wt][endmacro]\par ; ↑ この transwait に渡されたすべての属性が trans タグに渡される\par [macro name="colortag"][font color=%iro|0xff0000]iro 属性付きで省略値をしていしたタグ[resetfont][endmacro]\par ; ↑ % の属性の値では、 | のあとに続けて、その属性の省略値を指定することができます\par }
.attrib:name
+shortinfo
 タグ名
+required
 yes
+format
 タグ名
+info
 {\b name属性} ( タグ名 )\par 必申{? : {\b yes} \par 値 : {\b タグ名} \par \par　タグ名を指定します。以後、この名前で新しいタグが定義され、ソ}クロを使用できるようになります。

*mapaction
.shortinfo
 クリッカブルマップ用領域アクション定義ファイルの指定
.remarks
 {\b mapactionタグ} ( クリッカブルソ}ップ用領域アクション定義ファイルの指定 )\par \par 　指定したレイヤのクリッカブルソ}ップの領域アクション定義に使用するファイルを指定します。\par 　このタグや image タグで領域アクション定義ファイルを読み込むと実際にクリッカブルソ}ップが使用可能\になります。mapdisable タグでクリッカブルソ}ップを使用不可能\にすることができます。\par 　詳しくは KAG System リファレンスをご覧ください。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　対象とするレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:storage
+shortinfo
 領域アクション定義ファイル
+required
 yes
+format
 領域アクション定義ファイル名
+info
 {\b storage属性} ( 領域アクション定義ファイル )\par 必申{? : {\b yes} \par 値 : {\b 領域アクション定義ファイル名} \par \par　領域アクション定義ファイルを指定します。

*mapdisable
.shortinfo
 クリッカブルマップの無効化
.remarks
 {\b mapdisableタグ} ( クリッカブルソ}ップの無効化 )\par \par 　指定したレイヤのクリッカブルソ}ップを無効にします。　以降は image タグや  mapaction  タグを使って領域アクション定義ファイルを読み込まなければクリッカブルソ}ップは使用できません。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　対象とするレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。

*mapimage
.shortinfo
 クリッカブルマップ用領域画像の指定
.remarks
 {\b mapimageタグ} ( クリッカブルソ}ップ用領域画像の指定 )\par \par 　指定したレイヤのクリッカブルソ}ップの領域画像に使用するファイルを指定します。\par 　image タグや mapaction タグで領域アクション定義ファイルを読み込まないとクリッカブルソ}ップは使用できません。\par 　詳しくは KAG System リファレンスをご覧ください。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　対象とするレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:storage
+shortinfo
 画像ファイル名
+required
 yes
+format
 画像ファイル名
+info
 {\b storage属性} ( 画像ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b 画像ファイル名} \par \par　クリッカブルソ}ップの領域画像として用いるファイルを指定します。　ファイルは 256 色で保存されている必要があります。

*mappfont
.shortinfo
 レンダリング済みフォントの割り当て
.remarks
 {\b mappfontタグ} ( レンダリング済みフォントの割り当て )\par \par 　現在操作対象になっているメッセージレイヤの現在のフォントに、指定したレンダリング済みフォントを割り当てます。このタグ以降、吉里吉里でそのフォントを描画するときは常に指定したレンダリング済みフォントが使用されます。\par 　割り当てるフォントは実際に存在していなくてもかまいません。たとえば、"ほげほげフォント" というフォントが選択されている状態で mappfont を使えば、その "ほげほげフォント" に任意のレンダリング済みフォントを割り当てることができます。一つのフォント名には一つのレンダリング済みフォントしか割り当てることしかできません ( たとえば、一つのフォント名に対して複数のサイズの違うレンダリング済みフォントを割り当てるようなことはできません )。\par 　また、複数のレンダリング済みフォントをそれぞれ別のフォントに割り当てることができます。
.attrib:storage
+shortinfo
 ファイル名
+required
 yes
+format
 ファイル名
+info
 {\b storage属性} ( ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b ファイル名} \par \par現在のフォントに割り当てたいレンダリング済みフォントファイルを指定します。\par 

*move
.shortinfo
 レイヤの自動移動
.remarks
 {\b moveタグ} ( レイヤの自動移動 )\par \par 　指定したレイヤに自動移動をさせます。\par 　レイヤは現在の位置・表\示濃度からスタートして、path で指定された位置・表\示濃度を元にして移動したり表\示濃度を変化させます。現在の位置や表\示濃度から移動がスタートするので、path 属性の最初の位置/濃度には、一番最初のレイヤの位置や表\示濃度を指定する必要はありません。( つまり一番最初の位置や表\示濃度は layopt タグなどで指定する必要があります )。\par 　複数のレイヤに対して move タグを非同期に実行することができます。\par 　このタグはレイヤの自動移動の終了を待ちません。待つには wm タグを指定してください。\par 　前景レイヤに画面よりも大きな画面を読み込み、このタグを使って移動させればスクロールの効果を得ることができます。斜めスクロールも可能\です。\par 　自動移動中は、メッセージレイヤへの文字描画ができなかったり、文字描画が遅くなったりします。\par 　ソ}ウスのクリック等で自動移動は中断されます。中断されないようにするには clickskip タグでクリックスキップを禁止してください。\par 例:\par {\f3 [image storage=s1 layer=0 page=fore visible=true left=0 top=480 opacity=0]\par [image storage=s2 layer=1 page=fore visible=true left=320 top=240 opacity=0]\par [move time=4000 path="(0,240,255) (0,0,255) (0,-240,255) (0,-480,0)" layer=0]\par [move time=4000 path="(320,240,0) (320,240,511) (320,240,0) (320, 240,0)" layer=1]\par [wm][wm]}
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 0 以上の整数 または message0 または message1 または message
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b 0 以上の整数 または message0 または message1 または message} \par \par　対象となるレイヤを指定します。\par 　0 以上の整数を指定すると前景レイヤになります。\par 　message0 または message1 を指定するとメッセージレイヤになります。単に message とのみ指定した場合は、current タグで指定した現在の操作対象のメッセージレイヤが対象になります。\par 　背景レイヤは指定しないでください。\par 
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　layer 属性で指定したレイヤが、表\(fore)画面であるか、裏(back)画面であるかを指定します。省略すると表\ページであると見なされます。\par 　ただし、layer=message とのみ指定した場合でこの属性を省略した場合は現在操作対象のページのメッセージレイヤが選択されます。
.attrib:spline
+shortinfo
 スプライン補間
+required
 no
+format
 true または false(デフォルト)
+info
 {\b spline属性} ( スプライン補間 )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、path 属性で指定した位置をＢスプラインで曲線補間した線上をレイヤが移動するようになります。\par 　false を指定すると、path 属性で指定した位置を直線補間した線上をレイヤが移動します。\par 　true を指定した場合は path には最低 2 点を指定してください。
.attrib:time
+shortinfo
 1点を通過する時間
+required
 yes
+format
 時間(ms単位)
+info
 {\b time属性} ( 1点を通過する時間 )\par 必申{? : {\b yes} \par 値 : {\b 時間(ms単位)} \par \par　レイヤが path を指定した点から点を移動するのに必要な時間を指定します。\par 　そのため、移動には、通過する点間の区間の数×この属性の値の時間がかかります。\par 　ただし、accel 属性に 0 以外を指定した場合は 一点を通過する時間は変化します ( 移動全体に要する時間は 通過する区間の数×この属性の値です )。
.attrib:delay
+shortinfo
 動作を開始するまでの時間
+required
 no
+format
 時間(ms単位)
+info
 {\b delay属性} ( 動作を開始するまでの時間 )\par 必申{? : {\b no} \par 値 : {\b 時間(ms単位)} \par \par　レイヤの自動移動が開始されるまでの時間を ms で指定します。\par 　省略すると 0 であるとみなされます。
.attrib:path
+shortinfo
 移動位置
+required
 yes
+format
 "(x1,y1,opacity1) (x2,y2,opacity2) ..."
+info
 {\b path属性} ( 移動位置 )\par 必申{? : {\b yes} \par 値 : {\b "(x1,y1,opacity1) (x2,y2,opacity2) ..."} \par \par　移動位置を指定します。\par 　移動位置は、x(レイヤ左端位置), y(レイヤ上端位置), opacity(レイヤ濃度) を３つづつ、カンソ}や空白、( ) で区切って指定します。\par 　これらの間を、スプライン補間または直線補間にてレイヤが移動します。\par 　opacity にはレイヤの表\示濃度を指定します。レイヤの濃度も点から点を移動する間に連続的に変化します。レイヤの濃度を連続的ではなく、突発的 ? に変化させたい場合は濃度に 256 を足した数値を指定してください。\par 　レイヤを移動させずに表\示濃度変化のみを行う場合は、レイヤ位置にはすべて同じ位置を指定します。\par 
.attrib:accel
+shortinfo
 加速度的な動きをするかどうか
+required
 no
+format
 -1 未満の数または 0(デフォルト) または 1 より大きい数
+info
 {\b accel属性} ( 加速度的な動きをするかどうか )\par 必申{? : {\b no} \par 値 : {\b -1 未満の数または 0(デフォルト) または 1 より大きい数} \par \par　加速度的な動きを行わせるかどうかを指定します。\par 　0 を指定すると、最初から最後まで一定の割合で移動処理が進行します ( 各通過点を等間隔の時間で通過します )。省略すると 0 が指定されたと見なされます。\par 　-1 未満の数を指定すると、最初は早く、徐々に遅くなります。\par 　1 より大きい数を指定すると、最初は遅く、徐々に早くなります。\par 　実数を指定することもできます。\par 

*nextskip
.shortinfo
 「次の選択肢まですすむ」の設定
.remarks
 {\b nextskipタグ} ( 「次の選択肢まですすむ」の設定 )\par \par 　ユーザーが「次の選択肢まで進む」の機能\を使用できるようにするか否かを指定できます。\par 　デモシーンなどでは無効にしていたほうがいい場合があります。\par 
.attrib:enabled
+shortinfo
 有効・無効の設定
+required
 yes
+format
 true または false
+info
 {\b enabled属性} ( 有効・無効の設定 )\par 必申{? : {\b yes} \par 値 : {\b true または false} \par \par　「次の選択肢まで進む」の機能\を有効にする場合は true、無効にする場合は false を指定します。

*nowait
.shortinfo
 文字表示ノーウェイト
.remarks
 {\b nowaitタグ} ( 文字表\示ノーウェイト )\par \par 　文字の表\示速度をノーウェイトに設定します。\par 　このタグは、ノーウェイトに設定する前に、直前の文字表\示速度を記憶します。この記憶した文字表\示速度に戻すには endnowait タグを使うことができます。\par 　このタグと endnowait タグの間には、保存可能\なラベルを記述しないでください。

*openvideo
.shortinfo
 ビデオ/SWFの再生準備
.remarks
 {\b openvideoタグ} ( ビデオ/SWFの再生準備 )\par \par 　ビデオまたはSWF(Shockwave Flash)の再生の準備をします。\par 　一般的にビデオの再生準備には時間がかかるので、再生のタイミングをほかのものと同期させたい場合など、このタグを使って再生準備のみを先に行わせることができます。\par 　再生準備をしたビデオやSWFを再生するには playvideo タグを使用します。\par 　このタグを使用しなくても playvideo タグで再生するファイル名を指定して再生をさせることはできます。\par 
.attrib:storage
+shortinfo
 ファイル名
+required
 yes
+format
 ファイル名
+info
 {\b storage属性} ( ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b ファイル名} \par \par　再生準備するファイル名を指定します。\par 

*p
.shortinfo
 改ページクリック待ち
.remarks
 {\b pタグ} ( 改ページクリック待ち )\par \par 　改ページのクリック待ちを行います。\par 　行末に [p] と書いた場合は、そのあとに \\ があってもなくても改行はしません( Config.tjs で global.ignoreCR を false に設定した場合 )。\par 　current タグで裏ページのメッセージレイヤを指定している場合はこの記号は表\示されません。表\示したい場合は表\ページのメッセージレイヤを指定してください。

*pausebgm
.shortinfo
 BGM 演奏の一時停止
.remarks
 {\b pausebgmタグ} ( BGM 演奏の一時停止 )\par \par 　BGM 演奏を一時停止します。Config.tjs で BGM 再生メディアに "Wave" を指定した場合のみに有効です。\par 　BGM の一時停止状態は栞に保存されませんので注意してください。\par 　一時停止した BGM を再開するには resumebgm タグを使用してください。

*pimage
.shortinfo
 画像の部分追加読み込み
.remarks
 {\b pimageタグ} ( 画像の部分追加読み込み )\par \par 　指定したレイヤに画像を追加して読み込みます。\par 　指定したレイヤの指定した部分に、別の画像ファイルの一部分を重ね合わせたり、コピーしたりすることができます。\par 　いくらでも画像を追加して読み込むことができます。ただし、いくらでも、といっても、画像を追加して読み込むとその「画像を追加して読み込んだ」という情報がどんどんと蓄積されていってしまうので注意してください。\par 　新しく image タグでレイヤに画像を読み込んだり、freeimage タグで画像を解放すると、追加して読み込んだ画像やその情報は消えます。\par 　たとえば、一定時間間隔でレイヤに画像を追加して読み込んでアニメーション、という用途にはこのタグではなくてアニメーションの機能\を使ったほうが良いでしょう。\par 　このタグは、image タグで画像を読み込んだが、その画像の一部分だけを変えたい、というときに、該当する image タグの直後に記述する、という用途に使います。
.attrib:storage
+shortinfo
 画像ファイル名
+required
 yes
+format
 画像ファイル名
+info
 {\b storage属性} ( 画像ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b 画像ファイル名} \par \par　追加して読み込む画像を指定します。
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　画像を追加して読み込むレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤに画像を読み込みます。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:key
+shortinfo
 カラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b key属性} ( カラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \par　storage で指定した画像の、どの色を抜き色とするかを指定します。省略すると抜き色は無効になります。 　key=0xRRGGBB という形式で 16 進数で抜き色を指定すると、RR(赤) GG(緑) BB(青)で塗られた部分を抜き色として透明にします。たとえば、key=0xff00ff では (r,g,b)=(255,0,255) つまり真ソ}ゼンダの部分を抜き色として透明にするという指定になります。\par 　ただ単に数値を指定すれば、そのパレットインデックスの数値が抜き色となります。16色/256色の画像に対して有効です。\par 　key=adapt と指定すれば、自動的に抜き色が決定されます。使用される抜き色は、画像の一番上のラインにて、一番多く使われている色です。16色/256色の画像に対して有効です。\par 　ソ}スク画像を使用する場合は、この属性は指定する必要はありません。
.attrib:dx
+shortinfo
 画像読み込み先 x 座標
+required
 yes
+format
 ピクセル単位
+info
 {\b dx属性} ( 画像読み込み先 x 座標 )\par 必申{? : {\b yes} \par 値 : {\b ピクセル単位} \par \par重ね合わせ、あるいはコピーする先の左端 x 座標を(対象のレイヤ内の座標で)指定します。
.attrib:dy
+shortinfo
 画像読み込み先 y 座標
+required
 yes
+format
 ピクセル単位
+info
 {\b dy属性} ( 画像読み込み先 y 座標 )\par 必申{? : {\b yes} \par 値 : {\b ピクセル単位} \par \par重ね合わせ、あるいはコピーする先の上端 y 座標を(対象のレイヤ内の座標で)指定します。
.attrib:sx
+shortinfo
 画像読み込み元 x 座標
+required
 no
+format
 ピクセル単位
+info
 {\b sx属性} ( 画像読み込み元 x 座標 )\par 必申{? : {\b no} \par 値 : {\b ピクセル単位} \par \par重ね合わせ、あるいはコピーする元の左端 x 座標を(追加して読み込む画像内の座標で)指定します。\par 　省略すると 0 であると見なされます。
.attrib:sy
+shortinfo
 画像読み込み元 y 座標
+required
 no
+format
 ピクセル単位
+info
 {\b sy属性} ( 画像読み込み元 y 座標 )\par 必申{? : {\b no} \par 値 : {\b ピクセル単位} \par \par重ね合わせ、あるいはコピーする元の上端 y 座標を(追加して読み込む画像内の座標で)指定します。\par 　省略すると 0 であると見なされます。
.attrib:sw
+shortinfo
 画像読み込み元幅
+required
 no
+format
 ピクセル単位
+info
 {\b sw属性} ( 画像読み込み元幅 )\par 必申{? : {\b no} \par 値 : {\b ピクセル単位} \par \par　重ね合わせ、あるいはコピーする幅を指定します。\par 　省略すると、追加して読み込む画像の幅すべてであると見なされます。
.attrib:sh
+shortinfo
 画像読み込み元高さ
+required
 no
+format
 ピクセル単位
+info
 {\b sh属性} ( 画像読み込み元高さ )\par 必申{? : {\b no} \par 値 : {\b ピクセル単位} \par \par　重ね合わせ、あるいはコピーする高さを指定します。\par 　省略すると、追加して読み込む画像の高さすべてであると見なされます。
.attrib:mode
+shortinfo
 重ね合わせモード
+required
 no
+format
 "copy" (デフォルト) または "pile" または "add" または "sub" または "mul" または "dodge" または "darken" または "lighten" または "screen"
+info
 {\b mode属性} ( 重ね合わせモード )\par 必申{? : {\b no} \par 値 : {\b "copy" (デフォルト) または "pile" または "add" または "sub" または "mul" または "dodge" または "darken" または "lighten" または "screen"} \par \par　sx sy sw sh の各属性で指定した矩形領域を 重ね合わせるか、あるいは単純にコピーするか、あるいは演算を行うかを指定します。"copy" を指定すると矩形領域はコピーされます。"pile" を指定すると、重ね合わせが行われます。\par 　"add" "sub" "mul" "dodge" "darken" "lighten" "screen" はそれぞれ、加算、減算、乗算、多い焼き、比較(暗)、比較(明)、スクリーン乗算の合成を行います。　省略すると "pile" が指定されたと見なされます。
.attrib:opacity
+shortinfo
 不透明度
+required
 no
+format
 不透明度 ( 0 (全くの透明) 〜 255 (全くの不透明 ) )
+info
 {\b opacity属性} ( 不透明度 )\par 必申{? : {\b no} \par 値 : {\b 不透明度 ( 0 (全くの透明) 〜 255 (全くの不透明 ) )} \par \par　mode 属性で "pile" を指定した場合の重ね合わせの不透明度、あるいは "add" "sub" "mul" "dodge" "darken"  "lighten" "screen" のいずれかを指定した場合の演算の強度を指定します。\par 　省略すると 255 であると見なされます。\par 

*playbgm
.shortinfo
 BGM の演奏
.remarks
 {\b playbgmタグ} ( BGM の演奏 )\par \par 　BGM を演奏します。
.attrib:storage
+shortinfo
 BGM ファイル名
+required
 yes
+format
 BGM ファイル名
+info
 {\b storage属性} ( BGM ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b BGM ファイル名} \par \par　演奏する BGM ファイル名を指定します。
.attrib:loop
+shortinfo
 ループするか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b loop属性} ( ループするか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　BGM をループするかを指定します。\par 　true を指定するとループします。false を指定するとループしません。\par 　省略すると true であると見なされます。

*playse
.shortinfo
 効果音の再生
.remarks
 {\b playseタグ} ( 効果音の再生 )\par \par 　効果音を再生します。\par 　このタグは効果音の再生の終了を待ちません。終了を待つには ws タグを使ってください。
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　効果音を再生するバッファを指定します。一つのバッファでは同時には一つの効果音を鳴らすことができます。\par 　省略すると 0 であると見なされます。
.attrib:storage
+shortinfo
 効果音ファイル名
+required
 yes
+format
 効果音ファイル名
+info
 {\b storage属性} ( 効果音ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b 効果音ファイル名} \par \par　演奏する効果音ファイル名を指定します。\par 　拡張子は省略可能\ですが、省略した場合に自動的に探し出されるのは.wav または .ogg または .mp3 の拡張子を持つファイルだけです。( ただし ogg と mp3 の 再生には SDK 付属のプラグインが必要 )\par そのほかのプラグインで使用可能\になるそのほかのファイル形式を指定する場合は拡張子も指定してください。
.attrib:loop
+shortinfo
 繰り返し再生を行うか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b loop属性} ( 繰り返し再生を行うか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　効果音を繰り返し再生するかどうかを指定します。\par 　true を指定すると繰り返し再生されます。false を指定すると一回限りの再生となります。省略するとfalse であると見なされます。\par 　true を指定した場合は ws タグで効果音再生の終了を待つことはできません。

*playvideo
.shortinfo
 ビデオ/SWFの再生
.remarks
 {\b playvideoタグ} ( ビデオ/SWFの再生 )\par \par 　ビデオまたはSWF(Shockwave Flash)を再生します。video タグで指定した表\示領域にて再生します。ビデオ表\示領域はデフォルトでは非表\示なので、video タグで表\示状態にしないと表\示されません。\par 　このタグはビデオの再生の終了を待ちません。待つには wv を使用してください。\par 　DirectSound と WaveMapper を同時に再生できない環境で、かつ、ビデオやSWFが WaveMapper を使用する場合にはビデオや SWF の音声が再生できない事があります。この場合は、ビデオの再生 ( または再生準備 ) の前に{\f3 [eval exp="WaveSoundBuffer.freeDirectSound()"]} で DirectSound を解放することにより再生できるようになります。\par 
.attrib:storage
+shortinfo
 ファイル名
+required
 no
+format
 ファイル名
+info
 {\b storage属性} ( ファイル名 )\par 必申{? : {\b no} \par 値 : {\b ファイル名} \par \par　再生するファイル名を指定します。\par 　すでに openvideo タグで再生の準備をしていた場合はこの属性を指定する必要はありません。\par 　逆に、openvideo タグを使用しない場合はここでファイル名を指定する必要があります。\par 

*position
.shortinfo
 メッセージレイヤの属性
.remarks
 {\b positionタグ} ( メッセージレイヤの属性 )\par \par 　メッセージレイヤに対する様々な属性を指定します。\par 　いずれの属性も、省略すれば設定は変更されません。\par 　marginl, margint, marginr, marginb のそれぞれの属性は、frame で指定したフレーム画像での表\示領域を指定するのにも使います。　メッセージレイヤに対して個別に設定できます ( 裏ページ・面画面を別の設定にすることもできます )。
.attrib:layer
+shortinfo
 対象レイヤ
+required
 no
+format
 message0 または message1 または message
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b no} \par 値 : {\b message0 または message1 または message} \par \par　対象とするメッセージレイヤを指定します。\par 　省略すると current タグで指定された現在のメッセージレイヤが選択されます。\par 　この属性も page 属性も省略された場合は、current タグで指定された現在のページ・現在のメッセージレイヤが選択されます。
.attrib:page
+shortinfo
 対象ページ
+required
 no
+format
 "fore" または "back"
+info
 {\b page属性} ( 対象ページ )\par 必申{? : {\b no} \par 値 : {\b "fore" または "back"} \par \par　対象とするページを指定します。\par 　この属性を省略すると current タグで指定された現在のページが選択されます。
.attrib:left
+shortinfo
 左端位置
+required
 no
+format
 左端位置 ( pixel 単位 )
+info
 {\b left属性} ( 左端位置 )\par 必申{? : {\b no} \par 値 : {\b 左端位置 ( pixel 単位 )} \par \par　メッセージレイヤの左端位置を指定します。
.attrib:top
+shortinfo
 上端位置
+required
 no
+format
 上端位置 ( pixel 単位 )
+info
 {\b top属性} ( 上端位置 )\par 必申{? : {\b no} \par 値 : {\b 上端位置 ( pixel 単位 )} \par \par　メッセージレイヤの上端位置を指定します。
.attrib:width
+shortinfo
 幅
+required
 no
+format
 幅 ( pixel 単位 )
+info
 {\b width属性} ( 幅 )\par 必申{? : {\b no} \par 値 : {\b 幅 ( pixel 単位 )} \par \par　メッセージレイヤの幅を指定します。
.attrib:height
+shortinfo
 高さ
+required
 no
+format
 高さ ( pixel 単位 )
+info
 {\b height属性} ( 高さ )\par 必申{? : {\b no} \par 値 : {\b 高さ ( pixel 単位 )} \par \par　メッセージレイヤの高さを指定します。
.attrib:frame
+shortinfo
 フレーム画像
+required
 no
+format
 フレーム画像のファイル名
+info
 {\b frame属性} ( フレーム画像 )\par 必申{? : {\b no} \par 値 : {\b フレーム画像のファイル名} \par \par　メッセージレイヤのフレーム画像として表\示させる画像を指定します。使用しない場合は "" を指定してください。"" を指定すると、メッセージレイヤが color および opacity 属性で指定した色、濃度で矩形で表\示されます。　ここで指定したファイル名 (拡張子を除く) 部分に _m を追加したファイルが、もしあれば、ソ}スク画像として読み込まれます。ソ}スク画像は必ず 256 色グレースケールで保存してください。
.attrib:framekey
+shortinfo
 フレーム画像のカラーキー
+required
 no
+format
 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"
+info
 {\b framekey属性} ( フレーム画像のカラーキー )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式 または パレットインデックス番号 または "adapt"} \par \par　frame 属性で指定したフレーム画像の、どの色を抜き色とするかを指定します。省略すると抜き色は無効になります。 　key=0xRRGGBB という形式で 16 進数で抜き色を指定すると、RR(赤) GG(緑) BB(青)で塗られた部分を抜き色として透明にします。たとえば、key=0xff00ff では (r,g,b)=(255,0,255) つまり真ソ}ゼンダの部分を抜き色として透明にするという指定になります。\par 　ただ単に数値を指定すれば、そのパレットインデックスの数値が抜き色となります。16色/256色の画像に対して有効です。\par 　key=adapt と指定すれば、自動的に抜き色が決定されます。使用される抜き色は、画像の一番上のラインにて、一番多く使われている色です。16色/256色の画像に対して有効です。\par 　ソ}スク画像を使用する場合は、この属性を指定する必要はありません。
.attrib:color
+shortinfo
 レイヤの色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b color属性} ( レイヤの色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　メッセージレイヤの表\示色を 0xRRGGBB 形式で指定します。 frame に "" を指定したときに有効です。
.attrib:opacity
+shortinfo
 レイヤの不透明度
+required
 no
+format
 不透明度 ( 0 〜 255 )
+info
 {\b opacity属性} ( レイヤの不透明度 )\par 必申{? : {\b no} \par 値 : {\b 不透明度 ( 0 〜 255 )} \par \par　メッセージレイヤの不透明度を 0 〜 255 の数値で指定します(文字の不透明度や、レイヤ自体の不透明度ではありません)。0 で完全に透明です。frame に "" を指定したときに有効です。
.attrib:marginl
+shortinfo
 左余白
+required
 no
+format
 左余白 ( pixel 単位 )
+info
 {\b marginl属性} ( 左余白 )\par 必申{? : {\b no} \par 値 : {\b 左余白 ( pixel 単位 )} \par \parメッセージレイヤの左余白を指定します。
.attrib:margint
+shortinfo
 上余白
+required
 no
+format
 上余白 ( pixel 単位 )
+info
 {\b margint属性} ( 上余白 )\par 必申{? : {\b no} \par 値 : {\b 上余白 ( pixel 単位 )} \par \parメッセージレイヤの上余白を指定します。
.attrib:marginr
+shortinfo
 右余白
+required
 no
+format
 右余白 ( pixel 単位 )
+info
 {\b marginr属性} ( 右余白 )\par 必申{? : {\b no} \par 値 : {\b 右余白 ( pixel 単位 )} \par \parメッセージレイヤの右余白を指定します。
.attrib:marginb
+shortinfo
 下余白
+required
 no
+format
 下余白 ( pixel 単位 )
+info
 {\b marginb属性} ( 下余白 )\par 必申{? : {\b no} \par 値 : {\b 下余白 ( pixel 単位 )} \par \parメッセージレイヤの下余白を指定します。
.attrib:vertical
+shortinfo
 縦書きモード
+required
 no
+format
 "true" または "false"
+info
 {\b vertical属性} ( 縦書きモード )\par 必申{? : {\b no} \par 値 : {\b "true" または "false"} \par \par　メッセージレイヤを縦書きにモードにするには "true" を指定します。横書きにするには "false" を指定してください。
.attrib:draggable
+shortinfo
 マウスでドラッグ可能か
+required
 no
+format
 "true" または "false"
+info
 {\b draggable属性} ( ソ}ウスでドラッグ可能\か )\par 必申{? : {\b no} \par 値 : {\b "true" または "false"} \par \par　true に設定すると、marginl, margint, marginr, marginb で指定したソ}ージンの部分でかつ、フレーム画像の不透明度が 64 以上の箇所を、ソ}ウスでドラッグすることによりメッセージレイヤをユーザが移動できるようになります。\par 　false を指定するとこの動作は行われません。
.attrib:visible
+shortinfo
 可視か
+required
 no
+format
 "true" または "false"
+info
 {\b visible属性} ( 可視か )\par 必申{? : {\b no} \par 値 : {\b "true" または "false"} \par \par　true に設定すると、メッセージレイヤが可視(表\示状態)になります。\par 　false に設定すると、メッセージレイヤは不可視(非表\示状態)になります。

*ptext
.shortinfo
 レイヤへの文字描画
.remarks
 {\b ptextタグ} ( レイヤへの文字描画 )\par \par 　指定したレイヤに文字を描画します。\par 　メッセージレイヤに表\示するのと異なり、このタグで描画した内容は栞に記録されます (栞を読み込んでも再現されます)。\par 　文字はレイヤに画像を読み込むと消去されます。\par 　なにかの数値ステータスなどを画面上に表\示し続けたい場合に便利です。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　文字を描画するレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤに文字を描画します。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:x
+shortinfo
 x座標値
+required
 yes
+format
 pixel単位
+info
 {\b x属性} ( x座標値 )\par 必申{? : {\b yes} \par 値 : {\b pixel単位} \par \par　文字を描画する横位置を pixel 単位で指定します。\par 
.attrib:y
+shortinfo
 y座標値
+required
 yes
+format
 pixel単位
+info
 {\b y属性} ( y座標値 )\par 必申{? : {\b yes} \par 値 : {\b pixel単位} \par \par　文字を描画する縦位置を pixel 単位で指定します。\par 
.attrib:text
+shortinfo
 描画する文字
+required
 yes
+format
 文字列
+info
 {\b text属性} ( 描画する文字 )\par 必申{? : {\b yes} \par 値 : {\b 文字列} \par \par　描画する文字列を指定します。\par 
.attrib:vertical
+shortinfo
 縦書きかどうか
+required
 no
+format
 false(デフォルト) または true
+info
 {\b vertical属性} ( 縦書きかどうか )\par 必申{? : {\b no} \par 値 : {\b false(デフォルト) または true} \par \par　縦書きかどうかを指定します。true を指定すると縦書きになります。\par 
.attrib:angle
+shortinfo
 文字描画角度
+required
 no
+format
 角度の10倍
+info
 {\b angle属性} ( 文字描画角度 )\par 必申{? : {\b no} \par 値 : {\b 角度の10能{} \par \par　文字描画の角度を指定します。角度の 10 能{の値 ( 0 〜 3600 ) で指定します。\par 　省略すると、横書きの場合は 0、縦書きの場合は 2700 が指定されたと見なされます。\par 
.attrib:size
+shortinfo
 文字サイズ
+required
 no
+format
 文字サイズ(pixel単位)
+info
 {\b size属性} ( 文字サイズ )\par 必申{? : {\b no} \par 値 : {\b 文字サイズ(pixel単位)} \par \par　文字サイズを pixel 単位で指定します。\par 　この属性を省略すると 12 が選択されます。\par 
.attrib:face
+shortinfo
 フォント名
+required
 no
+format
 フォント名
+info
 {\b face属性} ( フォント名 )\par 必申{? : {\b no} \par 値 : {\b フォント名} \par \par　フォント名を指定します。\par 　フォント名には曖昧な指定はできません。スペース、半角／全角も正確に指定してください。\par 　複数のフォント名をカンソ}で区切って指定できます。この場合は、最初の方に書いたフォントが存在すれば、それが優先されて選択されます。\par 　例 : face="HG行書体,ＭＳ Ｐゴシック"\par 　縦書き用フォントは自動的に設定されますので、フォント名の先頭に @ ソ}ークをつける必要はありません。\par 　この属性を省略すると ＭＳ Ｐゴシックが選択されます。\par 
.attrib:color
+shortinfo
 文字色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b color属性} ( 文字色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　文字色を 0xRRGGBB 形式で指定します。\par 　省略すると 0x000000 であると見なされます。\par 
.attrib:italic
+shortinfo
 斜体にするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b italic属性} ( 斜体にするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　文字を斜体にするかどうかを指定します。true を指定すると斜体になります。\par 　この属性を省略すると false であると見なされます。\par 
.attrib:shadow
+shortinfo
 影を表示するか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b shadow属性} ( 影を表\示するか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　文字に影をつけるかを指定します。true を指定すると影がつきます。\par 　edge と shadow 両方に true を指定することはできません。\par 
.attrib:edge
+shortinfo
 袋文字にするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b edge属性} ( 袋文字にするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　文字を袋文字 ( 縁取り文字 ) にするかを指定します。true を指定すると袋文字になります。\par 
.attrib:edgecolor
+shortinfo
 袋文字の袋の色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b edgecolor属性} ( 袋文字の袋の色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　文字の袋の色を 0xRRGGBB 形式で指定します。\par 　省略すると 0x000000 が指定されたと見なされます。\par 
.attrib:shadowcolor
+shortinfo
 影の色
+required
 no
+format
 0xRRGGBB 形式
+info
 {\b shadowcolor属性} ( 影の色 )\par 必申{? : {\b no} \par 値 : {\b 0xRRGGBB 形式} \par \par　影の色を 0xRRGGBB 形式で指定します。\par 　省略すると 0x000000 が指定されたと見なされます。\par 
.attrib:bold
+shortinfo
 太文字にするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b bold属性} ( 太文字にするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　文字を太文字にするかを指定します。 true を指定すると太文字になります。\par 

*quake
.shortinfo
 画面を揺らす
.remarks
 {\b quakeタグ} ( 画面を揺らす )\par \par 　画面を揺らします。\par 　このタグは揺れの終了を待ちません。揺れの終了を待つには wq タグを使用してください。\par 　vmax 属性を 0 に設定すると横揺れになります。hmax 属性を 0 に設定すると縦揺れになります。
.attrib:time
+shortinfo
 揺らしている期間
+required
 yes
+format
 文字数または ms(ミリ秒)
+info
 {\b time属性} ( 揺らしている期間 )\par 必申{? : {\b yes} \par 値 : {\b 文字数または ms(ミリ秒)} \par \par　ここで指定した文字数を表\示するのと同じだけの時間、画面を揺らします。\par 　timemode 属性で ms を指定した場合はミリ秒単位で、delay を指定した場合はdelay タグで指定した文字表\速度×このタグの time 属性で指定した時間分揺れが続きます。\par 
.attrib:timemode
+shortinfo
 time属性の単位
+required
 no
+format
 "ms" または "delay"
+info
 {\b timemode属性} ( time属性の単位 )\par 必申{? : {\b no} \par 値 : {\b "ms" または "delay"} \par \par　time 属性の単位を指定します。\par 　ここの設定のデフォルトは Config.tjs の defaultQuakeTimeInChUnit に　従います。
.attrib:hmax
+shortinfo
 横揺れ最大振幅
+required
 no
+format
 pixel 単位
+info
 {\b hmax属性} ( 横揺れ最大振幅 )\par 必申{? : {\b no} \par 値 : {\b pixel 単位} \par \par　揺れの横方向への最大振幅を指定します。省略すると 10 が指定されたと見なされます。
.attrib:vmax
+shortinfo
 縦揺れ最大振幅
+required
 no
+format
 pixel 単位
+info
 {\b vmax属性} ( 縦揺れ最大振幅 )\par 必申{? : {\b no} \par 値 : {\b pixel 単位} \par \par　揺れの縦方向への最大振幅を指定します。省略すると 10 が指定されたと見なされます。

*r
.shortinfo
 改行する
.remarks
 {\b rタグ} ( 改行する )\par \par 　改行します。\par 

*rclick
.shortinfo
 右クリックの設定
.remarks
 {\b rclickタグ} ( 右クリックの設定 )\par \par 　右クリックや、キーソ{ードから ESC キーを押した時の動作を設定します。\par 　いずれの属性も、省略すれば設定は変更されません。\par 　これらの機能\は、[l] [p] タグでのクリック待ち、[s] タグでの停止時にのみ発動することができます。\par 例:\par {\f3 @rclick call=true target="*rclick" name="右クリック用サブルーチンを呼ぶ(&amp;S)" enabled=true\par \par *rclick\par @rclick jump=true target="*exit" name="戻る(&amp;S)" enabled=true\par @current layer=message1\par @layopt layer=message1 page=fore visible=true\par @er\par ここは右クリックルーチン内です。\par @s\par *exit\par @layopt layer=message1 page=fore visible=false\par @current layer=message0\par @rclick call=true target="*rclick" name="右クリック用サブルーチンを呼ぶ(&amp;S)" enabled=true\par @return\par }
.attrib:call
+shortinfo
 サブルーチンを呼び出すか
+required
 no
+format
 true または false
+info
 {\b call属性} ( サブルーチンを呼び出すか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　true を設定すると、右クリックで storage と target 属性で指定したサブルーチンを呼び出すようになります。jump 属性とこの属性の両方に false を指定すると、通常の 「メッセージを消す」の動作になります。\par 　この属性と jump 属性を同時に true にする事はできません。
.attrib:jump
+shortinfo
 指定場所にジャンプするか
+required
 no
+format
 true または false
+info
 {\b jump属性} ( 指定場所にジャンプするか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　true を設定すると、右クリックで storage と target 属性で指定した場所にジャンプするようになります。call 属性とこの属性の両方に false を指定すると、通常の「メッセージを消す」の動作になります。\par 　この属性と call 属性を同時に true にする事はできません。
.attrib:target
+shortinfo
 サブルーチンの呼び出し先/ジャンプ先
+required
 no
+format
 ラベル
+info
 {\b target属性} ( サブルーチンの呼び出し先/ジャンプ先 )\par 必申{? : {\b no} \par 値 : {\b ラベル} \par \par　call 属性か jump 属性に true を設定した場合、その呼び出し先/ジャンプ先のラベルを指定します。\par 　この属性を target="" とした場合、storage 属性で指定したファイルの先頭から実行が始まります。
.attrib:storage
+shortinfo
 サブルーチンの呼び出し先/ジャンプ先ファイル
+required
 no
+format
 ファイル
+info
 {\b storage属性} ( サブルーチンの呼び出し先/ジャンプ先ファイル )\par 必申{? : {\b no} \par 値 : {\b ファイル} \par \par　call 属性か jump 属性に true を設定した場合、その呼び出し先/ジャンプ先のファイルを指定します。\par 　この属性を storage="" とした場合、右クリックがされた時点でのファイル内のラベルが検索されます。
.attrib:enabled
+shortinfo
 右クリック動作を行うか
+required
 no
+format
 true または false
+info
 {\b enabled属性} ( 右クリック動作を行うか )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　true を設定すると、右クリックによりメッセージレイヤが隠されたり、指定のルーチンが呼び出されたり、指定場所にジャンプしたりします。\par 　false を指定すると、これらの動作は行われません。\par 
.attrib:name
+shortinfo
 メニュー項目名
+required
 no
+format
 メニュー項目名または "default"
+info
 {\b name属性} ( メニュー項目名 )\par 必申{? : {\b no} \par 値 : {\b メニュー項目名または "default"} \par \par　システムメニュー内の「メッセージを消す」のメニュー項目名を指定します。\par 　name=default とすると、デフォルトの「メッセージを消す」になります。\par 　メニューホットキー ( メニュー項目内で下線のついた文字 ) を指定するには、&amp; に続けて文字を指定してください ( たとえば「メッセージを消す(&amp;S)」 )。

*record
.shortinfo
 通過記録を行う
.remarks
 {\b recordタグ} ( 通過記録を行う )\par \par 　現在の位置で通過記録を行います。\par 　通過記録には、直前にある「栞を保存可能\なラベル」の位置が記録され、戻るときはそこに戻りますが、それが実際に通過記録として記録されるタイミングは、このタグを記述した次の「栞を保存可能\なラベル」を通過したときです。\par 

*resetfont
.shortinfo
 文字属性をデフォルトに戻す
.remarks
 {\b resetfontタグ} ( 文字属性をデフォルトに戻す )\par \par 　font タグで指定した文字の属性をデフォルトに戻します。\par 　文字属性は、メッセージレイヤごとに個別に設定できます。

*resetstyle
.shortinfo
 スタイルをデフォルトに戻す
.remarks
 {\b resetstyleタグ} ( スタイルをデフォルトに戻す )\par \par 　style タグで指定した行のスタイルをすべてデフォルトの設定に戻します。

*resetwait
.shortinfo
 ウェイトの初期化
.remarks
 {\b resetwaitタグ} ( ウェイトの初期化 )\par \par 　wait タグの mode=until で使用する時間原点を設定します。\par 　このタグと wait タグの間には栞を保存可能\なラベルを書かないでください ( 途中で栞を保存してもこの情報までは保存されないので )。\par 例:\par {\f3 [resetwait]\par [wait mode=until time=3000]\par ; ↑ resetwait を通過した時間から 3 秒経過するまで待つ}

*resumebgm
.shortinfo
 BGM 演奏の再開
.remarks
 {\b resumebgmタグ} ( BGM 演奏の再開 )\par \par 　pausebgm タグで一時停止した BGM を再開します。

*return
.shortinfo
 サブルーチンから戻る
.remarks
 {\b returnタグ} ( サブルーチンから戻る )\par \par 　サブルーチンから呼び出し元に戻ります。\par 　storage と target を両方とも省略すると、呼び出し元の call タグの直後に戻ります。storage や target を指定すれば、任意の場所に戻ることができます。\par 　call タグで呼び出されたサブルーチンは、このタグで呼び出し元に戻すか、任意の場所にもどす必要があります。
.attrib:storage
+shortinfo
 戻り先のシナリオファイル名
+required
 no
+format
 シナリオファイル名
+info
 {\b storage属性} ( 戻り先のシナリオファイル名 )\par 必申{? : {\b no} \par 値 : {\b シナリオファイル名} \par \par　戻り先のシナリオファイルを指定します。storage 属性を省略して、target 属性だけが書かれていると、現在のシナリオファイル内であると見なされます。
.attrib:target
+shortinfo
 戻り先のラベル名
+required
 no
+format
 ラベル名
+info
 {\b target属性} ( 戻り先のラベル名 )\par 必申{? : {\b no} \par 値 : {\b ラベル名} \par \par　戻り先のラベルを指定します。\par 　target 属性を省略して、storage 属性だけがかかれていると、ファイルの先頭から実行されます。\par 
.attrib:countpage
+shortinfo
 「読んだ」と見なすか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b countpage属性} ( 「読んだ」と見なすか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　呼び出し元に戻るときに、この return タグのある場所のラベルを「読んだ」とみなすかどうかを指定します。\par 　戻る際にそのページが「読んだ」ことになっては困る場合に false を指定します。

*ruby
.shortinfo
 ルビ指定
.remarks
 {\b rubyタグ} ( ルビ指定 )\par \par 　次の一文字に対するルビを指定します。\par 　ルビを表\示させたい場合は毎回指定してください。\par 　複数の文字にルビを振る場合は、一文字毎にルビを指定する必要があります。\par \par 例:\par {\f3 　[ruby text="かん"]漢[ruby text="じ"]字}
.attrib:text
+shortinfo
 ルビ
+required
 yes
+format
 ルビとして表示される文字
+info
 {\b text属性} ( ルビ )\par 必申{? : {\b yes} \par 値 : {\b ルビとして表\示される文字} \par \parルビとして表\示させる文字を指定します。

*s
.shortinfo
 停止する
.remarks
 {\b sタグ} ( 停止する )\par \par 　シナリオファイルの実行を停止します。\par 　link タグで選択肢待ちをするときに、このタグを書きます。\par 

*save
.shortinfo
 栞の保存
.remarks
 {\b saveタグ} ( 栞の保存 )\par \par 　非フリーセーブモードにおいて、指定された栞に保存します。メニューから「栞をはさむ」を選択された場合と同じ動作をします。
.attrib:place
+shortinfo
 保存場所
+required
 no
+format
 0または正の整数(0がデフォルト)
+info
 {\b place属性} ( 保存場所 )\par 必申{? : {\b no} \par 値 : {\b 0または正の整数(0がデフォルト)} \par \par　栞の番号を指定します。省略すると 0 が指定されたと見なされます。\par 　どのような数値を指定してもかまいませんが、999 〜 1999 は特別な意味を持つ栞です。
.attrib:ask
+shortinfo
 確認をするか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b ask属性} ( 確認をするか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、栞を保存するかどうかの確認をします。false を指定すると栞を保存するかどうかの確認はありません。この属性を省略すると false を指定したとみなされます。\par 

*seopt
.shortinfo
 効果音の設定
.remarks
 {\b seoptタグ} ( 効果音の設定 )\par \par 　効果音の個々のバッファに対する設定を変更します。\par 
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　設定を変更するバッファを指定します。\par 　省略すると 0 であると見なされます。
.attrib:volume
+shortinfo
 音量
+required
 no
+format
 音量% (0〜100)
+info
 {\b volume属性} ( 音量 )\par 必申{? : {\b no} \par 値 : {\b 音量% (0〜100)} \par \par　効果音の音量を % で指定します。初期状態の KAG では100 % です。省略すれば音量は変更されません。\par 　100 が上限です。音量の予}制のみをサポートします(増幅は音源の特性上、できません)。
.attrib:gvolume
+shortinfo
 大域音量
+required
 no
+format
 音量% (0〜100)
+info
 {\b gvolume属性} ( 大域音量 )\par 必申{? : {\b no} \par 値 : {\b 音量% (0〜100)} \par \par　効果音の大域音量を % で指定します。初期状態の KAG では100 % です。省略すれば音量は変更されません。\par 　大域音量は volume 属性で指定する通常の音量とは別に、バッファの音量を制御することができるもう一つのものです。実際に再生される音量は、通常の音量と大域音量を掛け合わせた音量になります( たとえば volume=50 で gvolume=75 ならば 50(%)*75(%)=37.5(%) )\par 　大域音量は効果音バッファごとにシステム変数に記録され、次回起動時にも引き継がれます ( 各栞に保存されるわけではありません )。
.attrib:pan
+shortinfo
 パン
+required
 no
+format
 パン (-100〜0〜100)
+info
 {\b pan属性} ( パン )\par 必申{? : {\b no} \par 値 : {\b パン (-100〜0〜100)} \par \par　パン (左右の音像位置) を指定します。\par 　-100 が完全な左、0 が中央、100 が完全な右です。

*showhistory
.shortinfo
 メッセージ履歴の表示
.remarks
 {\b showhistoryタグ} ( メッセージ履歴の表\示 )\par \par 　メッセージ履歴を表\示します。\par 　メッセージ履歴の表\示を終了すると、実行は継続します。

*startanchor
.shortinfo
 「最初に戻る」の有効・無効
.remarks
 {\b startanchorタグ} ( 「最初に戻る」の有効・無効 )\par \par 　Config.tjs 内で goToStartMenuItem.visible =true; と設定すると、システム|最初に戻るメニューが表\示されますが、それが選択された場合に戻る場所をこのタグで指定します。\par 　戻る場所を指定する場合は enabled 属性を省略するか true を指定しますが、このタグはセーブ可能\なラベルの直後に書いてください。このラベルを通過しない間は、システム|最初に戻るのメニューは使用不可能\になります。\par 　enabled 属性に false を指定すると「最初に戻る」の機能\は無効になります。\par 　「最初に戻る」の動作は、このタグの書かれた場所のラベルの栞を読み出す動作に似ていますが、ゲーム変数の内容は保持されたままとなります。\par 
.attrib:enabled
+shortinfo
 有効・無効の設定
+required
 no
+format
 "true"(デフォルト) または "false"
+info
 {\b enabled属性} ( 有効・無効の設定 )\par 必申{? : {\b no} \par 値 : {\b "true"(デフォルト) または "false"} \par \par　"true" を指定するかこの属性を省略すると、このタグのあるすぐ前のセーブ可能\なラベルが「最初に戻る」の戻り先であるとされ、「最初に戻る」の機能\が有効になります。\par 　"false" を指定すると「最初に戻る」の機能\が無効になります。

*stopbgm
.shortinfo
 BGM 演奏の停止
.remarks
 {\b stopbgmタグ} ( BGM 演奏の停止 )\par \par 　BGM 演奏を停止します。

*stopmove
.shortinfo
 レイヤの自動移動の停止
.remarks
 {\b stopmoveタグ} ( レイヤの自動移動の停止 )\par \par 　move タグで開始した自動移動を強制的に中止します。すべてのレイヤの自動移動が停止します。\par 　画像は最終位置に移動し、最終の表\示濃度になります。

*stopquake
.shortinfo
 画面揺らしの停止
.remarks
 {\b stopquakeタグ} ( 画面揺らしの停止 )\par \par 　quakeタグで開始した揺れを終了させます。\par 　quake タグの time 属性で指定した回数を待たずに揺れを終了させることができます。

*stopse
.shortinfo
 効果音再生の停止
.remarks
 {\b stopseタグ} ( 効果音再生の停止 )\par \par 　効果音再生を停止します。
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　効果音を停止するバッファを指定します。\par 　省略すると 0 であると見なされます。

*stoptrans
.shortinfo
 レイヤのトランジションの停止
.remarks
 {\b stoptransタグ} ( レイヤのトランジションの停止 )\par \par 　trans タグで開始したトランジションを強制的に中止します。すべてのレイヤのトランジションが停止します。\par 　画像は完全に切り替わった状態になります。

*stopvideo
.shortinfo
 ビデオ/SWF再生の停止
.remarks
 {\b stopvideoタグ} ( ビデオ/SWF再生の停止 )\par \par 　ビデオ/SWFの再生を停止します。\par 

*store
.shortinfo
 栞機能の設定
.remarks
 {\b storeタグ} ( 栞機能\の設定 )\par \par 　栞機能\を有効にするか、無効にするかを指定します。ユーザーにセーブ・ロードの動作を行わせたくない場合に {\f3 [store enabled=false]} とします。 \par 　disablestore の機能\と違うのは、store タグは栞をはさむ・たどるの両方の機能\を恒久的に設定するのに対し、disablestore タグはセーブ可能\なラベルを通過するまでの間の一時的な間だけ「栞をはさむ」または「たどる」の機能\を無効にするだけです。使い勝手は disablestore の方が良いでしょう。
.attrib:enabled
+shortinfo
 有効・無効の設定
+required
 yes
+format
 true または false
+info
 {\b enabled属性} ( 有効・無効の設定 )\par 必申{? : {\b yes} \par 値 : {\b true または false} \par \par　栞機能\を有効にする場合は true 、無効にする場合は false を指定します。false を指定すると栞によるセーブ・ロードができなくなります。

*style
.shortinfo
 スタイルの設定
.remarks
 {\b styleタグ} ( スタイルの設定 )\par \par 　行のスタイルを指定します。\par 　KAG ドキュメントの「文字表\示の詳細」も参照してください。　これらの属性は、resetstyle タグや ct タグが実行されると、デフォルトの値に戻ります。\par 　行のスタイルはメッセージレイヤごとに個別に設定できます。
.attrib:align
+shortinfo
 文字揃え
+required
 no
+format
 "left"/"top" または "center" または "right"/"bottom" または "default"
+info
 {\b align属性} ( 文字揃え )\par 必申{? : {\b no} \par 値 : {\b "left"/"top" または "center" または "right"/"bottom" または "default"} \par \par　行の文字揃えを指定します。\par 　横書きの場合、"left" を指定すると左揃え(デフォルト)、"center" を指定するとセンタリング、"right" を指定すると右揃えになります。"default" を指定すると左揃えになります。\par 　縦書きの場合、"top" を指定すると上詰め(デフォルト)、"center" を指定するとセンタリング、"bottom" を指定すると下詰めになります。"default" を指定すると上詰めになります。
.attrib:linespacing
+shortinfo
 行間
+required
 no
+format
 行間 (pixel単位)
+info
 {\b linespacing属性} ( 行間 )\par 必申{? : {\b no} \par 値 : {\b 行間 (pixel単位)} \par \par　行間を pixel 単位で指定します。一行全体の幅は、この属性で指定した値と linesize 属性で指定した値を足した値になります。
.attrib:pitch
+shortinfo
 字間
+required
 no
+format
 字間オフセット(pixel単位)
+info
 {\b pitch属性} ( 字間 )\par 必申{? : {\b no} \par 値 : {\b 字間オフセット(pixel単位)} \par \par　字間のオフセットを pixel 単位で指定します。　0 を指定すると、その文字のデフォルトの字間で表\示されます。負の数、たとえば -1 を指定すると、その文字のデフォルトの字間 -1 のピクセル数分、文字が詰めて表\示されます。正の数を表\示すると字間をあけることが出来ます。
.attrib:linesize
+shortinfo
 文字サイズの予約サイズ
+required
 no
+format
 予約サイズ(pixel単位) または "default"
+info
 {\b linesize属性} ( 文字サイズの予\約サイズ )\par 必申{? : {\b no} \par 値 : {\b 予\約サイズ(pixel単位) または "default"} \par \par　行の幅を指定します。\par 　"default" を指定すると行の幅は自動的に決定されますが、途中で文字が大きくなると、その大きい文字に合わせて文字の再配置が行われます。\par 　再配置を防ぐには、あらかじめこの属性で、文字の最大の大きさを指定してください。\par 
.attrib:autoreturn
+shortinfo
 自動改行・改ページの設定
+required
 no
+format
 "true" または "false" または "default"
+info
 {\b autoreturn属性} ( 自動改行・改ページの設定 )\par 必申{? : {\b no} \par 値 : {\b "true" または "false" または "default"} \par \par　自動改行・自動改ページを行わせるかどうかを指定します。\par 　"true" または "default" を指定すると自動改行・改ページを行います。\par 　"false" を指定すると自動改行・改ページは行われませんので、表\示する文字が長すぎてもメッセージレイヤをはみ出して描画されます。

*tempload
.shortinfo
 栞のメモリ上からの読み込み
.remarks
 {\b temploadタグ} ( 栞のメモリ上からの読み込み )\par \par 　tempsave タグで保存したメモリ上の「栞」を読み出します。\par 　ただ、通常の栞の読み出しと違うのは、保存した位置に実行が移動しないで、そのまま実行が続行するところと、変数の内容は変化しないことです。\par 　メッセージレイヤも消去されません。また、se、bgm、backlay 属性により、ロード時の挙動を制御することができます。\par 　主な用途は、たとえばデモシーンなどに入るまえにいったん tempsave タグで状態を保存し、デモシーンが終わったところでこのタグで復帰するというように、いちいちすべての設定を元に戻すのが面倒なときに、一気に設定を元に戻す用途で使います。\par 　rclick で指定した右クリック時のサブルーチンで一時的に情報を保存するのにも使うことができます。\par 
.attrib:place
+shortinfo
 保存場所
+required
 no
+format
 0または正の整数(0がデフォルト)
+info
 {\b place属性} ( 保存場所 )\par 必申{? : {\b no} \par 値 : {\b 0または正の整数(0がデフォルト)} \par \par　栞の番号を指定します。省略すると 0 が指定されたと見なされます。\par 
.attrib:se
+shortinfo
 効果音を読み込むか
+required
 no
+format
 true (デフォルト) または false
+info
 {\b se属性} ( 効果音を読み込むか )\par 必申{? : {\b no} \par 値 : {\b true (デフォルト) または false} \par \par　読み込むときに、効果音の情報も読み込むかを指定します。\par 　false を指定すると効果音の情報は読み込みません ( 現在の効果音がそのまま鳴り続けます )。
.attrib:bgm
+shortinfo
 BGM を読み込むか
+required
 no
+format
 true (デフォルト) または false
+info
 {\b bgm属性} ( BGM を読み込むか )\par 必申{? : {\b no} \par 値 : {\b true (デフォルト) または false} \par \par　読み込むときに、BGM の情報も読み込むかを指定します。\par 　false を指定すると BGM の情報は読み込みません ( 現在の BGM がそのまま演奏され続けます )。
.attrib:backlay
+shortinfo
 表ページを裏ページに読み込むか
+required
 no
+format
 true または false (デフォルト)
+info
 {\b backlay属性} ( 表\ページを裏ページに読み込むか )\par 必申{? : {\b no} \par 値 : {\b true または false (デフォルト)} \par \par　読み込むときに、前景レイヤの情報は読み込まずに、かつ背景レイヤには前景レイヤの情報を読み込むかどうかを指定します。\par 　true を指定すると、メモリ上の「栞」では表\ページとして記録されている情報が、実際には裏ページに読み込まれ、表\ページはそのままになります。

*tempsave
.shortinfo
 栞のメモリ上への保存
.remarks
 {\b tempsaveタグ} ( 栞のメモリ上への保存 )\par \par 　メモリ上の「栞」に現在の位置での情報を挟みます。ここで保存されるのはファイルではなくメモリ上の栞ですので、KAG が終了しても内容は保持されませんし、通常の「栞」とはなんの関係も持ちません。\par 　また、最後に通過したラベル位置での状態が保存されるのではなくて、このタグのある位置での情報が記録されます。また、変数の内容は記録されません。\par 　tempload タグと組み合わせて使います。\par 
.attrib:place
+shortinfo
 保存場所
+required
 no
+format
 0または正の整数(0がデフォルト)
+info
 {\b place属性} ( 保存場所 )\par 必申{? : {\b no} \par 値 : {\b 0または正の整数(0がデフォルト)} \par \par　栞の番号を指定します。省略すると 0 が指定されたと見なされます。\par 　指定できる数値や保存箇所の個数に制限はありませんが、あまり大きな整数は指定しないでください。\par 

*title
.shortinfo
 タイトル指定
.remarks
 {\b titleタグ} ( タイトル指定 )\par \par 　タスクバー、およびウィンドウキャプション ( タイトルバー ) に表\示する文字を指定します。\par 　通常はゲーム等のタイトルです。
.attrib:name
+shortinfo
 タイトル
+required
 yes
+format
 タイトル
+info
 {\b name属性} ( タイトル )\par 必申{? : {\b yes} \par 値 : {\b タイトル} \par \par　表\示したいタイトルを指定してください。

*trace
.shortinfo
 コンソールへ値の出力
.remarks
 {\b traceタグ} ( コンソ\ールへ値の出力 )\par \par 　exp で示された式を評価し、結果をコンソ\ールに出力します。\par 　コンソ\ールは Shift+F4 で表\示されるほか、Config.tjs 内で logMode を設定することにより、ファイルに記録することもできます。\par \par 例:\par {\f3 [trace exp="f.test"]\par ; ↑ ゲーム変数 test の内容を コンソ\ール に出力する\par ; コンソ\ールには以下のように表\示される ( 例 )\par ;  6:45:34 ▼[trace] expression="f.test"  type of result=Number  result=500\par }
.attrib:exp
+shortinfo
 TJS 式
+required
 yes
+format
 TJS 式
+info
 {\b exp属性} ( TJS 式 )\par 必申{? : {\b yes} \par 値 : {\b TJS 式} \par \par　評価する TJS 式を指定します。

*trans
.shortinfo
 レイヤのトランジション
.remarks
 {\b transタグ} ( レイヤのトランジション )\par \par 　指定したレイヤでトランジションを行います。\par 　トランジションは、常に裏ページの対象のレイヤが、表\ページの対象のレイヤに入れ替わる方向で行われます。\par 　トランジション後は、表\ページの対象のレイヤの画像、位置、サイズ、可視・不可視の状態は裏ページの対象のレイヤと同じになります。\par 　一般的に method=universal のトランジションは、backlay タグで表\ページの情報を裏画面にコピーし、裏ページに対して image や layopt タグでレイヤを操作し、この trans タグを layer=base children=true で使用し、wt タグでトランジションの終了を待ちます。\par 　macro タグでこの一連の操作をソ}クロ化しておくと便利かもしれません。\par 　トランジション中は、文字表\示ができなかったり、遅くなったりします。また、基暴{的に状態は「不定」なので、位置移動や表\示・非表\示の変更はトランジションの終了を待ってからにしてください。\par 　通常は背景レイヤに対してトランジションを行わせますが、特殊な用途に使用する目的で前景レイヤやメッセージレイヤに対して個別にトランジションを行わせることができます。しかし、「裏ページ・面画面のそのレイヤのサイズは同一でなければならない」という制限があります。\par 　暴{当に特殊な用途 ( 一概に言えませんが ) に用いる以外は、layer には baseを指定してください。\par \par 　このタグは、トランジションの終了を待ちません。トランジションの終了を待つには wt タグを使用してください。\par \par 例:\par {\f3 [backlay]\par [image storage=fg0 layer=0 page=back]\par [trans method=universal time=1500 rule=trans0 vague=64]\par [wt]\par }
.attrib:layer
+shortinfo
 対象レイヤ
+required
 no
+format
 "base"(デフォルト) または 0 以上の整数 またはは message0 または message1 または message
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b no} \par 値 : {\b "base"(デフォルト) または 0 以上の整数 またはは message0 または message1 または message} \par \par　対象となるレイヤを指定します。\par 　base を指定すると 背景レイヤ になります。\par 　0 以上の整数を指定すると前景レイヤになります。\par 　message0 または message1 を指定するとメッセージレイヤになります。単に message とのみ指定した場合は、current タグで指定した現在の操作対象のメッセージレイヤが対象になります ( 裏ページ・表\ページのどちらのメッセージレイヤが操作対象であっても裏ページ→表\ページへのトランジションが行われます )。\par 　通常は base に対してトランジションを行わせます。\par 　base 以外に対してトランジションを行わせる場合はかなりの制限があります。
.attrib:children
+shortinfo
 子レイヤも含めるか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b children属性} ( 子レイヤも含めるか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　トランジションの対象に子レイヤも含めるかどうかを指定します。true を指定すると子レイヤも含めます。false を指定すると子レイヤは含まれません。\par 　layer=base と指定したときのみ使用できます。\par 　子レイヤには、前景レイヤとメッセージレイヤが含まれます。\par 
.attrib:time
+shortinfo
 トランジション時間
+required
 yes
+format
 時間(ms単位)
+info
 {\b time属性} ( トランジション時間 )\par 必申{? : {\b yes} \par 値 : {\b 時間(ms単位)} \par \par　トランジションを行っている時間を数値で指定します。
.attrib:method
+shortinfo
 トランジションのタイプ
+required
 no
+format
 "universal" (デフォルト) または "scroll" またはその他
+info
 {\b method属性} ( トランジションのタイプ )\par 必申{? : {\b no} \par 値 : {\b "universal" (デフォルト) または "scroll" またはその他} \par \par　トランジションのタイプを指定します。\par "universal" を指定すると、 rule, vague, time 属性に従ってユニバーサルトランジションが行われます。\par "crossfade" を指定すると、time 属性に従って、単純なクロスフェードが行われます。\par "scroll" を指定すると、from, stay を元にしてスクロールトランジションが行われます。\par 　プラグインによって使用可能\になるトランジションのタイプもあります。その場合は method 属性にはそのトランジションの名前を指定し、また、トランジションによっては別の属性を指定しなければならない場合があります。
.attrib:rule
+shortinfo
 ルール画像
+required
 method=universal のときのみ
+format
 ルール画像名
+info
 {\b rule属性} ( ルール画像 )\par 必申{? : {\b method=universal のときのみ} \par 値 : {\b ルール画像名} \par \par　ユニバーサルトランジションに用いるルール画像を指定します。
.attrib:vague
+shortinfo
 あいまい領域値
+required
 method=universal のときのみ
+format
 あいまい領域値 (0〜)
+info
 {\b vague属性} ( あいまい領域値 )\par 必申{? : {\b method=universal のときのみ} \par 値 : {\b あいまい領域値 (0〜)} \par \par　ユニバーサルトランジションに適用する あいまい領域値を指定します。
.attrib:from
+shortinfo
 スクロールされる方向
+required
 method=scroll のときのみ
+format
 "left" または "top" または "right" または "bottom"
+info
 {\b from属性} ( スクロールされる方向 )\par 必申{? : {\b method=scroll のときのみ} \par 値 : {\b "left" または "top" または "right" または "bottom"} \par \par　スクロールトランジションにおいて、裏ページの画像がどの方向から現れてくるかを指定します。"left" = 左、"top"= 上、"right" = 右、"bottom" = 下
.attrib:stay
+shortinfo
 元画像がその場に居座るか
+required
 method=scroll のときのみ
+format
 "stayfore" または "stayback" または "nostay"(デフォルト)
+info
 {\b stay属性} ( 元画像がその場に居座るか )\par 必申{? : {\b method=scroll のときのみ} \par 値 : {\b "stayfore" または "stayback" または "nostay"(デフォルト)} \par \par　スクロールトランシジョンにおいて、表\ページの画像がその場にとどまったまま、裏ページの画像が外部からスクロールしてくるか ( "stayfore" )、\par 　表\ページの画像がスクロールして出ていく裏から、裏ページの画像がその場にとどまったまま現れてくるか( "stayback" )、\par 　または表\ページの画像と裏ページの画像が連結されて一緒に移動しながら切り替わっていくか ( "nostay" )、を指定します。

*unlocklink
.shortinfo
 リンクのロックの解除
.remarks
 {\b unlocklinkタグ} ( リンクのロックの解除 )\par \par 　すべてのメッセージレイヤのリンクのロックを解除します。\par 　リンクやソ{タンは、一回選択されると、再び新しいリンクやソ{タンが作成されるまで選択不能\になります ( エディットやチェックソ{ックスも操作不能\になります ) が、それを強制的に再び選択可能\にするためにこのタグがあります。\par 　逆の動作をする locklink タグもあります。\par 

*unlocksnapshot
.shortinfo
 スナップショットのロックの解除
.remarks
 {\b unlocksnapshotタグ} ( スナップショットのロックの解除 )\par \par 　locksnapshot でロックしたスナップショットのロックを解除します。\par 

*video
.shortinfo
 ビデオ/SWF表示領域の属性を指定
.remarks
 {\b videoタグ} ( ビデオ/SWF表\示領域の属性を指定 )\par \par 　ビデオ/SWF表\示領域の属性を指定します。\par 　ビデオ/SWF表\示領域はデフォルトで非表\示なので、このタグで表\示状態にしないと表\示されません。\par 　ビデオ/SWF表\示領域はレイヤではありません。すべてのレイヤよりも手前に表\示されます。
.attrib:visible
+shortinfo
 可視・不可視
+required
 no
+format
 true または false
+info
 {\b visible属性} ( 可視・不可視 )\par 必申{? : {\b no} \par 値 : {\b true または false} \par \par　ビデオ/SWF の表\示領域を表\示するか ( true の場合 )、非表\示にするか ( false の場合 ) を指定します。 非表\示でもビデオ/SWFは再生できます ( 当然表\示されません )。\par 
.attrib:left
+shortinfo
 左端位置
+required
 no
+format
 左端位置 ( pixel 単位 )
+info
 {\b left属性} ( 左端位置 )\par 必申{? : {\b no} \par 値 : {\b 左端位置 ( pixel 単位 )} \par \par　表\示領域の左端位置を指定します。
.attrib:top
+shortinfo
 上端位置
+required
 no
+format
 上端位置 ( pixel 単位 )
+info
 {\b top属性} ( 上端位置 )\par 必申{? : {\b no} \par 値 : {\b 上端位置 ( pixel 単位 )} \par \par　表\示領域の上端位置を指定します。
.attrib:width
+shortinfo
 幅
+required
 no
+format
 幅 ( pixel 単位 )
+info
 {\b width属性} ( 幅 )\par 必申{? : {\b no} \par 値 : {\b 幅 ( pixel 単位 )} \par \par　表\示領域の幅を指定します。
.attrib:height
+shortinfo
 高さ
+required
 no
+format
 高さ ( pixel 単位 )
+info
 {\b height属性} ( 高さ )\par 必申{? : {\b no} \par 値 : {\b 高さ ( pixel 単位 )} \par \par　表\示領域の高さを指定します。

*wa
.shortinfo
 アニメーションの停止待ち
.remarks
 {\b waタグ} ( アニメーションの停止待ち )\par \par 　任意のセグメントのアニメーションの停止を待ちます。\par 　アニメーションが停止するためには、asd ファイル上で s タグか home タグを通過する必要があります。\par 
.attrib:layer
+shortinfo
 対象レイヤ
+required
 yes
+format
 "base" または 0 以上の整数
+info
 {\b layer属性} ( 対象レイヤ )\par 必申{? : {\b yes} \par 値 : {\b "base" または 0 以上の整数} \par \par　アニメーションの停止を待つするレイヤを指定します。\par "base" を指定すると 背景レイヤ、 0 以上の整数を指定すると、対応する前景レイヤを表\します。　指定したレイヤには、アニメーション情報が読み込まれていないとなりません。
.attrib:page
+shortinfo
 ページ
+required
 no
+format
 "back" または "fore"
+info
 {\b page属性} ( ページ )\par 必申{? : {\b no} \par 値 : {\b "back" または "fore"} \par \par　表\(fore)画面を対象とするか、裏(back)画面を対象とするかを指定します。省略すると表\ページであると見なされます。
.attrib:seg
+shortinfo
 セグメント
+required
 yes
+format
 0 または正の整数
+info
 {\b seg属性} ( セグメント )\par 必申{? : {\b yes} \par 値 : {\b 0 または正の整数} \par \par　この属性で指定したセグメント番号のアニメーションの停止を待ちます。\par 　セグメント番号 0 も指定できます。

*wait
.shortinfo
 ウェイトを入れる
.remarks
 {\b waitタグ} ( ウェイトを入れる )\par \par 　ウェイトを入れます。\par 　現在の時間からを待つ (mode="normal") か、あるいは resetwaitタグで指定した時間原点からの時間を待つ (mode="until") ことができます。\par 　mode="until" の場合、すでに指定した時間を過ぎていた場合は kag.lastWaitTime という変数に 0 が入ります。ですので、[if exp="kag.lastWaitTime != 0"] のようにして判断すれば、「まだ指定した時間を過ぎていない場合」(多くの場合、処理が追いついている場合)かどうかを判断できます。\par 
.attrib:time
+shortinfo
 時間
+required
 yes
+format
 時間(ミリ秒)
+info
 {\b time属性} ( 時間 )\par 必申{? : {\b yes} \par 値 : {\b 時間(ミリ秒)} \par \par　ウェイトをミリ秒で指定します。
.attrib:mode
+shortinfo
 ウェイトの方式
+required
 no
+format
 "normal"(デフォルト) または "until"
+info
 {\b mode属性} ( ウェイトの方式 )\par 必申{? : {\b no} \par 値 : {\b "normal"(デフォルト) または "until"} \par \par　ウェイトの方式を指定します。\par 　"normal" を指定するか、この属性を省略すると単に time で指定する時間だけ待つことになります。\par 　"until" を指定すると、resetwait タグで設定した時間原点からの経過秒を time で指定したとみなし、指定した時間までを待ちます。すでに指定した時間を過ぎていた場合は待ちません。\par 
.attrib:canskip
+shortinfo
 スキップできるか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b canskip属性} ( スキップできるか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　このウェイトを、ソ}ウスのクリックやキーソ{ードでスキップできるかを指定します。false を指定すると、ソ}ウスのクリックやキーソ{ードでは、このウェイトをスキップできません。

*waitclick
.shortinfo
 クリックを待つ
.remarks
 {\b waitclickタグ} ( クリックを待つ )\par \par 　クリックを待ちます。\par 　l タグや p タグと違うのは、スキップできないことと、クリック待ち記号が表\示されないということ、待っている間は栞を挟む/たどるや、そのほかのスキップ操作などができないなど、です。\par 

*waittrig
.shortinfo
 トリガを待つ
.remarks
 {\b waittrigタグ} ( トリガを待つ )\par \par 　TJS2 スクリプトが trigger メソ\ッドを呼ぶのを待ちます。\par 　「トリガ」は イベント駆動型のプログラミングモデルで動作する KAG において、シナリオ進行をいったん停止し、なんらかの処理を待つために使われる機構\です。\par 　このタグは、TJS2 スクリプトの処理が終わるのを待つのに使います。\par 　たとえばトリガ名 "click" は、ソ}ウスがクリックされたときに発動するトリガ ( これについては KAG 内部ですでに定義されているトリガ ) で、{\f3 [waittrig name="click"]}と記述することによりソ}ウスのクリックを待つことができます。\par 
.attrib:name
+shortinfo
 トリガ名
+required
 yes
+format
 トリガ名
+info
 {\b name属性} ( トリガ名 )\par 必申{? : {\b yes} \par 値 : {\b トリガ名} \par \par　待つトリガ名を指定します。　kag オブジェクト ( MainWindow クラス ) の trigger メソ\ッドで引数に同名のトリガ名を指定することにより、トリガを発動し、待ち状態を解除することができます。\par 
.attrib:canskip
+shortinfo
 スキップできるか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定すると、クリックにより、待つ動作をスキップすることができます。\par 
.attrib:onskip
+shortinfo
 スキップされたとき
+required
 no
+format
 TJS式
+info
 {\b onskip属性} ( スキップされたとき )\par 必申{? : {\b no} \par 値 : {\b TJS式} \par \par　クリックによりスキップされたときに実行する TJS式 を指定します。\par 

*wb
.shortinfo
 BGM フェードの終了待ち
.remarks
 {\b wbタグ} ( BGM フェードの終了待ち )\par \par 　BGM のフェードアウト・フェードインの終了を待ちます。
.attrib:canskip
+shortinfo
 スキップできるかどうか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるかどうか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定するとクリックでフェードの終了待ちをスキップできます。\par 　false を指定するとスキップできません。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　BGM フェードをスキップした場合は、音量は直ちにフェードの到達音量になります。

*wc
.shortinfo
 文字数分のウェイトを入れる
.remarks
 {\b wcタグ} ( 文字数分のウェイトを入れる )\par \par 　文字数分のウェイトを入れます。
.attrib:time
+shortinfo
 文字数
+required
 yes
+format
 文字数
+info
 {\b time属性} ( 文字数 )\par 必申{? : {\b yes} \par 値 : {\b 文字数} \par \par　ここで指定した文字数を表\示するのと同じだけの時間を待ちます。 一文字に必要な時間は delay タグで指定します。

*wf
.shortinfo
 効果音フェードの終了待ち
.remarks
 {\b wfタグ} ( 効果音フェードの終了待ち )\par \par 　効果音のフェードアウト・フェードインの終了を待ちます。
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　フェードの終了を待つバッファを指定します。\par 　省略すると 0 であると見なされます。
.attrib:canskip
+shortinfo
 スキップできるかどうか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるかどうか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定するとクリックでフェード終了待ちをスキップできます。\par 　false を指定するとスキップできません。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　効果音フェードをスキップした場合は、音量は直ちにフェードの到達音量になります。

*wl
.shortinfo
 BGM 再生の終了待ち
.remarks
 {\b wlタグ} ( BGM 再生の終了待ち )\par \par 　BGM 再生の終了を待ちます。　BGM が繰り返し再生の場合は待ちません。
.attrib:canskip
+shortinfo
 スキップできるかどうか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるかどうか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定するとクリックで BGM 再生の終了待ちをスキップできます。\par 　false を指定するとスキップできません。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　途中で再生終了待ちをスキップした場合は、BGM は直ちに停止します。\par 

*wm
.shortinfo
 自動移動の終了待ち
.remarks
 {\b wmタグ} ( 自動移動の終了待ち )\par \par 　自動移動の終了を待ちます。
.attrib:canskip
+shortinfo
 スキップできるかどうか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b canskip属性} ( スキップできるかどうか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　true を指定するとクリックでトランジションの終了待ちをスキップできます。\par 　false を指定するとスキップできません。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　途中で自動移動の終了待ちをスキップした場合は、直ちに最終位置に移動します。\par 

*wq
.shortinfo
 画面揺らしの終了待ち
.remarks
 {\b wqタグ} ( 画面揺らしの終了待ち )\par \par 　quake タグで開始した画面揺らしの終了を待ちます。
.attrib:canskip
+shortinfo
 スキップできるかどうか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるかどうか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　true を指定するとクリックでトランジションの終了待ちをスキップできます。\par 　false を指定するとスキップできません。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　途中でトランジション終了待ちをスキップした場合は、直ちに切り替わり後の状態に移行します。\par 

*ws
.shortinfo
 効果音再生の終了待ち
.remarks
 {\b wsタグ} ( 効果音再生の終了待ち )\par \par 　効果音再生の終了を待ちます。\par 　効果音が繰り返し再生の場合は待ちません。
.attrib:buf
+shortinfo
 効果音バッファ番号
+required
 no
+format
 効果音バッファ番号( 0(デフォルト) 〜 )
+info
 {\b buf属性} ( 効果音バッファ番号 )\par 必申{? : {\b no} \par 値 : {\b 効果音バッファ番号( 0(デフォルト) 〜 )} \par \par　再生終了を待つバッファを指定します。\par 　省略すると 0 であると見なされます。
.attrib:canskip
+shortinfo
 スキップできるか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　効果音再生をソ}ウスのクリックでスキップできるかを指定します。\par 　true を指定すると効果音再生をソ}ウスのクリックでスキップできるようになります。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　また、スキップされると効果音の再生も自動的に停止します。

*wt
.shortinfo
 トランジションの終了待ち
.remarks
 {\b wtタグ} ( トランジションの終了待ち )\par \par 　トランジションの終了を待ちます。
.attrib:canskip
+shortinfo
 スキップできるかどうか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b canskip属性} ( スキップできるかどうか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　true を指定するとクリックでトランジションの終了待ちをスキップできます。\par 　false を指定するとスキップできません。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　途中でトランジション終了待ちをスキップした場合は、直ちに切り替わり後の状態に移行します。\par 

*wv
.shortinfo
 ビデオ再生の終了待ち
.remarks
 {\b wvタグ} ( ビデオ再生の終了待ち )\par \par 　ビデオ再生の終了を待ちます。\par 　SWF(Sockwave Flash) の再生の終了を待つことはできません。wait タグ等で必要な時間を待つなどをして対処してください。\par 
.attrib:canskip
+shortinfo
 スキップできるか
+required
 no
+format
 true または false(デフォルト)
+info
 {\b canskip属性} ( スキップできるか )\par 必申{? : {\b no} \par 値 : {\b true または false(デフォルト)} \par \par　ビデオ再生をソ}ウスのクリックでスキップできるかを指定します。\par 　true を指定すると ビデオ再生をソ}ウスのクリックでスキップできるようになります。\par 　ただし clipskip タグでクリックスキップが禁止されているとこのスキップもできないので注意してください。\par 　また、スキップされると ビデオの再生も自動的に停止します。

*xchgbgm
.shortinfo
 BGM を入れ替える
.remarks
 {\b xchgbgmタグ} ( BGM を入れ替える )\par \par 　BGM を入れ替えます。\par 　このタグを使う場合は、Config.tjs で doubleBuffered を true に設定してください。
.attrib:storage
+shortinfo
 BGM ファイル名
+required
 yes
+format
 BGM ファイル名
+info
 {\b storage属性} ( BGM ファイル名 )\par 必申{? : {\b yes} \par 値 : {\b BGM ファイル名} \par \par　次に再生する BGM ファイル名または CD トラックを指定します。
.attrib:loop
+shortinfo
 ループするか
+required
 no
+format
 true(デフォルト) または false
+info
 {\b loop属性} ( ループするか )\par 必申{? : {\b no} \par 値 : {\b true(デフォルト) または false} \par \par　BGM をループするかを指定します。\par 　true を指定するとループします。false を指定するとループしません。\par 　省略すると true であると見なされます。
.attrib:time
+shortinfo
 フェード時間
+required
 yes
+format
 フェードを行っている時間 (ms単位)
+info
 {\b time属性} ( フェード時間 )\par 必申{? : {\b yes} \par 値 : {\b フェードを行っている時間 (ms単位)} \par \par　指定した時間で現在の曲のフェードアウトが行われた後、同じ時間で指定した曲のフェードインが行われます。
.attrib:overlap
+shortinfo
 オーバーラップ時間
+required
 no
+format
 オーバーラップを行う時間(ms単位)
+info
 {\b overlap属性} ( オーバーラップ時間 )\par 必申{? : {\b no} \par 値 : {\b オーバーラップを行う時間(ms単位)} \par \par　overlap に時間を設定すると、その時間分、フェードアウトとフェードインの時間が重なります。省略すると 0 であると見なされます。クロスフェードを行うときに指定します。
.attrib:volume
+shortinfo
 次の曲の音量
+required
 no
+format
 音量% (0〜100)
+info
 {\b volume属性} ( 次の曲の音量 )\par 必申{? : {\b no} \par 値 : {\b 音量% (0〜100)} \par \par　次の曲のフェード後に到達させる BGM の音量を % で指定します。\par 　省略すると、次の曲の音量は現在の音量と同じになります。\par 

